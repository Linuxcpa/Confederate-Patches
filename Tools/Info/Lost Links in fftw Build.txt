CVS/Entries:/buildlink3.mk/1.8/Fri Mar 20 19:24:56 2009//Tpkgsrc-2014Q2
Makefile:.include "../../mk/pthread.buildlink3.mk"
buildlink3.mk:# $NetBSD: buildlink3.mk,v 1.8 2009/03/20 19:24:56 joerg Exp $
fftw-link.txt:CVS/Entries:/buildlink3.mk/1.8/Fri Mar 20 19:24:56 2009//Tpkgsrc-2014Q2
fftw-link.txt:Makefile:.include "../../mk/pthread.buildlink3.mk"
fftw-link.txt:buildlink3.mk:# $NetBSD: buildlink3.mk,v 1.8 2009/03/20 19:24:56 joerg Exp $
fftw-link.txt:work/.extract_makevars.mk:_WRAP_PATH=	/boot/home/pkgsrc/pkgsrc/math/fftw/work/.buildlink/bin:/boot/home/pkgsrc/pkgsrc/math/fftw/work/.gcc/bin:/boot/home/pkgsrc/pkgsrc/math/fftw/work/.tools/bin:/boot/home/pkg/bin:.:/boot/home/config/non-packaged/bin:/boot/home/config/bin:/boot/system/non-packaged/bin:/bin:/boot/system/apps:/boot/system/preferences:/boot/system/non-packaged/apps/X11R6.4/bin
fftw-link.txt:work/.tools_makevars.mk:_WRAP_PATH=	/boot/home/pkgsrc/pkgsrc/math/fftw/work/.buildlink/bin:/boot/home/pkgsrc/pkgsrc/math/fftw/work/.gcc/bin:/boot/home/pkgsrc/pkgsrc/math/fftw/work/.tools/bin:/boot/home/pkg/bin:.:/boot/home/config/non-packaged/bin:/boot/home/config/bin:/boot/system/non-packaged/bin:/bin:/boot/system/apps:/boot/system/preferences:/boot/system/non-packaged/apps/X11R6.4/bin
fftw-link.txt:work/fftw-3.3.4/COPYING:consider it more useful to permit linking proprietary applications with the
fftw-link.txt:work/fftw-3.3.4/INSTALL:   Some systems require unusual options for compilation or linking that
fftw-link.txt:work/fftw-3.3.4/Makefile.in:	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CCLD) \
fftw-link.txt:work/fftw-3.3.4/Makefile.in:	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
fftw-link.txt:work/fftw-3.3.4/Makefile.in:	  ! -type d ! -perm -444 -links 1 -exec chmod a+r {} \; -o \
fftw-link.txt:work/fftw-3.3.4/NEWS:  linking to double/single multithreaded FFTW (thanks to Alessio Massaro).
fftw-link.txt:work/fftw-3.3.4/NEWS:* Added missing static keyword that prevented simultaneous linkage
fftw-link.txt:work/fftw-3.3.4/NEWS:* By popular demand, simultaneous linking to double precision (fftw),
fftw-link.txt:work/fftw-3.3.4/NEWS:* Support for linking to just those parts of FFTW that you need,
fftw-link.txt:work/fftw-3.3.4/NEWS:  greatly reducing the size of statically linked programs when
fftw-link.txt:work/fftw-3.3.4/README:benchmarks, links, and other information can be found at the FFTW home
fftw-link.txt:work/fftw-3.3.4/aclocal.m4:# symlink; some systems play weird games with the mod time of symlinks
fftw-link.txt:work/fftw-3.3.4/aclocal.m4:# (eg FreeBSD returns the mod time of the symlink's containing
fftw-link.txt:work/fftw-3.3.4/api/Makefile.in:	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
fftw-link.txt:work/fftw-3.3.4/api/api.h:   linking bench.exe will fail.  This has the advantage of forcing
fftw-link.txt:work/fftw-3.3.4/api/f77api.c:   for the Fortran linker, and we must omit the f77 API. */
fftw-link.txt:work/fftw-3.3.4/bootstrap.sh:autoreconf --verbose --install --symlink --force
fftw-link.txt:work/fftw-3.3.4/bootstrap.sh:autoreconf --verbose --install --symlink --force
fftw-link.txt:work/fftw-3.3.4/bootstrap.sh:autoreconf --verbose --install --symlink --force
fftw-link.txt:work/fftw-3.3.4/compile:# func_cl_dashL linkdir
fftw-link.txt:work/fftw-3.3.4/compile:  linker_opts="$linker_opts -LIBPATH:$file"
fftw-link.txt:work/fftw-3.3.4/compile:  linker_opts=
fftw-link.txt:work/fftw-3.3.4/compile:	    linker_opts="$linker_opts $flag"
fftw-link.txt:work/fftw-3.3.4/compile:	-Xlinker)
fftw-link.txt:work/fftw-3.3.4/compile:	  linker_opts="$linker_opts $2"
fftw-link.txt:work/fftw-3.3.4/compile:  if test -n "$linker_opts"; then
fftw-link.txt:work/fftw-3.3.4/compile:    linker_opts="-link$linker_opts"
fftw-link.txt:work/fftw-3.3.4/compile:  exec "$@" $linker_opts
fftw-link.txt:work/fftw-3.3.4/compile:  # '.c' file was seen then we are probably linking.  That is also
fftw-link.txt:work/fftw-3.3.4/config.guess:	if grep Novell /usr/include/link.h >/dev/null 2>/dev/null; then
fftw-link.txt:work/fftw-3.3.4/config.h.in:/* Define to dummy `main' function (if any) required to link to the Fortran
fftw-link.txt:work/fftw-3.3.4/config.h.in:   case), which must not contain underscores, for linking with Fortran. */
fftw-link.txt:work/fftw-3.3.4/configure:    # 2) DJGPP < 2.04 has no symlinks; `ln -s' creates a wrapper executable.
fftw-link.txt:work/fftw-3.3.4/configure:  LDFLAGS     linker flags, e.g. -L<lib dir> if you have libraries in a
fftw-link.txt:work/fftw-3.3.4/configure:  LIBS        libraries to pass to the linker, e.g. -l<library>
fftw-link.txt:work/fftw-3.3.4/configure:# ac_fn_c_try_link LINENO
fftw-link.txt:work/fftw-3.3.4/configure:# Try to link conftest.$ac_ext, and return whether this succeeded.
fftw-link.txt:work/fftw-3.3.4/configure:ac_fn_c_try_link ()
fftw-link.txt:work/fftw-3.3.4/configure:  if { { ac_try="$ac_link"
fftw-link.txt:work/fftw-3.3.4/configure:  (eval "$ac_link") 2>conftest.err
fftw-link.txt:work/fftw-3.3.4/configure:  # interfere with the next link command; also delete a directory that is
fftw-link.txt:work/fftw-3.3.4/configure:} # ac_fn_c_try_link
fftw-link.txt:work/fftw-3.3.4/configure:# Try to link conftest.$ac_ext, and return whether this succeeded. Assumes
fftw-link.txt:work/fftw-3.3.4/configure:  if { { ac_try="$ac_link"
fftw-link.txt:work/fftw-3.3.4/configure:  (eval "$ac_link") 2>&5
fftw-link.txt:work/fftw-3.3.4/configure:if ac_fn_c_try_link "$LINENO"; then :
fftw-link.txt:work/fftw-3.3.4/configure:# ac_fn_f77_try_link LINENO
fftw-link.txt:work/fftw-3.3.4/configure:# Try to link conftest.$ac_ext, and return whether this succeeded.
fftw-link.txt:work/fftw-3.3.4/configure:ac_fn_f77_try_link ()
fftw-link.txt:work/fftw-3.3.4/configure:  if { { ac_try="$ac_link"
fftw-link.txt:work/fftw-3.3.4/configure:  (eval "$ac_link") 2>conftest.err
fftw-link.txt:work/fftw-3.3.4/configure:  # interfere with the next link command; also delete a directory that is
fftw-link.txt:work/fftw-3.3.4/configure:} # ac_fn_f77_try_link
fftw-link.txt:work/fftw-3.3.4/configure:ac_link='$CC -o conftest$ac_exeext $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'
fftw-link.txt:work/fftw-3.3.4/configure:# symlink; some systems play weird games with the mod time of symlinks
fftw-link.txt:work/fftw-3.3.4/configure:# (eg FreeBSD returns the mod time of the symlink's containing
fftw-link.txt:work/fftw-3.3.4/configure:ac_link='$CC -o conftest$ac_exeext $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'
fftw-link.txt:work/fftw-3.3.4/configure:ac_link_default=`$as_echo "$ac_link" | sed 's/ -o *conftest[^ ]*//'`
fftw-link.txt:work/fftw-3.3.4/configure:if { { ac_try="$ac_link_default"
fftw-link.txt:work/fftw-3.3.4/configure:  (eval "$ac_link_default") 2>&5
fftw-link.txt:work/fftw-3.3.4/configure:if { { ac_try="$ac_link"
fftw-link.txt:work/fftw-3.3.4/configure:  (eval "$ac_link") 2>&5
fftw-link.txt:work/fftw-3.3.4/configure:as_fn_error $? "cannot compute suffix of executables: cannot compile and link
fftw-link.txt:work/fftw-3.3.4/configure:  { { ac_try="$ac_link"
fftw-link.txt:work/fftw-3.3.4/configure:  (eval "$ac_link") 2>&5
fftw-link.txt:work/fftw-3.3.4/configure:ac_link='$CC -o conftest$ac_exeext $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'
fftw-link.txt:work/fftw-3.3.4/configure:ac_link='$CC -o conftest$ac_exeext $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'
fftw-link.txt:work/fftw-3.3.4/configure:ac_link='$CC -o conftest$ac_exeext $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'
fftw-link.txt:work/fftw-3.3.4/configure:{ $as_echo "$as_me:${as_lineno-$LINENO}: checking if the linker ($LD) is GNU ld" >&5
fftw-link.txt:work/fftw-3.3.4/configure:$as_echo_n "checking if the linker ($LD) is GNU ld... " >&6; }
fftw-link.txt:work/fftw-3.3.4/configure:  for ac_prog in dumpbin "link -dump"
fftw-link.txt:work/fftw-3.3.4/configure:  for ac_prog in dumpbin "link -dump"
fftw-link.txt:work/fftw-3.3.4/configure:      # linker.  It appears as though 1/2 is a usable value.
fftw-link.txt:work/fftw-3.3.4/configure:{ $as_echo "$as_me:${as_lineno-$LINENO}: checking how to associate runtime and link libraries" >&5
fftw-link.txt:work/fftw-3.3.4/configure:$as_echo_n "checking how to associate runtime and link libraries... " >&6; }
fftw-link.txt:work/fftw-3.3.4/configure:if ${lt_cv_sharedlib_from_linklib_cmd+:} false; then :
fftw-link.txt:work/fftw-3.3.4/configure:  lt_cv_sharedlib_from_linklib_cmd='unknown'
fftw-link.txt:work/fftw-3.3.4/configure:    lt_cv_sharedlib_from_linklib_cmd=func_cygming_dll_for_implib
fftw-link.txt:work/fftw-3.3.4/configure:    lt_cv_sharedlib_from_linklib_cmd=func_cygming_dll_for_implib_fallback
fftw-link.txt:work/fftw-3.3.4/configure:  # fallback: assume linklib IS sharedlib
fftw-link.txt:work/fftw-3.3.4/configure:  lt_cv_sharedlib_from_linklib_cmd="$ECHO"
fftw-link.txt:work/fftw-3.3.4/configure:{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $lt_cv_sharedlib_from_linklib_cmd" >&5
fftw-link.txt:work/fftw-3.3.4/configure:$as_echo "$lt_cv_sharedlib_from_linklib_cmd" >&6; }
fftw-link.txt:work/fftw-3.3.4/configure:sharedlib_from_linklib_cmd=$lt_cv_sharedlib_from_linklib_cmd
fftw-link.txt:work/fftw-3.3.4/configure:test -z "$sharedlib_from_linklib_cmd" && sharedlib_from_linklib_cmd=$ECHO
fftw-link.txt:work/fftw-3.3.4/configure:# Some systems (esp. on ia64) link data and code symbols differently,
fftw-link.txt:work/fftw-3.3.4/configure:/* This works around a problem in FreeBSD linker */
fftw-link.txt:work/fftw-3.3.4/configure:	  # Now try linking the two files.
fftw-link.txt:work/fftw-3.3.4/configure:	  if { { eval echo "\"\$as_me\":${as_lineno-$LINENO}: \"$ac_link\""; } >&5
fftw-link.txt:work/fftw-3.3.4/configure:  (eval $ac_link) 2>&5
fftw-link.txt:work/fftw-3.3.4/configure:# Some flags need to be propagated to the compiler or linker for good
fftw-link.txt:work/fftw-3.3.4/configure:ac_link='$CC -o conftest$ac_exeext $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'
fftw-link.txt:work/fftw-3.3.4/configure:if ac_fn_c_try_link "$LINENO"; then :
fftw-link.txt:work/fftw-3.3.4/configure:ac_link='$CC -o conftest$ac_exeext $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'
fftw-link.txt:work/fftw-3.3.4/configure:    { $as_echo "$as_me:${as_lineno-$LINENO}: checking for -single_module linker flag" >&5
fftw-link.txt:work/fftw-3.3.4/configure:$as_echo_n "checking for -single_module linker flag... " >&6; }
fftw-link.txt:work/fftw-3.3.4/configure:	# link flags.
fftw-link.txt:work/fftw-3.3.4/configure:	# appears in it, assume the flag caused a linker warning
fftw-link.txt:work/fftw-3.3.4/configure:    { $as_echo "$as_me:${as_lineno-$LINENO}: checking for -exported_symbols_list linker flag" >&5
fftw-link.txt:work/fftw-3.3.4/configure:$as_echo_n "checking for -exported_symbols_list linker flag... " >&6; }
fftw-link.txt:work/fftw-3.3.4/configure:if ac_fn_c_try_link "$LINENO"; then :
fftw-link.txt:work/fftw-3.3.4/configure:    { $as_echo "$as_me:${as_lineno-$LINENO}: checking for -force_load linker flag" >&5
fftw-link.txt:work/fftw-3.3.4/configure:$as_echo_n "checking for -force_load linker flag... " >&6; }
fftw-link.txt:work/fftw-3.3.4/configure:ac_link='$CC -o conftest$ac_exeext $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'
fftw-link.txt:work/fftw-3.3.4/configure:ac_link='$CC -o conftest$ac_exeext $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'
fftw-link.txt:work/fftw-3.3.4/configure:# All known linkers require a `.a' archive for static linking (except MSVC,
fftw-link.txt:work/fftw-3.3.4/configure:*** depend on shared libraries, but programs linked with such libtool
fftw-link.txt:work/fftw-3.3.4/configure:*** depend on shared libraries, but programs linked with such libtool
fftw-link.txt:work/fftw-3.3.4/configure:ac_link='$CC -o conftest$ac_exeext $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'
fftw-link.txt:work/fftw-3.3.4/configure:# Code to be used in simple link tests
fftw-link.txt:work/fftw-3.3.4/configure:lt_simple_link_test_code='int main(){return(0);}'
fftw-link.txt:work/fftw-3.3.4/configure:echo "$lt_simple_link_test_code" >conftest.$ac_ext
fftw-link.txt:work/fftw-3.3.4/configure:eval "$ac_link" 2>&1 >/dev/null | $SED '/^$/d; /^ *+/d' >conftest.err
fftw-link.txt:work/fftw-3.3.4/configure:_lt_linker_boilerplate=`cat conftest.err`
fftw-link.txt:work/fftw-3.3.4/configure:      lt_prog_compiler_wl='-Xlinker '
fftw-link.txt:work/fftw-3.3.4/configure:    # PORTME Check for flag to pass linker flags through the system compiler.
fftw-link.txt:work/fftw-3.3.4/configure:	lt_prog_compiler_static='-qstaticlink'
fftw-link.txt:work/fftw-3.3.4/configure:	  # Sun Fortran 8.3 passes all unrecognized flags to the linker
fftw-link.txt:work/fftw-3.3.4/configure:   echo "$lt_simple_link_test_code" > conftest.$ac_ext
fftw-link.txt:work/fftw-3.3.4/configure:   if (eval $ac_link 2>conftest.err) && test -s conftest$ac_exeext; then
fftw-link.txt:work/fftw-3.3.4/configure:     # The linker can only warn and ignore the option if not recognized
fftw-link.txt:work/fftw-3.3.4/configure:       $ECHO "$_lt_linker_boilerplate" | $SED '/^$/d' > conftest.exp
fftw-link.txt:work/fftw-3.3.4/configure:hard_links="nottested"
fftw-link.txt:work/fftw-3.3.4/configure:  { $as_echo "$as_me:${as_lineno-$LINENO}: checking if we can lock with hard links" >&5
fftw-link.txt:work/fftw-3.3.4/configure:$as_echo_n "checking if we can lock with hard links... " >&6; }
fftw-link.txt:work/fftw-3.3.4/configure:  hard_links=yes
fftw-link.txt:work/fftw-3.3.4/configure:  ln conftest.a conftest.b 2>/dev/null && hard_links=no
fftw-link.txt:work/fftw-3.3.4/configure:  ln conftest.a conftest.b 2>&5 || hard_links=no
fftw-link.txt:work/fftw-3.3.4/configure:  ln conftest.a conftest.b 2>/dev/null && hard_links=no
fftw-link.txt:work/fftw-3.3.4/configure:  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $hard_links" >&5
fftw-link.txt:work/fftw-3.3.4/configure:$as_echo "$hard_links" >&6; }
fftw-link.txt:work/fftw-3.3.4/configure:  if test "$hard_links" = no; then
fftw-link.txt:work/fftw-3.3.4/configure:  { $as_echo "$as_me:${as_lineno-$LINENO}: checking whether the $compiler linker ($LD) supports shared libraries" >&5
fftw-link.txt:work/fftw-3.3.4/configure:$as_echo_n "checking whether the $compiler linker ($LD) supports shared libraries... " >&6; }
fftw-link.txt:work/fftw-3.3.4/configure:  link_all_deplibs=unknown
fftw-link.txt:work/fftw-3.3.4/configure:  # platforms (ab)use it in PIC code, but their linkers get confused if
fftw-link.txt:work/fftw-3.3.4/configure:  # On some targets, GNU ld is compatible enough with the native linker
fftw-link.txt:work/fftw-3.3.4/configure:	# with the native linker.  However, as the warning in the GNU ld
fftw-link.txt:work/fftw-3.3.4/configure:      # On AIX/PPC, the GNU linker is very broken
fftw-link.txt:work/fftw-3.3.4/configure:*** Warning: the GNU linker, at least up to release 2.19, is reported
fftw-link.txt:work/fftw-3.3.4/configure:*** 2.20 or above, or modify your PATH so that a non-GNU linker is found.
fftw-link.txt:work/fftw-3.3.4/configure:        archive_cmds='$CC -shared $libobjs $deplibs $compiler_flags -o $output_objdir/$soname ${wl}--enable-auto-image-base -Xlinker --out-implib -Xlinker $lib'
fftw-link.txt:work/fftw-3.3.4/configure:	$CC -shared $output_objdir/$soname.def $libobjs $deplibs $compiler_flags -o $output_objdir/$soname ${wl}--enable-auto-image-base -Xlinker --out-implib -Xlinker $lib'
fftw-link.txt:work/fftw-3.3.4/configure:      link_all_deplibs=yes
fftw-link.txt:work/fftw-3.3.4/configure:      # 256 KiB-aligned image base between 0x50000000 and 0x6FFC0000 at link
fftw-link.txt:work/fftw-3.3.4/configure:	  diet\ *) tmp_diet=yes;;	# linux-dietlibc with static linking (!diet-dyn)
fftw-link.txt:work/fftw-3.3.4/configure:	  archive_cmds='$LD -shared $libobjs $deplibs $linker_flags -soname $soname -o $lib'
fftw-link.txt:work/fftw-3.3.4/configure:	      $LD -shared $libobjs $deplibs $linker_flags -soname $soname -version-script $output_objdir/$libname.ver -o $lib'
fftw-link.txt:work/fftw-3.3.4/configure:	archive_cmds='$LD -Bshareable $libobjs $deplibs $linker_flags -o $lib'
fftw-link.txt:work/fftw-3.3.4/configure:*** Warning: The releases 2.8.* of the GNU linker cannot reliably
fftw-link.txt:work/fftw-3.3.4/configure:*** your PATH or compiler configuration so that the native linker is
fftw-link.txt:work/fftw-3.3.4/configure:*** Warning: Releases of the GNU linker prior to 2.16.91.0.3 can not
fftw-link.txt:work/fftw-3.3.4/configure:*** your PATH or compiler configuration so that the native linker is
fftw-link.txt:work/fftw-3.3.4/configure:      archive_cmds='$LD -assert pure-text -Bshareable -o $lib $libobjs $deplibs $linker_flags'
fftw-link.txt:work/fftw-3.3.4/configure:    # PORTME fill in a description of your system's linker (not GNU ld)
fftw-link.txt:work/fftw-3.3.4/configure:      archive_expsym_cmds='$LD -o $output_objdir/$soname $libobjs $deplibs $linker_flags -bE:$export_symbols -T512 -H512 -bM:SRE~$AR $AR_FLAGS $lib $output_objdir/$soname'
fftw-link.txt:work/fftw-3.3.4/configure:      # Note: this linker hardcodes the directories in LIBPATH if there
fftw-link.txt:work/fftw-3.3.4/configure:	# Neither direct hardcoding nor static linking is supported with a
fftw-link.txt:work/fftw-3.3.4/configure:	# On IA64, the linker does run time linking by default, so we don't
fftw-link.txt:work/fftw-3.3.4/configure:	aix_use_runtimelinking=no
fftw-link.txt:work/fftw-3.3.4/configure:	aix_use_runtimelinking=no
fftw-link.txt:work/fftw-3.3.4/configure:	# Test if we are trying to use run time linking or normal
fftw-link.txt:work/fftw-3.3.4/configure:	# AIX style linking. If -brtl is somewhere in LDFLAGS, we
fftw-link.txt:work/fftw-3.3.4/configure:	# need to do runtime linking.
fftw-link.txt:work/fftw-3.3.4/configure:	    aix_use_runtimelinking=yes
fftw-link.txt:work/fftw-3.3.4/configure:      # have problems creating the table of contents.  If linking a library
fftw-link.txt:work/fftw-3.3.4/configure:      link_all_deplibs=yes
fftw-link.txt:work/fftw-3.3.4/configure:	  # to unsupported forces relinking
fftw-link.txt:work/fftw-3.3.4/configure:	if test "$aix_use_runtimelinking" = yes; then
fftw-link.txt:work/fftw-3.3.4/configure:	  if test "$aix_use_runtimelinking" = yes; then
fftw-link.txt:work/fftw-3.3.4/configure:      if test "$aix_use_runtimelinking" = yes; then
fftw-link.txt:work/fftw-3.3.4/configure:	# -berok will link without error, but may produce a broken library.
fftw-link.txt:work/fftw-3.3.4/configure:if ac_fn_c_try_link "$LINENO"; then :
fftw-link.txt:work/fftw-3.3.4/configure:if ac_fn_c_try_link "$LINENO"; then :
fftw-link.txt:work/fftw-3.3.4/configure:	  # -berok will link without error, but may produce a broken library.
fftw-link.txt:work/fftw-3.3.4/configure:	# FIXME: Setting linknames here is a bad hack.
fftw-link.txt:work/fftw-3.3.4/configure:	archive_cmds='$CC -o $output_objdir/$soname $libobjs $compiler_flags $deplibs -Wl,-dll~linknames='
fftw-link.txt:work/fftw-3.3.4/configure:	    sed -n -e 's/\\\\\\\(.*\\\\\\\)/-link\\\ -EXPORT:\\\\\\\1/' -e '1\\\!p' < $export_symbols > $output_objdir/$soname.exp;
fftw-link.txt:work/fftw-3.3.4/configure:	    sed -e 's/\\\\\\\(.*\\\\\\\)/-link\\\ -EXPORT:\\\\\\\1/' < $export_symbols > $output_objdir/$soname.exp;
fftw-link.txt:work/fftw-3.3.4/configure:	  linknames='
fftw-link.txt:work/fftw-3.3.4/configure:	# The linker will not automatically build a static lib if we build a DLL.
fftw-link.txt:work/fftw-3.3.4/configure:	postlink_cmds='lt_outputfile="@OUTPUT@"~
fftw-link.txt:work/fftw-3.3.4/configure:	# FIXME: Setting linknames here is a bad hack.
fftw-link.txt:work/fftw-3.3.4/configure:	archive_cmds='$CC -o $lib $libobjs $compiler_flags `func_echo_all "$deplibs" | $SED '\''s/ -lc$//'\''` -link -dll~linknames='
fftw-link.txt:work/fftw-3.3.4/configure:	# The linker will automatically build a .lib file if we build a DLL.
fftw-link.txt:work/fftw-3.3.4/configure:  link_all_deplibs=yes
fftw-link.txt:work/fftw-3.3.4/configure:    output_verbose_link_cmd=func_echo_all
fftw-link.txt:work/fftw-3.3.4/configure:      archive_cmds='$LD -G -h $soname -o $lib $libobjs $deplibs $linker_flags'
fftw-link.txt:work/fftw-3.3.4/configure:      archive_cmds='$LD -Bshareable -o $lib $libobjs $deplibs $linker_flags /usr/lib/c++rt0.o'
fftw-link.txt:work/fftw-3.3.4/configure:      archive_cmds='$LD -Bshareable -o $lib $libobjs $deplibs $linker_flags'
fftw-link.txt:work/fftw-3.3.4/configure:	archive_cmds='$RM $output_objdir/$soname~$LD -b +b $install_libdir -o $output_objdir/$soname $libobjs $deplibs $linker_flags~test $output_objdir/$soname = $lib || mv $output_objdir/$soname $lib'
fftw-link.txt:work/fftw-3.3.4/configure:	archive_cmds='$LD -b +h $soname +b $install_libdir -o $lib $libobjs $deplibs $linker_flags'
fftw-link.txt:work/fftw-3.3.4/configure:   echo "$lt_simple_link_test_code" > conftest.$ac_ext
fftw-link.txt:work/fftw-3.3.4/configure:   if (eval $ac_link 2>conftest.err) && test -s conftest$ac_exeext; then
fftw-link.txt:work/fftw-3.3.4/configure:     # The linker can only warn and ignore the option if not recognized
fftw-link.txt:work/fftw-3.3.4/configure:       $ECHO "$_lt_linker_boilerplate" | $SED '/^$/d' > conftest.exp
fftw-link.txt:work/fftw-3.3.4/configure:    archive_cmds='$LD -b +h $soname +b $install_libdir -o $lib $libobjs $deplibs $linker_flags'
fftw-link.txt:work/fftw-3.3.4/configure:	{ $as_echo "$as_me:${as_lineno-$LINENO}: checking whether the $host_os linker accepts -exported_symbol" >&5
fftw-link.txt:work/fftw-3.3.4/configure:$as_echo_n "checking whether the $host_os linker accepts -exported_symbol... " >&6; }
fftw-link.txt:work/fftw-3.3.4/configure:if ac_fn_c_try_link "$LINENO"; then :
fftw-link.txt:work/fftw-3.3.4/configure:      link_all_deplibs=yes
fftw-link.txt:work/fftw-3.3.4/configure:	archive_cmds='$LD -Bshareable -o $lib $libobjs $deplibs $linker_flags'  # a.out
fftw-link.txt:work/fftw-3.3.4/configure:	archive_cmds='$LD -shared -o $lib $libobjs $deplibs $linker_flags'      # ELF
fftw-link.txt:work/fftw-3.3.4/configure:      archive_cmds='$LD -G -h $soname -o $lib $libobjs $deplibs $linker_flags'
fftw-link.txt:work/fftw-3.3.4/configure:	     archive_cmds='$LD -Bshareable -o $lib $libobjs $deplibs $linker_flags'
fftw-link.txt:work/fftw-3.3.4/configure:	  archive_cmds='$LD -G${allow_undefined_flag} -h $soname -o $lib $libobjs $deplibs $linker_flags'
fftw-link.txt:work/fftw-3.3.4/configure:	  $LD -G${allow_undefined_flag} -M $lib.exp -h $soname -o $lib $libobjs $deplibs $linker_flags~$RM $lib.exp'
fftw-link.txt:work/fftw-3.3.4/configure:	# The compiler driver will combine and reorder linker options,
fftw-link.txt:work/fftw-3.3.4/configure:	# but understands `-z linker_flag'.  GCC discards it without `$wl',
fftw-link.txt:work/fftw-3.3.4/configure:      link_all_deplibs=yes
fftw-link.txt:work/fftw-3.3.4/configure:	# Use $CC to link under sequent, because it throws in some extra .o
fftw-link.txt:work/fftw-3.3.4/configure:	archive_cmds='$LD -assert pure-text -Bstatic -o $lib $libobjs $deplibs $linker_flags'
fftw-link.txt:work/fftw-3.3.4/configure:	  archive_cmds='$LD -G -h $soname -o $lib $libobjs $deplibs $linker_flags'
fftw-link.txt:work/fftw-3.3.4/configure:	  archive_cmds='$LD -G -o $lib $libobjs $deplibs $linker_flags'
fftw-link.txt:work/fftw-3.3.4/configure:	  archive_cmds='$LD -G -h $soname -o $lib $libobjs $deplibs $linker_flags'
fftw-link.txt:work/fftw-3.3.4/configure:      archive_cmds='$LD -G -h $soname -o $lib $libobjs $deplibs $linker_flags'
fftw-link.txt:work/fftw-3.3.4/configure:	archive_cmds='$LD -G -h $soname -o $lib $libobjs $deplibs $linker_flags'
fftw-link.txt:work/fftw-3.3.4/configure:      # link with -lc, and that would cause any symbols used from libc to
fftw-link.txt:work/fftw-3.3.4/configure:      # ever link correctly.  If we're not using GNU ld we use -z text
fftw-link.txt:work/fftw-3.3.4/configure:      link_all_deplibs=yes
fftw-link.txt:work/fftw-3.3.4/configure:      archive_cmds='$LD -G -h $soname -o $lib $libobjs $deplibs $linker_flags'
fftw-link.txt:work/fftw-3.3.4/configure:# Do we need to explicitly link libc?
fftw-link.txt:work/fftw-3.3.4/configure:      # Test whether the compiler implicitly links with -lc since on some
fftw-link.txt:work/fftw-3.3.4/configure:      { $as_echo "$as_me:${as_lineno-$LINENO}: checking whether -lc should be explicitly linked in" >&5
fftw-link.txt:work/fftw-3.3.4/configure:$as_echo_n "checking whether -lc should be explicitly linked in... " >&6; }
fftw-link.txt:work/fftw-3.3.4/configure:	  linker_flags=-v
fftw-link.txt:work/fftw-3.3.4/configure:  { $as_echo "$as_me:${as_lineno-$LINENO}: checking dynamic linker characteristics" >&5
fftw-link.txt:work/fftw-3.3.4/configure:$as_echo_n "checking dynamic linker characteristics... " >&6; }
fftw-link.txt:work/fftw-3.3.4/configure:dynamic_linker="$host_os ld.so"
fftw-link.txt:work/fftw-3.3.4/configure:    # collect2, so additional links can be useful in future.
fftw-link.txt:work/fftw-3.3.4/configure:    if test "$aix_use_runtimelinking" = yes; then
fftw-link.txt:work/fftw-3.3.4/configure:      # If using run time linking (on AIX 4.2 or later) use lib<name>.so
fftw-link.txt:work/fftw-3.3.4/configure:      # and later when we are not doing run time linking.
fftw-link.txt:work/fftw-3.3.4/configure:  dynamic_linker="$host_os ld.so"
fftw-link.txt:work/fftw-3.3.4/configure:  # /usr/X11R6/lib (/usr/X11 is a link to /usr/X11R6), but let us allow
fftw-link.txt:work/fftw-3.3.4/configure:    dynamic_linker='Win32 ld.exe'
fftw-link.txt:work/fftw-3.3.4/configure:    dynamic_linker='Win32 link.exe'
fftw-link.txt:work/fftw-3.3.4/configure:    dynamic_linker='Win32 ld.exe'
fftw-link.txt:work/fftw-3.3.4/configure:  dynamic_linker="$host_os dyld"
fftw-link.txt:work/fftw-3.3.4/configure:  dynamic_linker="$host_os runtime_loader"
fftw-link.txt:work/fftw-3.3.4/configure:  # link against other versions.
fftw-link.txt:work/fftw-3.3.4/configure:    dynamic_linker="$host_os dld.so"
fftw-link.txt:work/fftw-3.3.4/configure:    dynamic_linker="$host_os dld.sl"
fftw-link.txt:work/fftw-3.3.4/configure:    dynamic_linker="$host_os dld.sl"
fftw-link.txt:work/fftw-3.3.4/configure:  dynamic_linker='Interix 3.x ld.so.1 (PE, like ELF)'
fftw-link.txt:work/fftw-3.3.4/configure:  dynamic_linker=no
fftw-link.txt:work/fftw-3.3.4/configure:if ac_fn_c_try_link "$LINENO"; then :
fftw-link.txt:work/fftw-3.3.4/configure:  # GNU dynamic linker.  Since this was broken with cross compilers,
fftw-link.txt:work/fftw-3.3.4/configure:  # most powerpc-linux boxes support dynamic linking these days and
fftw-link.txt:work/fftw-3.3.4/configure:  # assume the GNU/Linux dynamic linker is in use.
fftw-link.txt:work/fftw-3.3.4/configure:  dynamic_linker='GNU/Linux ld.so'
fftw-link.txt:work/fftw-3.3.4/configure:    dynamic_linker='NetBSD (a.out) ld.so'
fftw-link.txt:work/fftw-3.3.4/configure:    dynamic_linker='NetBSD ld.elf_so'
fftw-link.txt:work/fftw-3.3.4/configure:  dynamic_linker='ldqnx.so'
fftw-link.txt:work/fftw-3.3.4/configure:  dynamic_linker='OS/2 ld.exe'
fftw-link.txt:work/fftw-3.3.4/configure:  dynamic_linker=no
fftw-link.txt:work/fftw-3.3.4/configure:  dynamic_linker=no
fftw-link.txt:work/fftw-3.3.4/configure:{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $dynamic_linker" >&5
fftw-link.txt:work/fftw-3.3.4/configure:$as_echo "$dynamic_linker" >&6; }
fftw-link.txt:work/fftw-3.3.4/configure:test "$dynamic_linker" = no && can_build_shared=no
fftw-link.txt:work/fftw-3.3.4/configure:variables_saved_for_relink="PATH $shlibpath_var $runpath_var"
fftw-link.txt:work/fftw-3.3.4/configure:  variables_saved_for_relink="$variables_saved_for_relink GCC_EXEC_PREFIX COMPILER_PATH LIBRARY_PATH"
fftw-link.txt:work/fftw-3.3.4/configure:     # have to relink, otherwise we might link with an installed library
fftw-link.txt:work/fftw-3.3.4/configure:     # when we should be linking with a yet-to-be-installed one
fftw-link.txt:work/fftw-3.3.4/configure:    hardcode_action=relink
fftw-link.txt:work/fftw-3.3.4/configure:    # We can link without hardcoding, and we can hardcode nonexisting dirs.
fftw-link.txt:work/fftw-3.3.4/configure:if test "$hardcode_action" = relink ||
fftw-link.txt:work/fftw-3.3.4/configure:  # if libdl is installed we need to link against it
fftw-link.txt:work/fftw-3.3.4/configure:if ac_fn_c_try_link "$LINENO"; then :
fftw-link.txt:work/fftw-3.3.4/configure:if ac_fn_c_try_link "$LINENO"; then :
fftw-link.txt:work/fftw-3.3.4/configure:if ac_fn_c_try_link "$LINENO"; then :
fftw-link.txt:work/fftw-3.3.4/configure:if ac_fn_c_try_link "$LINENO"; then :
fftw-link.txt:work/fftw-3.3.4/configure:  { $as_echo "$as_me:${as_lineno-$LINENO}: checking for dld_link in -ldld" >&5
fftw-link.txt:work/fftw-3.3.4/configure:$as_echo_n "checking for dld_link in -ldld... " >&6; }
fftw-link.txt:work/fftw-3.3.4/configure:if ${ac_cv_lib_dld_dld_link+:} false; then :
fftw-link.txt:work/fftw-3.3.4/configure:char dld_link ();
fftw-link.txt:work/fftw-3.3.4/configure:return dld_link ();
fftw-link.txt:work/fftw-3.3.4/configure:if ac_fn_c_try_link "$LINENO"; then :
fftw-link.txt:work/fftw-3.3.4/configure:  ac_cv_lib_dld_dld_link=yes
fftw-link.txt:work/fftw-3.3.4/configure:  ac_cv_lib_dld_dld_link=no
fftw-link.txt:work/fftw-3.3.4/configure:{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_cv_lib_dld_dld_link" >&5
fftw-link.txt:work/fftw-3.3.4/configure:$as_echo "$ac_cv_lib_dld_dld_link" >&6; }
fftw-link.txt:work/fftw-3.3.4/configure:if test "x$ac_cv_lib_dld_dld_link" = xyes; then :
fftw-link.txt:work/fftw-3.3.4/configure:  lt_cv_dlopen="dld_link" lt_cv_dlopen_libs="-ldld"
fftw-link.txt:work/fftw-3.3.4/configure:  if { { eval echo "\"\$as_me\":${as_lineno-$LINENO}: \"$ac_link\""; } >&5
fftw-link.txt:work/fftw-3.3.4/configure:  (eval $ac_link) 2>&5
fftw-link.txt:work/fftw-3.3.4/configure:      { $as_echo "$as_me:${as_lineno-$LINENO}: checking whether a statically linked program can dlopen itself" >&5
fftw-link.txt:work/fftw-3.3.4/configure:$as_echo_n "checking whether a statically linked program can dlopen itself... " >&6; }
fftw-link.txt:work/fftw-3.3.4/configure:  if { { eval echo "\"\$as_me\":${as_lineno-$LINENO}: \"$ac_link\""; } >&5
fftw-link.txt:work/fftw-3.3.4/configure:  (eval $ac_link) 2>&5
fftw-link.txt:work/fftw-3.3.4/configure:    if test "$host_cpu" != ia64 && test "$aix_use_runtimelinking" = no ; then
fftw-link.txt:work/fftw-3.3.4/configure:ac_link='$CC -o conftest$ac_exeext $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'
fftw-link.txt:work/fftw-3.3.4/configure:if ac_fn_c_try_link "$LINENO"; then :
fftw-link.txt:work/fftw-3.3.4/configure:if ac_fn_c_try_link "$LINENO"; then :
fftw-link.txt:work/fftw-3.3.4/configure:if ac_fn_c_try_link "$LINENO"; then :
fftw-link.txt:work/fftw-3.3.4/configure:if ac_fn_c_try_link "$LINENO"; then :
fftw-link.txt:work/fftw-3.3.4/configure:if ac_fn_c_try_link "$LINENO"; then :
fftw-link.txt:work/fftw-3.3.4/configure:if ac_fn_c_try_link "$LINENO"; then :
fftw-link.txt:work/fftw-3.3.4/configure:if ac_fn_c_try_link "$LINENO"; then :
fftw-link.txt:work/fftw-3.3.4/configure:if ac_fn_c_try_link "$LINENO"; then :
fftw-link.txt:work/fftw-3.3.4/configure:if ac_fn_c_try_link "$LINENO"; then :
fftw-link.txt:work/fftw-3.3.4/configure:ac_link='$F77 -o conftest$ac_exeext $FFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'
fftw-link.txt:work/fftw-3.3.4/configure:ac_link='$CC -o conftest$ac_exeext $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'
fftw-link.txt:work/fftw-3.3.4/configure:ac_link='$F77 -o conftest$ac_exeext $FFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'
fftw-link.txt:work/fftw-3.3.4/configure:link_all_deplibs_F77=unknown
fftw-link.txt:work/fftw-3.3.4/configure:  # Code to be used in simple link tests
fftw-link.txt:work/fftw-3.3.4/configure:  lt_simple_link_test_code="\
fftw-link.txt:work/fftw-3.3.4/configure:echo "$lt_simple_link_test_code" >conftest.$ac_ext
fftw-link.txt:work/fftw-3.3.4/configure:eval "$ac_link" 2>&1 >/dev/null | $SED '/^$/d; /^ *+/d' >conftest.err
fftw-link.txt:work/fftw-3.3.4/configure:_lt_linker_boilerplate=`cat conftest.err`
fftw-link.txt:work/fftw-3.3.4/configure:	if test "$host_cpu" != ia64 && test "$aix_use_runtimelinking" = no ; then
fftw-link.txt:work/fftw-3.3.4/configure:      lt_prog_compiler_wl_F77='-Xlinker '
fftw-link.txt:work/fftw-3.3.4/configure:    # PORTME Check for flag to pass linker flags through the system compiler.
fftw-link.txt:work/fftw-3.3.4/configure:	lt_prog_compiler_static_F77='-qstaticlink'
fftw-link.txt:work/fftw-3.3.4/configure:	  # Sun Fortran 8.3 passes all unrecognized flags to the linker
fftw-link.txt:work/fftw-3.3.4/configure:   echo "$lt_simple_link_test_code" > conftest.$ac_ext
fftw-link.txt:work/fftw-3.3.4/configure:   if (eval $ac_link 2>conftest.err) && test -s conftest$ac_exeext; then
fftw-link.txt:work/fftw-3.3.4/configure:     # The linker can only warn and ignore the option if not recognized
fftw-link.txt:work/fftw-3.3.4/configure:       $ECHO "$_lt_linker_boilerplate" | $SED '/^$/d' > conftest.exp
fftw-link.txt:work/fftw-3.3.4/configure:hard_links="nottested"
fftw-link.txt:work/fftw-3.3.4/configure:  { $as_echo "$as_me:${as_lineno-$LINENO}: checking if we can lock with hard links" >&5
fftw-link.txt:work/fftw-3.3.4/configure:$as_echo_n "checking if we can lock with hard links... " >&6; }
fftw-link.txt:work/fftw-3.3.4/configure:  hard_links=yes
fftw-link.txt:work/fftw-3.3.4/configure:  ln conftest.a conftest.b 2>/dev/null && hard_links=no
fftw-link.txt:work/fftw-3.3.4/configure:  ln conftest.a conftest.b 2>&5 || hard_links=no
fftw-link.txt:work/fftw-3.3.4/configure:  ln conftest.a conftest.b 2>/dev/null && hard_links=no
fftw-link.txt:work/fftw-3.3.4/configure:  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $hard_links" >&5
fftw-link.txt:work/fftw-3.3.4/configure:$as_echo "$hard_links" >&6; }
fftw-link.txt:work/fftw-3.3.4/configure:  if test "$hard_links" = no; then
fftw-link.txt:work/fftw-3.3.4/configure:    { $as_echo "$as_me:${as_lineno-$LINENO}: checking whether the $compiler linker ($LD) supports shared libraries" >&5
fftw-link.txt:work/fftw-3.3.4/configure:$as_echo_n "checking whether the $compiler linker ($LD) supports shared libraries... " >&6; }
fftw-link.txt:work/fftw-3.3.4/configure:  link_all_deplibs_F77=unknown
fftw-link.txt:work/fftw-3.3.4/configure:  # platforms (ab)use it in PIC code, but their linkers get confused if
fftw-link.txt:work/fftw-3.3.4/configure:  # On some targets, GNU ld is compatible enough with the native linker
fftw-link.txt:work/fftw-3.3.4/configure:	# with the native linker.  However, as the warning in the GNU ld
fftw-link.txt:work/fftw-3.3.4/configure:      # On AIX/PPC, the GNU linker is very broken
fftw-link.txt:work/fftw-3.3.4/configure:*** Warning: the GNU linker, at least up to release 2.19, is reported
fftw-link.txt:work/fftw-3.3.4/configure:*** 2.20 or above, or modify your PATH so that a non-GNU linker is found.
fftw-link.txt:work/fftw-3.3.4/configure:        archive_cmds_F77='$CC -shared $libobjs $deplibs $compiler_flags -o $output_objdir/$soname ${wl}--enable-auto-image-base -Xlinker --out-implib -Xlinker $lib'
fftw-link.txt:work/fftw-3.3.4/configure:	$CC -shared $output_objdir/$soname.def $libobjs $deplibs $compiler_flags -o $output_objdir/$soname ${wl}--enable-auto-image-base -Xlinker --out-implib -Xlinker $lib'
fftw-link.txt:work/fftw-3.3.4/configure:      link_all_deplibs_F77=yes
fftw-link.txt:work/fftw-3.3.4/configure:      # 256 KiB-aligned image base between 0x50000000 and 0x6FFC0000 at link
fftw-link.txt:work/fftw-3.3.4/configure:	  diet\ *) tmp_diet=yes;;	# linux-dietlibc with static linking (!diet-dyn)
fftw-link.txt:work/fftw-3.3.4/configure:	  archive_cmds_F77='$LD -shared $libobjs $deplibs $linker_flags -soname $soname -o $lib'
fftw-link.txt:work/fftw-3.3.4/configure:	      $LD -shared $libobjs $deplibs $linker_flags -soname $soname -version-script $output_objdir/$libname.ver -o $lib'
fftw-link.txt:work/fftw-3.3.4/configure:	archive_cmds_F77='$LD -Bshareable $libobjs $deplibs $linker_flags -o $lib'
fftw-link.txt:work/fftw-3.3.4/configure:*** Warning: The releases 2.8.* of the GNU linker cannot reliably
fftw-link.txt:work/fftw-3.3.4/configure:*** your PATH or compiler configuration so that the native linker is
fftw-link.txt:work/fftw-3.3.4/configure:*** Warning: Releases of the GNU linker prior to 2.16.91.0.3 can not
fftw-link.txt:work/fftw-3.3.4/configure:*** your PATH or compiler configuration so that the native linker is
fftw-link.txt:work/fftw-3.3.4/configure:      archive_cmds_F77='$LD -assert pure-text -Bshareable -o $lib $libobjs $deplibs $linker_flags'
fftw-link.txt:work/fftw-3.3.4/configure:    # PORTME fill in a description of your system's linker (not GNU ld)
fftw-link.txt:work/fftw-3.3.4/configure:      archive_expsym_cmds_F77='$LD -o $output_objdir/$soname $libobjs $deplibs $linker_flags -bE:$export_symbols -T512 -H512 -bM:SRE~$AR $AR_FLAGS $lib $output_objdir/$soname'
fftw-link.txt:work/fftw-3.3.4/configure:      # Note: this linker hardcodes the directories in LIBPATH if there
fftw-link.txt:work/fftw-3.3.4/configure:	# Neither direct hardcoding nor static linking is supported with a
fftw-link.txt:work/fftw-3.3.4/configure:	# On IA64, the linker does run time linking by default, so we don't
fftw-link.txt:work/fftw-3.3.4/configure:	aix_use_runtimelinking=no
fftw-link.txt:work/fftw-3.3.4/configure:	aix_use_runtimelinking=no
fftw-link.txt:work/fftw-3.3.4/configure:	# Test if we are trying to use run time linking or normal
fftw-link.txt:work/fftw-3.3.4/configure:	# AIX style linking. If -brtl is somewhere in LDFLAGS, we
fftw-link.txt:work/fftw-3.3.4/configure:	# need to do runtime linking.
fftw-link.txt:work/fftw-3.3.4/configure:	    aix_use_runtimelinking=yes
fftw-link.txt:work/fftw-3.3.4/configure:      # have problems creating the table of contents.  If linking a library
fftw-link.txt:work/fftw-3.3.4/configure:      link_all_deplibs_F77=yes
fftw-link.txt:work/fftw-3.3.4/configure:	  # to unsupported forces relinking
fftw-link.txt:work/fftw-3.3.4/configure:	if test "$aix_use_runtimelinking" = yes; then
fftw-link.txt:work/fftw-3.3.4/configure:	  if test "$aix_use_runtimelinking" = yes; then
fftw-link.txt:work/fftw-3.3.4/configure:      if test "$aix_use_runtimelinking" = yes; then
fftw-link.txt:work/fftw-3.3.4/configure:	# -berok will link without error, but may produce a broken library.
fftw-link.txt:work/fftw-3.3.4/configure:if ac_fn_f77_try_link "$LINENO"; then :
fftw-link.txt:work/fftw-3.3.4/configure:if ac_fn_f77_try_link "$LINENO"; then :
fftw-link.txt:work/fftw-3.3.4/configure:	  # -berok will link without error, but may produce a broken library.
fftw-link.txt:work/fftw-3.3.4/configure:	# FIXME: Setting linknames here is a bad hack.
fftw-link.txt:work/fftw-3.3.4/configure:	archive_cmds_F77='$CC -o $output_objdir/$soname $libobjs $compiler_flags $deplibs -Wl,-dll~linknames='
fftw-link.txt:work/fftw-3.3.4/configure:	    sed -n -e 's/\\\\\\\(.*\\\\\\\)/-link\\\ -EXPORT:\\\\\\\1/' -e '1\\\!p' < $export_symbols > $output_objdir/$soname.exp;
fftw-link.txt:work/fftw-3.3.4/configure:	    sed -e 's/\\\\\\\(.*\\\\\\\)/-link\\\ -EXPORT:\\\\\\\1/' < $export_symbols > $output_objdir/$soname.exp;
fftw-link.txt:work/fftw-3.3.4/configure:	  linknames='
fftw-link.txt:work/fftw-3.3.4/configure:	# The linker will not automatically build a static lib if we build a DLL.
fftw-link.txt:work/fftw-3.3.4/configure:	postlink_cmds_F77='lt_outputfile="@OUTPUT@"~
fftw-link.txt:work/fftw-3.3.4/configure:	# FIXME: Setting linknames here is a bad hack.
fftw-link.txt:work/fftw-3.3.4/configure:	archive_cmds_F77='$CC -o $lib $libobjs $compiler_flags `func_echo_all "$deplibs" | $SED '\''s/ -lc$//'\''` -link -dll~linknames='
fftw-link.txt:work/fftw-3.3.4/configure:	# The linker will automatically build a .lib file if we build a DLL.
fftw-link.txt:work/fftw-3.3.4/configure:  link_all_deplibs_F77=yes
fftw-link.txt:work/fftw-3.3.4/configure:    output_verbose_link_cmd=func_echo_all
fftw-link.txt:work/fftw-3.3.4/configure:      archive_cmds_F77='$LD -G -h $soname -o $lib $libobjs $deplibs $linker_flags'
fftw-link.txt:work/fftw-3.3.4/configure:      archive_cmds_F77='$LD -Bshareable -o $lib $libobjs $deplibs $linker_flags /usr/lib/c++rt0.o'
fftw-link.txt:work/fftw-3.3.4/configure:      archive_cmds_F77='$LD -Bshareable -o $lib $libobjs $deplibs $linker_flags'
fftw-link.txt:work/fftw-3.3.4/configure:	archive_cmds_F77='$RM $output_objdir/$soname~$LD -b +b $install_libdir -o $output_objdir/$soname $libobjs $deplibs $linker_flags~test $output_objdir/$soname = $lib || mv $output_objdir/$soname $lib'
fftw-link.txt:work/fftw-3.3.4/configure:	archive_cmds_F77='$LD -b +h $soname +b $install_libdir -o $lib $libobjs $deplibs $linker_flags'
fftw-link.txt:work/fftw-3.3.4/configure:	{ $as_echo "$as_me:${as_lineno-$LINENO}: checking whether the $host_os linker accepts -exported_symbol" >&5
fftw-link.txt:work/fftw-3.3.4/configure:$as_echo_n "checking whether the $host_os linker accepts -exported_symbol... " >&6; }
fftw-link.txt:work/fftw-3.3.4/configure:if ac_fn_f77_try_link "$LINENO"; then :
fftw-link.txt:work/fftw-3.3.4/configure:      link_all_deplibs_F77=yes
fftw-link.txt:work/fftw-3.3.4/configure:	archive_cmds_F77='$LD -Bshareable -o $lib $libobjs $deplibs $linker_flags'  # a.out
fftw-link.txt:work/fftw-3.3.4/configure:	archive_cmds_F77='$LD -shared -o $lib $libobjs $deplibs $linker_flags'      # ELF
fftw-link.txt:work/fftw-3.3.4/configure:      archive_cmds_F77='$LD -G -h $soname -o $lib $libobjs $deplibs $linker_flags'
fftw-link.txt:work/fftw-3.3.4/configure:	     archive_cmds_F77='$LD -Bshareable -o $lib $libobjs $deplibs $linker_flags'
fftw-link.txt:work/fftw-3.3.4/configure:	  archive_cmds_F77='$LD -G${allow_undefined_flag} -h $soname -o $lib $libobjs $deplibs $linker_flags'
fftw-link.txt:work/fftw-3.3.4/configure:	  $LD -G${allow_undefined_flag} -M $lib.exp -h $soname -o $lib $libobjs $deplibs $linker_flags~$RM $lib.exp'
fftw-link.txt:work/fftw-3.3.4/configure:	# The compiler driver will combine and reorder linker options,
fftw-link.txt:work/fftw-3.3.4/configure:	# but understands `-z linker_flag'.  GCC discards it without `$wl',
fftw-link.txt:work/fftw-3.3.4/configure:      link_all_deplibs_F77=yes
fftw-link.txt:work/fftw-3.3.4/configure:	# Use $CC to link under sequent, because it throws in some extra .o
fftw-link.txt:work/fftw-3.3.4/configure:	archive_cmds_F77='$LD -assert pure-text -Bstatic -o $lib $libobjs $deplibs $linker_flags'
fftw-link.txt:work/fftw-3.3.4/configure:	  archive_cmds_F77='$LD -G -h $soname -o $lib $libobjs $deplibs $linker_flags'
fftw-link.txt:work/fftw-3.3.4/configure:	  archive_cmds_F77='$LD -G -o $lib $libobjs $deplibs $linker_flags'
fftw-link.txt:work/fftw-3.3.4/configure:	  archive_cmds_F77='$LD -G -h $soname -o $lib $libobjs $deplibs $linker_flags'
fftw-link.txt:work/fftw-3.3.4/configure:      archive_cmds_F77='$LD -G -h $soname -o $lib $libobjs $deplibs $linker_flags'
fftw-link.txt:work/fftw-3.3.4/configure:	archive_cmds_F77='$LD -G -h $soname -o $lib $libobjs $deplibs $linker_flags'
fftw-link.txt:work/fftw-3.3.4/configure:      # link with -lc, and that would cause any symbols used from libc to
fftw-link.txt:work/fftw-3.3.4/configure:      # ever link correctly.  If we're not using GNU ld we use -z text
fftw-link.txt:work/fftw-3.3.4/configure:      link_all_deplibs_F77=yes
fftw-link.txt:work/fftw-3.3.4/configure:      archive_cmds_F77='$LD -G -h $soname -o $lib $libobjs $deplibs $linker_flags'
fftw-link.txt:work/fftw-3.3.4/configure:# Do we need to explicitly link libc?
fftw-link.txt:work/fftw-3.3.4/configure:      # Test whether the compiler implicitly links with -lc since on some
fftw-link.txt:work/fftw-3.3.4/configure:      { $as_echo "$as_me:${as_lineno-$LINENO}: checking whether -lc should be explicitly linked in" >&5
fftw-link.txt:work/fftw-3.3.4/configure:$as_echo_n "checking whether -lc should be explicitly linked in... " >&6; }
fftw-link.txt:work/fftw-3.3.4/configure:	  linker_flags=-v
fftw-link.txt:work/fftw-3.3.4/configure:    { $as_echo "$as_me:${as_lineno-$LINENO}: checking dynamic linker characteristics" >&5
fftw-link.txt:work/fftw-3.3.4/configure:$as_echo_n "checking dynamic linker characteristics... " >&6; }
fftw-link.txt:work/fftw-3.3.4/configure:dynamic_linker="$host_os ld.so"
fftw-link.txt:work/fftw-3.3.4/configure:    # collect2, so additional links can be useful in future.
fftw-link.txt:work/fftw-3.3.4/configure:    if test "$aix_use_runtimelinking" = yes; then
fftw-link.txt:work/fftw-3.3.4/configure:      # If using run time linking (on AIX 4.2 or later) use lib<name>.so
fftw-link.txt:work/fftw-3.3.4/configure:      # and later when we are not doing run time linking.
fftw-link.txt:work/fftw-3.3.4/configure:  dynamic_linker="$host_os ld.so"
fftw-link.txt:work/fftw-3.3.4/configure:  # /usr/X11R6/lib (/usr/X11 is a link to /usr/X11R6), but let us allow
fftw-link.txt:work/fftw-3.3.4/configure:    dynamic_linker='Win32 ld.exe'
fftw-link.txt:work/fftw-3.3.4/configure:    dynamic_linker='Win32 link.exe'
fftw-link.txt:work/fftw-3.3.4/configure:    dynamic_linker='Win32 ld.exe'
fftw-link.txt:work/fftw-3.3.4/configure:  dynamic_linker="$host_os dyld"
fftw-link.txt:work/fftw-3.3.4/configure:  dynamic_linker="$host_os runtime_loader"
fftw-link.txt:work/fftw-3.3.4/configure:  # link against other versions.
fftw-link.txt:work/fftw-3.3.4/configure:    dynamic_linker="$host_os dld.so"
fftw-link.txt:work/fftw-3.3.4/configure:    dynamic_linker="$host_os dld.sl"
fftw-link.txt:work/fftw-3.3.4/configure:    dynamic_linker="$host_os dld.sl"
fftw-link.txt:work/fftw-3.3.4/configure:  dynamic_linker='Interix 3.x ld.so.1 (PE, like ELF)'
fftw-link.txt:work/fftw-3.3.4/configure:  dynamic_linker=no
fftw-link.txt:work/fftw-3.3.4/configure:if ac_fn_f77_try_link "$LINENO"; then :
fftw-link.txt:work/fftw-3.3.4/configure:  # GNU dynamic linker.  Since this was broken with cross compilers,
fftw-link.txt:work/fftw-3.3.4/configure:  # most powerpc-linux boxes support dynamic linking these days and
fftw-link.txt:work/fftw-3.3.4/configure:  # assume the GNU/Linux dynamic linker is in use.
fftw-link.txt:work/fftw-3.3.4/configure:  dynamic_linker='GNU/Linux ld.so'
fftw-link.txt:work/fftw-3.3.4/configure:    dynamic_linker='NetBSD (a.out) ld.so'
fftw-link.txt:work/fftw-3.3.4/configure:    dynamic_linker='NetBSD ld.elf_so'
fftw-link.txt:work/fftw-3.3.4/configure:  dynamic_linker='ldqnx.so'
fftw-link.txt:work/fftw-3.3.4/configure:  dynamic_linker='OS/2 ld.exe'
fftw-link.txt:work/fftw-3.3.4/configure:  dynamic_linker=no
fftw-link.txt:work/fftw-3.3.4/configure:  dynamic_linker=no
fftw-link.txt:work/fftw-3.3.4/configure:{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $dynamic_linker" >&5
fftw-link.txt:work/fftw-3.3.4/configure:$as_echo "$dynamic_linker" >&6; }
fftw-link.txt:work/fftw-3.3.4/configure:test "$dynamic_linker" = no && can_build_shared=no
fftw-link.txt:work/fftw-3.3.4/configure:variables_saved_for_relink="PATH $shlibpath_var $runpath_var"
fftw-link.txt:work/fftw-3.3.4/configure:  variables_saved_for_relink="$variables_saved_for_relink GCC_EXEC_PREFIX COMPILER_PATH LIBRARY_PATH"
fftw-link.txt:work/fftw-3.3.4/configure:     # have to relink, otherwise we might link with an installed library
fftw-link.txt:work/fftw-3.3.4/configure:     # when we should be linking with a yet-to-be-installed one
fftw-link.txt:work/fftw-3.3.4/configure:    hardcode_action_F77=relink
fftw-link.txt:work/fftw-3.3.4/configure:    # We can link without hardcoding, and we can hardcode nonexisting dirs.
fftw-link.txt:work/fftw-3.3.4/configure:if test "$hardcode_action_F77" = relink ||
fftw-link.txt:work/fftw-3.3.4/configure:ac_link='$CC -o conftest$ac_exeext $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'
fftw-link.txt:work/fftw-3.3.4/configure:ac_link='$F77 -o conftest$ac_exeext $FFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'
fftw-link.txt:work/fftw-3.3.4/configure:{ $as_echo "$as_me:${as_lineno-$LINENO}: checking how to get verbose linking output from $F77" >&5
fftw-link.txt:work/fftw-3.3.4/configure:$as_echo_n "checking how to get verbose linking output from $F77... " >&6; }
fftw-link.txt:work/fftw-3.3.4/configure:# Compile and link our simple test program by passing a flag (argument
fftw-link.txt:work/fftw-3.3.4/configure:# "verbose" output that we can then parse for the Fortran linker
fftw-link.txt:work/fftw-3.3.4/configure:eval "set x $ac_link"
fftw-link.txt:work/fftw-3.3.4/configure:ac_f77_v_output=`eval $ac_link 5>&1 2>&1 |
fftw-link.txt:work/fftw-3.3.4/configure:# /foo, /bar, and /baz are search directories for the Fortran linker.
fftw-link.txt:work/fftw-3.3.4/configure:  # and remove "-link" and closing parenthesis.
fftw-link.txt:work/fftw-3.3.4/configure:        s/ -link / /g
fftw-link.txt:work/fftw-3.3.4/configure:   { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: cannot determine how to obtain linking information from $F77" >&5
fftw-link.txt:work/fftw-3.3.4/configure:$as_echo "$as_me: WARNING: cannot determine how to obtain linking information from $F77" >&2;}
fftw-link.txt:work/fftw-3.3.4/configure:# Compile and link our simple test program by passing a flag (argument
fftw-link.txt:work/fftw-3.3.4/configure:# "verbose" output that we can then parse for the Fortran linker
fftw-link.txt:work/fftw-3.3.4/configure:eval "set x $ac_link"
fftw-link.txt:work/fftw-3.3.4/configure:ac_f77_v_output=`eval $ac_link 5>&1 2>&1 |
fftw-link.txt:work/fftw-3.3.4/configure:# /foo, /bar, and /baz are search directories for the Fortran linker.
fftw-link.txt:work/fftw-3.3.4/configure:  # and remove "-link" and closing parenthesis.
fftw-link.txt:work/fftw-3.3.4/configure:        s/ -link / /g
fftw-link.txt:work/fftw-3.3.4/configure:  for ac_link_opt in $ac_arg; do
fftw-link.txt:work/fftw-3.3.4/configure:    ac_cv_f77_libs="$ac_cv_f77_libs -Xlinker $ac_link_opt"
fftw-link.txt:work/fftw-3.3.4/configure:	  |-LANG:=* | -LIST:* | -LNO:* | -link)
fftw-link.txt:work/fftw-3.3.4/configure:  for ac_link_opt in $ac_ld_run_path; do
fftw-link.txt:work/fftw-3.3.4/configure:    ac_cv_f77_libs="$ac_cv_f77_libs -Xlinker $ac_link_opt"
fftw-link.txt:work/fftw-3.3.4/configure:ac_link='$CC -o conftest$ac_exeext $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'
fftw-link.txt:work/fftw-3.3.4/configure:ac_link='$F77 -o conftest$ac_exeext $FFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'
fftw-link.txt:work/fftw-3.3.4/configure:{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for dummy main to link with Fortran 77 libraries" >&5
fftw-link.txt:work/fftw-3.3.4/configure:$as_echo_n "checking for dummy main to link with Fortran 77 libraries... " >&6; }
fftw-link.txt:work/fftw-3.3.4/configure:ac_link='$CC -o conftest$ac_exeext $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'
fftw-link.txt:work/fftw-3.3.4/configure: # First, try linking without a dummy main:
fftw-link.txt:work/fftw-3.3.4/configure:if ac_fn_c_try_link "$LINENO"; then :
fftw-link.txt:work/fftw-3.3.4/configure:if ac_fn_c_try_link "$LINENO"; then :
fftw-link.txt:work/fftw-3.3.4/configure:ac_link='$F77 -o conftest$ac_exeext $FFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'
fftw-link.txt:work/fftw-3.3.4/configure:			{ $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: *** Couldn't figure out how to link C and Fortran; using default Fortran wrappers." >&5
fftw-link.txt:work/fftw-3.3.4/configure:$as_echo "$as_me: WARNING: *** Couldn't figure out how to link C and Fortran; using default Fortran wrappers." >&2;}
fftw-link.txt:work/fftw-3.3.4/configure:ac_link='$CC -o conftest$ac_exeext $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'
fftw-link.txt:work/fftw-3.3.4/configure:ac_link='$F77 -o conftest$ac_exeext $FFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'
fftw-link.txt:work/fftw-3.3.4/configure:ac_link='$CC -o conftest$ac_exeext $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'
fftw-link.txt:work/fftw-3.3.4/configure:if ac_fn_c_try_link "$LINENO"; then :
fftw-link.txt:work/fftw-3.3.4/configure:ac_link='$F77 -o conftest$ac_exeext $FFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'
fftw-link.txt:work/fftw-3.3.4/configure:ac_link='$CC -o conftest$ac_exeext $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'
fftw-link.txt:work/fftw-3.3.4/configure:if ac_fn_c_try_link "$LINENO"; then :
fftw-link.txt:work/fftw-3.3.4/configure:ac_link='$F77 -o conftest$ac_exeext $FFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'
fftw-link.txt:work/fftw-3.3.4/configure:ac_link='$CC -o conftest$ac_exeext $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'
fftw-link.txt:work/fftw-3.3.4/configure:ac_link='$F77 -o conftest$ac_exeext $FFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'
fftw-link.txt:work/fftw-3.3.4/configure:ac_link='$CC -o conftest$ac_exeext $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'
fftw-link.txt:work/fftw-3.3.4/configure:ac_link='$F77 -o conftest$ac_exeext $FFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'
fftw-link.txt:work/fftw-3.3.4/configure:ac_link='$CC -o conftest$ac_exeext $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'
fftw-link.txt:work/fftw-3.3.4/configure:ac_link='$F77 -o conftest$ac_exeext $FFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'
fftw-link.txt:work/fftw-3.3.4/configure:ac_link='$CC -o conftest$ac_exeext $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'
fftw-link.txt:work/fftw-3.3.4/configure:if ac_fn_c_try_link "$LINENO"; then :
fftw-link.txt:work/fftw-3.3.4/configure:if ac_fn_c_try_link "$LINENO"; then :
fftw-link.txt:work/fftw-3.3.4/configure:ac_link='$CC -o conftest$ac_exeext $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'
fftw-link.txt:work/fftw-3.3.4/configure:# It gets checked for in the link test anyway.
fftw-link.txt:work/fftw-3.3.4/configure:# etcetera environment variables, and if threads linking works using
fftw-link.txt:work/fftw-3.3.4/configure:if ac_fn_c_try_link "$LINENO"; then :
fftw-link.txt:work/fftw-3.3.4/configure:# -mt: Sun Workshop C (may only link SunOS threads [-lthread], but it
fftw-link.txt:work/fftw-3.3.4/configure:        # (non-functional) versions of the pthreads routines, so link-based
fftw-link.txt:work/fftw-3.3.4/configure:        # tests will erroneously succeed.  (We need to link with -pthreads/-mt/
fftw-link.txt:work/fftw-3.3.4/configure:if ac_fn_c_try_link "$LINENO"; then :
fftw-link.txt:work/fftw-3.3.4/configure:if ac_fn_c_try_link "$LINENO"; then :
fftw-link.txt:work/fftw-3.3.4/configure:ac_link='$CC -o conftest$ac_exeext $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'
fftw-link.txt:work/fftw-3.3.4/configure:    # 2) DJGPP < 2.04 has no symlinks; `ln -s' creates a wrapper executable.
fftw-link.txt:work/fftw-3.3.4/configure:sharedlib_from_linklib_cmd='`$ECHO "$sharedlib_from_linklib_cmd" | $SED "$delay_single_quote_subst"`'
fftw-link.txt:work/fftw-3.3.4/configure:link_all_deplibs='`$ECHO "$link_all_deplibs" | $SED "$delay_single_quote_subst"`'
fftw-link.txt:work/fftw-3.3.4/configure:prelink_cmds='`$ECHO "$prelink_cmds" | $SED "$delay_single_quote_subst"`'
fftw-link.txt:work/fftw-3.3.4/configure:postlink_cmds='`$ECHO "$postlink_cmds" | $SED "$delay_single_quote_subst"`'
fftw-link.txt:work/fftw-3.3.4/configure:variables_saved_for_relink='`$ECHO "$variables_saved_for_relink" | $SED "$delay_single_quote_subst"`'
fftw-link.txt:work/fftw-3.3.4/configure:link_all_deplibs_F77='`$ECHO "$link_all_deplibs_F77" | $SED "$delay_single_quote_subst"`'
fftw-link.txt:work/fftw-3.3.4/configure:prelink_cmds_F77='`$ECHO "$prelink_cmds_F77" | $SED "$delay_single_quote_subst"`'
fftw-link.txt:work/fftw-3.3.4/configure:postlink_cmds_F77='`$ECHO "$postlink_cmds_F77" | $SED "$delay_single_quote_subst"`'
fftw-link.txt:work/fftw-3.3.4/configure:sharedlib_from_linklib_cmd \
fftw-link.txt:work/fftw-3.3.4/configure:variables_saved_for_relink \
fftw-link.txt:work/fftw-3.3.4/configure:prelink_cmds \
fftw-link.txt:work/fftw-3.3.4/configure:postlink_cmds \
fftw-link.txt:work/fftw-3.3.4/configure:prelink_cmds_F77 \
fftw-link.txt:work/fftw-3.3.4/configure:postlink_cmds_F77; do
fftw-link.txt:work/fftw-3.3.4/configure:# Whether we need soft or hard links.
fftw-link.txt:work/fftw-3.3.4/configure:# Command to associate shared and link libraries.
fftw-link.txt:work/fftw-3.3.4/configure:sharedlib_from_linklib_cmd=$lt_sharedlib_from_linklib_cmd
fftw-link.txt:work/fftw-3.3.4/configure:# restored at link time.
fftw-link.txt:work/fftw-3.3.4/configure:variables_saved_for_relink=$lt_variables_saved_for_relink
fftw-link.txt:work/fftw-3.3.4/configure:# List of archive names.  First name is the real one, the rest are links.
fftw-link.txt:work/fftw-3.3.4/configure:# The last name is the one that the linker finds with -lNAME
fftw-link.txt:work/fftw-3.3.4/configure:# Whether dlopen of statically linked programs is supported.
fftw-link.txt:work/fftw-3.3.4/configure:# The linker used to build libraries.
fftw-link.txt:work/fftw-3.3.4/configure:# How to pass a linker flag through the compiler.
fftw-link.txt:work/fftw-3.3.4/configure:# Compiler flag to prevent dynamic linking.
fftw-link.txt:work/fftw-3.3.4/configure:link_static_flag=$lt_lt_prog_compiler_static
fftw-link.txt:work/fftw-3.3.4/configure:# Create a temporary old-style archive to link instead of a shared archive.
fftw-link.txt:work/fftw-3.3.4/configure:# Flag to hardcode \$libdir into a binary during linking.
fftw-link.txt:work/fftw-3.3.4/configure:# Set to "yes" if using DIR/libNAME\${shared_ext} during linking hardcodes
fftw-link.txt:work/fftw-3.3.4/configure:# Set to "yes" if using DIR/libNAME\${shared_ext} during linking hardcodes
fftw-link.txt:work/fftw-3.3.4/configure:# Set to "yes" if using the -LDIR flag during linking hardcodes DIR
fftw-link.txt:work/fftw-3.3.4/configure:# Set to "yes" if using SHLIBPATH_VAR=DIR during linking hardcodes DIR
fftw-link.txt:work/fftw-3.3.4/configure:# into the library and all subsequent libraries and executables linked
fftw-link.txt:work/fftw-3.3.4/configure:# Set to yes if linker adds runtime paths of dependent libraries
fftw-link.txt:work/fftw-3.3.4/configure:# Whether libtool must link a program against all its dependency libraries.
fftw-link.txt:work/fftw-3.3.4/configure:link_all_deplibs=$link_all_deplibs
fftw-link.txt:work/fftw-3.3.4/configure:# Commands necessary for linking programs (against libraries) with templates.
fftw-link.txt:work/fftw-3.3.4/configure:prelink_cmds=$lt_prelink_cmds
fftw-link.txt:work/fftw-3.3.4/configure:# Commands necessary for finishing linking programs.
fftw-link.txt:work/fftw-3.3.4/configure:postlink_cmds=$lt_postlink_cmds
fftw-link.txt:work/fftw-3.3.4/configure:# The linker used to build libraries.
fftw-link.txt:work/fftw-3.3.4/configure:# How to pass a linker flag through the compiler.
fftw-link.txt:work/fftw-3.3.4/configure:# Compiler flag to prevent dynamic linking.
fftw-link.txt:work/fftw-3.3.4/configure:link_static_flag=$lt_lt_prog_compiler_static_F77
fftw-link.txt:work/fftw-3.3.4/configure:# Create a temporary old-style archive to link instead of a shared archive.
fftw-link.txt:work/fftw-3.3.4/configure:# Flag to hardcode \$libdir into a binary during linking.
fftw-link.txt:work/fftw-3.3.4/configure:# Set to "yes" if using DIR/libNAME\${shared_ext} during linking hardcodes
fftw-link.txt:work/fftw-3.3.4/configure:# Set to "yes" if using DIR/libNAME\${shared_ext} during linking hardcodes
fftw-link.txt:work/fftw-3.3.4/configure:# Set to "yes" if using the -LDIR flag during linking hardcodes DIR
fftw-link.txt:work/fftw-3.3.4/configure:# Set to "yes" if using SHLIBPATH_VAR=DIR during linking hardcodes DIR
fftw-link.txt:work/fftw-3.3.4/configure:# into the library and all subsequent libraries and executables linked
fftw-link.txt:work/fftw-3.3.4/configure:# Set to yes if linker adds runtime paths of dependent libraries
fftw-link.txt:work/fftw-3.3.4/configure:# Whether libtool must link a program against all its dependency libraries.
fftw-link.txt:work/fftw-3.3.4/configure:link_all_deplibs=$link_all_deplibs_F77
fftw-link.txt:work/fftw-3.3.4/configure:# Commands necessary for linking programs (against libraries) with templates.
fftw-link.txt:work/fftw-3.3.4/configure:prelink_cmds=$lt_prelink_cmds_F77
fftw-link.txt:work/fftw-3.3.4/configure:# Commands necessary for finishing linking programs.
fftw-link.txt:work/fftw-3.3.4/configure:postlink_cmds=$lt_postlink_cmds_F77
fftw-link.txt:work/fftw-3.3.4/configure.ac:			AC_MSG_WARN([*** Couldn't figure out how to link C and Fortran; using default Fortran wrappers.])])
fftw-link.txt:work/fftw-3.3.4/dft/Makefile.in:	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
fftw-link.txt:work/fftw-3.3.4/dft/scalar/Makefile.in:	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
fftw-link.txt:work/fftw-3.3.4/dft/scalar/codelets/Makefile.in:	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
fftw-link.txt:work/fftw-3.3.4/dft/simd/altivec/Makefile.in:	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
fftw-link.txt:work/fftw-3.3.4/dft/simd/avx/Makefile.in:	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
fftw-link.txt:work/fftw-3.3.4/dft/simd/neon/Makefile.in:	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
fftw-link.txt:work/fftw-3.3.4/dft/simd/sse2/Makefile.in:	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
fftw-link.txt:work/fftw-3.3.4/doc/FAQ/fftw-faq.ascii: Q3.13       My program does not link (on Unix).
fftw-link.txt:work/fftw-3.3.4/doc/FAQ/fftw-faq.ascii: Q3.14       I included your header, but linking still fails.
fftw-link.txt:work/fftw-3.3.4/doc/FAQ/fftw-faq.ascii:libraries, causing a link failure when FFTW is compiled.  Since ranlib is
fftw-link.txt:work/fftw-3.3.4/doc/FAQ/fftw-faq.ascii:and replacing it with a symbolic link to /bin/echo.
fftw-link.txt:work/fftw-3.3.4/doc/FAQ/fftw-faq.ascii:Most definitely.  FFTW should compile and/or link under any C++ compiler.
fftw-link.txt:work/fftw-3.3.4/doc/FAQ/fftw-faq.ascii: Q3.13       My program does not link (on Unix).
fftw-link.txt:work/fftw-3.3.4/doc/FAQ/fftw-faq.ascii: Q3.14       I included your header, but linking still fails.
fftw-link.txt:work/fftw-3.3.4/doc/FAQ/fftw-faq.ascii:Question 3.13.  My program does not link (on Unix).
fftw-link.txt:work/fftw-3.3.4/doc/FAQ/fftw-faq.ascii:if *A* uses *B*, then *A* must be listed before *B* in the link command.).
fftw-link.txt:work/fftw-3.3.4/doc/FAQ/fftw-faq.ascii:Question 3.14.  I included your header, but linking still fails.
fftw-link.txt:work/fftw-3.3.4/doc/FAQ/fftw-faq.ascii:and link it into your program, not just #include <fftw3.h>.  (Yes, this is
fftw-link.txt:work/fftw-3.3.4/doc/FAQ/fftw-faq.bfnn:observed to corrupt the FFTW libraries, causing a link failure when
fftw-link.txt:work/fftw-3.3.4/doc/FAQ/fftw-faq.bfnn:a symbolic link to \courier{/bin/echo\}.
fftw-link.txt:work/fftw-3.3.4/doc/FAQ/fftw-faq.bfnn:Most definitely.  FFTW should compile and/or link under any C++
fftw-link.txt:work/fftw-3.3.4/doc/FAQ/fftw-faq.bfnn:\question 09apr:linkfails My program does not link (on Unix).
fftw-link.txt:work/fftw-3.3.4/doc/FAQ/fftw-faq.bfnn:\italic{A\} must be listed before \italic{B\} in the link command.).
fftw-link.txt:work/fftw-3.3.4/doc/FAQ/fftw-faq.bfnn:\question 15mar:linkheader I included your header, but linking still fails.
fftw-link.txt:work/fftw-3.3.4/doc/FAQ/fftw-faq.bfnn:library and link it into your program, not just \courier{#include
fftw-link.txt:work/fftw-3.3.4/doc/FAQ/fftw-faq.html/index.html:<link rev="made" href="mailto:fftw@fftw.org">
fftw-link.txt:work/fftw-3.3.4/doc/FAQ/fftw-faq.html/index.html:<link rel="Contents" href="index.html">
fftw-link.txt:work/fftw-3.3.4/doc/FAQ/fftw-faq.html/index.html:<link rel="Start" href="index.html">
fftw-link.txt:work/fftw-3.3.4/doc/FAQ/fftw-faq.html/index.html:<link rel="Bookmark" title="FFTW FAQ" href="index.html">
fftw-link.txt:work/fftw-3.3.4/doc/FAQ/fftw-faq.html/index.html:<li><a href="section3.html#linkfails" rel=subdocument>Q3.13. My program does not link (on Unix).</a>
fftw-link.txt:work/fftw-3.3.4/doc/FAQ/fftw-faq.html/index.html:<li><a href="section3.html#linkheader" rel=subdocument>Q3.14. I included your header, but linking still
fftw-link.txt:work/fftw-3.3.4/doc/FAQ/fftw-faq.html/section1.html:<link rev="made" href="mailto:fftw@fftw.org">
fftw-link.txt:work/fftw-3.3.4/doc/FAQ/fftw-faq.html/section1.html:<link rel="Contents" href="index.html">
fftw-link.txt:work/fftw-3.3.4/doc/FAQ/fftw-faq.html/section1.html:<link rel="Start" href="index.html">
fftw-link.txt:work/fftw-3.3.4/doc/FAQ/fftw-faq.html/section1.html:<link rel="Next" href="section2.html"><link rel="Bookmark" title="FFTW FAQ" href="index.html">
fftw-link.txt:work/fftw-3.3.4/doc/FAQ/fftw-faq.html/section2.html:<link rev="made" href="mailto:fftw@fftw.org">
fftw-link.txt:work/fftw-3.3.4/doc/FAQ/fftw-faq.html/section2.html:<link rel="Contents" href="index.html">
fftw-link.txt:work/fftw-3.3.4/doc/FAQ/fftw-faq.html/section2.html:<link rel="Start" href="index.html">
fftw-link.txt:work/fftw-3.3.4/doc/FAQ/fftw-faq.html/section2.html:<link rel="Next" href="section3.html"><link rel="Previous" href="section1.html"><link rel="Bookmark" title="FFTW FAQ" href="index.html">
fftw-link.txt:work/fftw-3.3.4/doc/FAQ/fftw-faq.html/section2.html:<code>ranlib</code> of GNU <code>binutils</code> 2.9.1 on Irix has been observed to corrupt the FFTW libraries, causing a link failure when
fftw-link.txt:work/fftw-3.3.4/doc/FAQ/fftw-faq.html/section2.html:a symbolic link to <code>/bin/echo</code>.  
fftw-link.txt:work/fftw-3.3.4/doc/FAQ/fftw-faq.html/section2.html:Most definitely.  FFTW should compile and/or link under any C++
fftw-link.txt:work/fftw-3.3.4/doc/FAQ/fftw-faq.html/section3.html:<link rev="made" href="mailto:fftw@fftw.org">
fftw-link.txt:work/fftw-3.3.4/doc/FAQ/fftw-faq.html/section3.html:<link rel="Contents" href="index.html">
fftw-link.txt:work/fftw-3.3.4/doc/FAQ/fftw-faq.html/section3.html:<link rel="Start" href="index.html">
fftw-link.txt:work/fftw-3.3.4/doc/FAQ/fftw-faq.html/section3.html:<link rel="Next" href="section4.html"><link rel="Previous" href="section2.html"><link rel="Bookmark" title="FFTW FAQ" href="index.html">
fftw-link.txt:work/fftw-3.3.4/doc/FAQ/fftw-faq.html/section3.html:<li><a href="#linkfails" rel=subdocument>Q3.13. My program does not link (on Unix).</a>
fftw-link.txt:work/fftw-3.3.4/doc/FAQ/fftw-faq.html/section3.html:<li><a href="#linkheader" rel=subdocument>Q3.14. I included your header, but linking still
fftw-link.txt:work/fftw-3.3.4/doc/FAQ/fftw-faq.html/section3.html:<h2><A name="linkfails">
fftw-link.txt:work/fftw-3.3.4/doc/FAQ/fftw-faq.html/section3.html:Question 3.13.  My program does not link (on
fftw-link.txt:work/fftw-3.3.4/doc/FAQ/fftw-faq.html/section3.html:(<code>-lfftw3 -lm</code> for FFTW 3.x) and <i>after</i> your program sources/objects.  (The general rule is that if <i>A</i> uses <i>B</i>, then <i>A</i> must be listed before <i>B</i> in the link command.).  
fftw-link.txt:work/fftw-3.3.4/doc/FAQ/fftw-faq.html/section3.html:<h2><A name="linkheader">
fftw-link.txt:work/fftw-3.3.4/doc/FAQ/fftw-faq.html/section3.html:Question 3.14.  I included your header, but linking still
fftw-link.txt:work/fftw-3.3.4/doc/FAQ/fftw-faq.html/section3.html:library and link it into your program, not just
fftw-link.txt:work/fftw-3.3.4/doc/FAQ/fftw-faq.html/section4.html:<link rev="made" href="mailto:fftw@fftw.org">
fftw-link.txt:work/fftw-3.3.4/doc/FAQ/fftw-faq.html/section4.html:<link rel="Contents" href="index.html">
fftw-link.txt:work/fftw-3.3.4/doc/FAQ/fftw-faq.html/section4.html:<link rel="Start" href="index.html">
fftw-link.txt:work/fftw-3.3.4/doc/FAQ/fftw-faq.html/section4.html:<link rel="Next" href="section5.html"><link rel="Previous" href="section3.html"><link rel="Bookmark" title="FFTW FAQ" href="index.html">
fftw-link.txt:work/fftw-3.3.4/doc/FAQ/fftw-faq.html/section5.html:<link rev="made" href="mailto:fftw@fftw.org">
fftw-link.txt:work/fftw-3.3.4/doc/FAQ/fftw-faq.html/section5.html:<link rel="Contents" href="index.html">
fftw-link.txt:work/fftw-3.3.4/doc/FAQ/fftw-faq.html/section5.html:<link rel="Start" href="index.html">
fftw-link.txt:work/fftw-3.3.4/doc/FAQ/fftw-faq.html/section5.html:<link rel="Previous" href="section4.html"><link rel="Bookmark" title="FFTW FAQ" href="index.html">
fftw-link.txt:work/fftw-3.3.4/doc/FAQ/m-html.pl:<link rev="made" href="mailto:$user_authormail">
fftw-link.txt:work/fftw-3.3.4/doc/FAQ/m-html.pl:<link rel="Contents" href="index.html">
fftw-link.txt:work/fftw-3.3.4/doc/FAQ/m-html.pl:<link rel="Start" href="index.html">
fftw-link.txt:work/fftw-3.3.4/doc/FAQ/m-html.pl:<link rel="Bookmark" title="FFTW FAQ" href="index.html">
fftw-link.txt:work/fftw-3.3.4/doc/FAQ/m-html.pl:<link rev="made" href="mailto:$user_authormail">
fftw-link.txt:work/fftw-3.3.4/doc/FAQ/m-html.pl:<link rel="Contents" href="index.html">
fftw-link.txt:work/fftw-3.3.4/doc/FAQ/m-html.pl:<link rel="Start" href="index.html">
fftw-link.txt:work/fftw-3.3.4/doc/FAQ/m-html.pl:        print HTML "<link rel=\"Next\" href=\"$next.html\">" if $next;
fftw-link.txt:work/fftw-3.3.4/doc/FAQ/m-html.pl:	print HTML "<link rel=\"Previous\" href=\"$back.html\">" if $back;
fftw-link.txt:work/fftw-3.3.4/doc/FAQ/m-html.pl:<link rel="Bookmark" title="FFTW FAQ" href="index.html">
fftw-link.txt:work/fftw-3.3.4/doc/f77_wisdom.f:c     FFTW-calling programs be required to link to the Fortran I/O
fftw-link.txt:work/fftw-3.3.4/doc/fftw3.info-1:(http://www.fftw.org) also has links to FFT-related information online.  
fftw-link.txt:work/fftw-3.3.4/doc/fftw3.info-1:that links only the subset of FFTW needed by your application.
fftw-link.txt:work/fftw-3.3.4/doc/fftw3.info-1:FFTW, the FAQ, benchmarks, and other links, are available at the FFTW
fftw-link.txt:work/fftw-3.3.4/doc/fftw3.info-1:   You must link this code with the `fftw3' library.  On Unix systems,
fftw-link.txt:work/fftw-3.3.4/doc/fftw3.info-1:link with `-lfftw3 -lm'.
fftw-link.txt:work/fftw-3.3.4/doc/fftw3.info-1:`fftw_' prefix by `fftwf_' or `fftwl_' and link with `-lfftw3f' or
fftw-link.txt:work/fftw-3.3.4/doc/fftw3.info-1:   A program linking to an FFTW library compiled with SIMD support can
fftw-link.txt:work/fftw-3.3.4/doc/fftw3.info-1:your program is ever linked against a SIMD-using FFTW, we recommend
fftw-link.txt:work/fftw-3.3.4/doc/fftw3.info-1:   You must also link to the FFTW library.  On Unix, this means adding
fftw-link.txt:work/fftw-3.3.4/doc/fftw3.info-1:`-lfftw3 -lm' at the _end_ of the link command.
fftw-link.txt:work/fftw-3.3.4/doc/fftw3.info-1:     link to the different-precision libraries simultaneously.)
fftw-link.txt:work/fftw-3.3.4/doc/fftw3.info-1:use this type, link with `-lfftw3q -lquadmath -lm' (the `libquadmath'
fftw-link.txt:work/fftw-3.3.4/doc/fftw3.info-1:latter is a C subroutine that you can compile and link into your
fftw-link.txt:work/fftw-3.3.4/doc/fftw3.info-1:`fftw-wisdom-to-conf' produces a configuration routine that links to
fftw-link.txt:work/fftw-3.3.4/doc/fftw3.info-1:greatly reducing the size of statically linked executables (which should
fftw-link.txt:work/fftw-3.3.4/doc/fftw3.info-1:However, your programs may only link to _one_ of these two libraries at
fftw-link.txt:work/fftw-3.3.4/doc/fftw3.info-1:linked with `-lfftw3_threads -lfftw3 -lm' on Unix, or `-lfftw3_omp
fftw-link.txt:work/fftw-3.3.4/doc/fftw3.info-1:-lfftw3 -lm' if you compiled with OpenMP. You will also need to link
fftw-link.txt:work/fftw-3.3.4/doc/fftw3.info-1:detect how to compile and link code using your MPI implementation.  In
fftw-link.txt:work/fftw-3.3.4/doc/fftw3.info-1:   If, instead of a special compiler command, you need to link a certain
fftw-link.txt:work/fftw-3.3.4/doc/fftw3.info-1:library, you can specify the link command via the `MPILIBS' variable,
fftw-link.txt:work/fftw-3.3.4/doc/fftw3.info-1:Programs using the MPI FFTW routines should be linked with `-lfftw3_mpi
fftw-link.txt:work/fftw-3.3.4/doc/fftw3.info-1:to link with whatever library is responsible for MPI on your system; in
fftw-link.txt:work/fftw-3.3.4/doc/fftw3.info-1:`mpicc' to compile and link MPI code.  
fftw-link.txt:work/fftw-3.3.4/doc/fftw3.info-1:   You must also link to _both_ the FFTW MPI library and to the serial
fftw-link.txt:work/fftw-3.3.4/doc/fftw3.info-1:the end of the link command.
fftw-link.txt:work/fftw-3.3.4/doc/fftw3.info-1:also link with `-lfftw3q -lquadmath -lm' as in C.
fftw-link.txt:work/fftw-3.3.4/doc/fftw3.info-1:     `fftwl_' for the different precisions, and link to different
fftw-link.txt:work/fftw-3.3.4/doc/fftw3.info-1:   as usual for Fortran modules.  (You still need to link to the FFTW
fftw-link.txt:work/fftw-3.3.4/doc/fftw3.info-1:enforces this limitation doesn't deserve to link to FFTW.
fftw-link.txt:work/fftw-3.3.4/doc/fftw3.info-1:itself, lest all FFTW-using programs be required to link with the
fftw-link.txt:work/fftw-3.3.4/doc/fftw3.info-1:versions; codes written to use those versions will fail to link with
fftw-link.txt:work/fftw-3.3.4/doc/fftw3.info-1:prototypes are in `<fftw3.h>'.  However, you still have to link to a
fftw-link.txt:work/fftw-3.3.4/doc/fftw3.info-1:     must be linked in addition to the main FFTW library.  This is so
fftw-link.txt:work/fftw-3.3.4/doc/fftw3.info-1:     that users of the serial library do not need to link the system
fftw-link.txt:work/fftw-3.3.4/doc/fftw3.info-1:     included, the wrappers employ the linking conventions of the
fftw-link.txt:work/fftw-3.3.4/doc/fftw3.info-1:          `-mabi=altivec' option when compiling any code that links to
fftw-link.txt:work/fftw-3.3.4/doc/fftw3.info-1:          properly aligns the stack when compiling any code that links
fftw-link.txt:work/fftw-3.3.4/doc/fftw3.info-1:   Once these files are all compiled, link them into a library, or a
fftw-link.txt:work/fftw-3.3.4/doc/fftw3.info-1:the `libbench2/' directory, and link it into a library.  Then compile
fftw-link.txt:work/fftw-3.3.4/doc/fftw3.info-1:the code in the `tests/' directory and link it to the `libbench2' and
fftw-link.txt:work/fftw-3.3.4/doc/fftw3.info-1:(*note Wisdom Utilities::), compile `tools/fftw-wisdom.c' and link it
fftw-link.txt:work/fftw-3.3.4/doc/html/1d-Discrete-Hartley-Transforms-_0028DHTs_0029.html:<link title="Top" rel="start" href="index.html#Top">
fftw-link.txt:work/fftw-3.3.4/doc/html/1d-Discrete-Hartley-Transforms-_0028DHTs_0029.html:<link rel="up" href="What-FFTW-Really-Computes.html#What-FFTW-Really-Computes" title="What FFTW Really Computes">
fftw-link.txt:work/fftw-3.3.4/doc/html/1d-Discrete-Hartley-Transforms-_0028DHTs_0029.html:<link rel="prev" href="1d-Real_002dodd-DFTs-_0028DSTs_0029.html#g_t1d-Real_002dodd-DFTs-_0028DSTs_0029" title="1d Real-odd DFTs (DSTs)">
fftw-link.txt:work/fftw-3.3.4/doc/html/1d-Discrete-Hartley-Transforms-_0028DHTs_0029.html:<link rel="next" href="Multi_002ddimensional-Transforms.html#Multi_002ddimensional-Transforms" title="Multi-dimensional Transforms">
fftw-link.txt:work/fftw-3.3.4/doc/html/1d-Discrete-Hartley-Transforms-_0028DHTs_0029.html:<link href="http://www.gnu.org/software/texinfo/" rel="generator-home" title="Texinfo Homepage">
fftw-link.txt:work/fftw-3.3.4/doc/html/1d-Real_002deven-DFTs-_0028DCTs_0029.html:<link title="Top" rel="start" href="index.html#Top">
fftw-link.txt:work/fftw-3.3.4/doc/html/1d-Real_002deven-DFTs-_0028DCTs_0029.html:<link rel="up" href="What-FFTW-Really-Computes.html#What-FFTW-Really-Computes" title="What FFTW Really Computes">
fftw-link.txt:work/fftw-3.3.4/doc/html/1d-Real_002deven-DFTs-_0028DCTs_0029.html:<link rel="prev" href="The-1d-Real_002ddata-DFT.html#The-1d-Real_002ddata-DFT" title="The 1d Real-data DFT">
fftw-link.txt:work/fftw-3.3.4/doc/html/1d-Real_002deven-DFTs-_0028DCTs_0029.html:<link rel="next" href="1d-Real_002dodd-DFTs-_0028DSTs_0029.html#g_t1d-Real_002dodd-DFTs-_0028DSTs_0029" title="1d Real-odd DFTs (DSTs)">
fftw-link.txt:work/fftw-3.3.4/doc/html/1d-Real_002deven-DFTs-_0028DCTs_0029.html:<link href="http://www.gnu.org/software/texinfo/" rel="generator-home" title="Texinfo Homepage">
fftw-link.txt:work/fftw-3.3.4/doc/html/1d-Real_002dodd-DFTs-_0028DSTs_0029.html:<link title="Top" rel="start" href="index.html#Top">
fftw-link.txt:work/fftw-3.3.4/doc/html/1d-Real_002dodd-DFTs-_0028DSTs_0029.html:<link rel="up" href="What-FFTW-Really-Computes.html#What-FFTW-Really-Computes" title="What FFTW Really Computes">
fftw-link.txt:work/fftw-3.3.4/doc/html/1d-Real_002dodd-DFTs-_0028DSTs_0029.html:<link rel="prev" href="1d-Real_002deven-DFTs-_0028DCTs_0029.html#g_t1d-Real_002deven-DFTs-_0028DCTs_0029" title="1d Real-even DFTs (DCTs)">
fftw-link.txt:work/fftw-3.3.4/doc/html/1d-Real_002dodd-DFTs-_0028DSTs_0029.html:<link rel="next" href="1d-Discrete-Hartley-Transforms-_0028DHTs_0029.html#g_t1d-Discrete-Hartley-Transforms-_0028DHTs_0029" title="1d Discrete Hartley Transforms (DHTs)">
fftw-link.txt:work/fftw-3.3.4/doc/html/1d-Real_002dodd-DFTs-_0028DSTs_0029.html:<link href="http://www.gnu.org/software/texinfo/" rel="generator-home" title="Texinfo Homepage">
fftw-link.txt:work/fftw-3.3.4/doc/html/2d-MPI-example.html:<link title="Top" rel="start" href="index.html#Top">
fftw-link.txt:work/fftw-3.3.4/doc/html/2d-MPI-example.html:<link rel="up" href="Distributed_002dmemory-FFTW-with-MPI.html#Distributed_002dmemory-FFTW-with-MPI" title="Distributed-memory FFTW with MPI">
fftw-link.txt:work/fftw-3.3.4/doc/html/2d-MPI-example.html:<link rel="prev" href="Linking-and-Initializing-MPI-FFTW.html#Linking-and-Initializing-MPI-FFTW" title="Linking and Initializing MPI FFTW">
fftw-link.txt:work/fftw-3.3.4/doc/html/2d-MPI-example.html:<link rel="next" href="MPI-Data-Distribution.html#MPI-Data-Distribution" title="MPI Data Distribution">
fftw-link.txt:work/fftw-3.3.4/doc/html/2d-MPI-example.html:<link href="http://www.gnu.org/software/texinfo/" rel="generator-home" title="Texinfo Homepage">
fftw-link.txt:work/fftw-3.3.4/doc/html/64_002dbit-Guru-Interface.html:<link title="Top" rel="start" href="index.html#Top">
fftw-link.txt:work/fftw-3.3.4/doc/html/64_002dbit-Guru-Interface.html:<link rel="up" href="Guru-Interface.html#Guru-Interface" title="Guru Interface">
fftw-link.txt:work/fftw-3.3.4/doc/html/64_002dbit-Guru-Interface.html:<link rel="prev" href="Guru-Real_002dto_002dreal-Transforms.html#Guru-Real_002dto_002dreal-Transforms" title="Guru Real-to-real Transforms">
fftw-link.txt:work/fftw-3.3.4/doc/html/64_002dbit-Guru-Interface.html:<link href="http://www.gnu.org/software/texinfo/" rel="generator-home" title="Texinfo Homepage">
fftw-link.txt:work/fftw-3.3.4/doc/html/Accessing-the-wisdom-API-from-Fortran.html:<link title="Top" rel="start" href="index.html#Top">
fftw-link.txt:work/fftw-3.3.4/doc/html/Accessing-the-wisdom-API-from-Fortran.html:<link rel="up" href="Calling-FFTW-from-Modern-Fortran.html#Calling-FFTW-from-Modern-Fortran" title="Calling FFTW from Modern Fortran">
fftw-link.txt:work/fftw-3.3.4/doc/html/Accessing-the-wisdom-API-from-Fortran.html:<link rel="prev" href="Allocating-aligned-memory-in-Fortran.html#Allocating-aligned-memory-in-Fortran" title="Allocating aligned memory in Fortran">
fftw-link.txt:work/fftw-3.3.4/doc/html/Accessing-the-wisdom-API-from-Fortran.html:<link rel="next" href="Defining-an-FFTW-module.html#Defining-an-FFTW-module" title="Defining an FFTW module">
fftw-link.txt:work/fftw-3.3.4/doc/html/Accessing-the-wisdom-API-from-Fortran.html:<link href="http://www.gnu.org/software/texinfo/" rel="generator-home" title="Texinfo Homepage">
fftw-link.txt:work/fftw-3.3.4/doc/html/Acknowledgments.html:<link title="Top" rel="start" href="index.html#Top">
fftw-link.txt:work/fftw-3.3.4/doc/html/Acknowledgments.html:<link rel="prev" href="Installation-and-Customization.html#Installation-and-Customization" title="Installation and Customization">
fftw-link.txt:work/fftw-3.3.4/doc/html/Acknowledgments.html:<link rel="next" href="License-and-Copyright.html#License-and-Copyright" title="License and Copyright">
fftw-link.txt:work/fftw-3.3.4/doc/html/Acknowledgments.html:<link href="http://www.gnu.org/software/texinfo/" rel="generator-home" title="Texinfo Homepage">
fftw-link.txt:work/fftw-3.3.4/doc/html/Advanced-Complex-DFTs.html:<link title="Top" rel="start" href="index.html#Top">
fftw-link.txt:work/fftw-3.3.4/doc/html/Advanced-Complex-DFTs.html:<link rel="up" href="Advanced-Interface.html#Advanced-Interface" title="Advanced Interface">
fftw-link.txt:work/fftw-3.3.4/doc/html/Advanced-Complex-DFTs.html:<link rel="prev" href="Advanced-Interface.html#Advanced-Interface" title="Advanced Interface">
fftw-link.txt:work/fftw-3.3.4/doc/html/Advanced-Complex-DFTs.html:<link rel="next" href="Advanced-Real_002ddata-DFTs.html#Advanced-Real_002ddata-DFTs" title="Advanced Real-data DFTs">
fftw-link.txt:work/fftw-3.3.4/doc/html/Advanced-Complex-DFTs.html:<link href="http://www.gnu.org/software/texinfo/" rel="generator-home" title="Texinfo Homepage">
fftw-link.txt:work/fftw-3.3.4/doc/html/Advanced-Interface.html:<link title="Top" rel="start" href="index.html#Top">
fftw-link.txt:work/fftw-3.3.4/doc/html/Advanced-Interface.html:<link rel="up" href="FFTW-Reference.html#FFTW-Reference" title="FFTW Reference">
fftw-link.txt:work/fftw-3.3.4/doc/html/Advanced-Interface.html:<link rel="prev" href="Basic-Interface.html#Basic-Interface" title="Basic Interface">
fftw-link.txt:work/fftw-3.3.4/doc/html/Advanced-Interface.html:<link rel="next" href="Guru-Interface.html#Guru-Interface" title="Guru Interface">
fftw-link.txt:work/fftw-3.3.4/doc/html/Advanced-Interface.html:<link href="http://www.gnu.org/software/texinfo/" rel="generator-home" title="Texinfo Homepage">
fftw-link.txt:work/fftw-3.3.4/doc/html/Advanced-Real_002ddata-DFTs.html:<link title="Top" rel="start" href="index.html#Top">
fftw-link.txt:work/fftw-3.3.4/doc/html/Advanced-Real_002ddata-DFTs.html:<link rel="up" href="Advanced-Interface.html#Advanced-Interface" title="Advanced Interface">
fftw-link.txt:work/fftw-3.3.4/doc/html/Advanced-Real_002ddata-DFTs.html:<link rel="prev" href="Advanced-Complex-DFTs.html#Advanced-Complex-DFTs" title="Advanced Complex DFTs">
fftw-link.txt:work/fftw-3.3.4/doc/html/Advanced-Real_002ddata-DFTs.html:<link rel="next" href="Advanced-Real_002dto_002dreal-Transforms.html#Advanced-Real_002dto_002dreal-Transforms" title="Advanced Real-to-real Transforms">
fftw-link.txt:work/fftw-3.3.4/doc/html/Advanced-Real_002ddata-DFTs.html:<link href="http://www.gnu.org/software/texinfo/" rel="generator-home" title="Texinfo Homepage">
fftw-link.txt:work/fftw-3.3.4/doc/html/Advanced-Real_002dto_002dreal-Transforms.html:<link title="Top" rel="start" href="index.html#Top">
fftw-link.txt:work/fftw-3.3.4/doc/html/Advanced-Real_002dto_002dreal-Transforms.html:<link rel="up" href="Advanced-Interface.html#Advanced-Interface" title="Advanced Interface">
fftw-link.txt:work/fftw-3.3.4/doc/html/Advanced-Real_002dto_002dreal-Transforms.html:<link rel="prev" href="Advanced-Real_002ddata-DFTs.html#Advanced-Real_002ddata-DFTs" title="Advanced Real-data DFTs">
fftw-link.txt:work/fftw-3.3.4/doc/html/Advanced-Real_002dto_002dreal-Transforms.html:<link href="http://www.gnu.org/software/texinfo/" rel="generator-home" title="Texinfo Homepage">
fftw-link.txt:work/fftw-3.3.4/doc/html/Advanced-distributed_002dtranspose-interface.html:<link title="Top" rel="start" href="index.html#Top">
fftw-link.txt:work/fftw-3.3.4/doc/html/Advanced-distributed_002dtranspose-interface.html:<link rel="up" href="FFTW-MPI-Transposes.html#FFTW-MPI-Transposes" title="FFTW MPI Transposes">
fftw-link.txt:work/fftw-3.3.4/doc/html/Advanced-distributed_002dtranspose-interface.html:<link rel="prev" href="Basic-distributed_002dtranspose-interface.html#Basic-distributed_002dtranspose-interface" title="Basic distributed-transpose interface">
fftw-link.txt:work/fftw-3.3.4/doc/html/Advanced-distributed_002dtranspose-interface.html:<link rel="next" href="An-improved-replacement-for-MPI_005fAlltoall.html#An-improved-replacement-for-MPI_005fAlltoall" title="An improved replacement for MPI_Alltoall">
fftw-link.txt:work/fftw-3.3.4/doc/html/Advanced-distributed_002dtranspose-interface.html:<link href="http://www.gnu.org/software/texinfo/" rel="generator-home" title="Texinfo Homepage">
fftw-link.txt:work/fftw-3.3.4/doc/html/Allocating-aligned-memory-in-Fortran.html:<link title="Top" rel="start" href="index.html#Top">
fftw-link.txt:work/fftw-3.3.4/doc/html/Allocating-aligned-memory-in-Fortran.html:<link rel="up" href="Calling-FFTW-from-Modern-Fortran.html#Calling-FFTW-from-Modern-Fortran" title="Calling FFTW from Modern Fortran">
fftw-link.txt:work/fftw-3.3.4/doc/html/Allocating-aligned-memory-in-Fortran.html:<link rel="prev" href="Plan-execution-in-Fortran.html#Plan-execution-in-Fortran" title="Plan execution in Fortran">
fftw-link.txt:work/fftw-3.3.4/doc/html/Allocating-aligned-memory-in-Fortran.html:<link rel="next" href="Accessing-the-wisdom-API-from-Fortran.html#Accessing-the-wisdom-API-from-Fortran" title="Accessing the wisdom API from Fortran">
fftw-link.txt:work/fftw-3.3.4/doc/html/Allocating-aligned-memory-in-Fortran.html:<link href="http://www.gnu.org/software/texinfo/" rel="generator-home" title="Texinfo Homepage">
fftw-link.txt:work/fftw-3.3.4/doc/html/An-improved-replacement-for-MPI_005fAlltoall.html:<link title="Top" rel="start" href="index.html#Top">
fftw-link.txt:work/fftw-3.3.4/doc/html/An-improved-replacement-for-MPI_005fAlltoall.html:<link rel="up" href="FFTW-MPI-Transposes.html#FFTW-MPI-Transposes" title="FFTW MPI Transposes">
fftw-link.txt:work/fftw-3.3.4/doc/html/An-improved-replacement-for-MPI_005fAlltoall.html:<link rel="prev" href="Advanced-distributed_002dtranspose-interface.html#Advanced-distributed_002dtranspose-interface" title="Advanced distributed-transpose interface">
fftw-link.txt:work/fftw-3.3.4/doc/html/An-improved-replacement-for-MPI_005fAlltoall.html:<link href="http://www.gnu.org/software/texinfo/" rel="generator-home" title="Texinfo Homepage">
fftw-link.txt:work/fftw-3.3.4/doc/html/Avoiding-MPI-Deadlocks.html:<link title="Top" rel="start" href="index.html#Top">
fftw-link.txt:work/fftw-3.3.4/doc/html/Avoiding-MPI-Deadlocks.html:<link rel="up" href="Distributed_002dmemory-FFTW-with-MPI.html#Distributed_002dmemory-FFTW-with-MPI" title="Distributed-memory FFTW with MPI">
fftw-link.txt:work/fftw-3.3.4/doc/html/Avoiding-MPI-Deadlocks.html:<link rel="prev" href="FFTW-MPI-Wisdom.html#FFTW-MPI-Wisdom" title="FFTW MPI Wisdom">
fftw-link.txt:work/fftw-3.3.4/doc/html/Avoiding-MPI-Deadlocks.html:<link rel="next" href="FFTW-MPI-Performance-Tips.html#FFTW-MPI-Performance-Tips" title="FFTW MPI Performance Tips">
fftw-link.txt:work/fftw-3.3.4/doc/html/Avoiding-MPI-Deadlocks.html:<link href="http://www.gnu.org/software/texinfo/" rel="generator-home" title="Texinfo Homepage">
fftw-link.txt:work/fftw-3.3.4/doc/html/Basic-Interface.html:<link title="Top" rel="start" href="index.html#Top">
fftw-link.txt:work/fftw-3.3.4/doc/html/Basic-Interface.html:<link rel="up" href="FFTW-Reference.html#FFTW-Reference" title="FFTW Reference">
fftw-link.txt:work/fftw-3.3.4/doc/html/Basic-Interface.html:<link rel="prev" href="Using-Plans.html#Using-Plans" title="Using Plans">
fftw-link.txt:work/fftw-3.3.4/doc/html/Basic-Interface.html:<link rel="next" href="Advanced-Interface.html#Advanced-Interface" title="Advanced Interface">
fftw-link.txt:work/fftw-3.3.4/doc/html/Basic-Interface.html:<link href="http://www.gnu.org/software/texinfo/" rel="generator-home" title="Texinfo Homepage">
fftw-link.txt:work/fftw-3.3.4/doc/html/Basic-and-advanced-distribution-interfaces.html:<link title="Top" rel="start" href="index.html#Top">
fftw-link.txt:work/fftw-3.3.4/doc/html/Basic-and-advanced-distribution-interfaces.html:<link rel="up" href="MPI-Data-Distribution.html#MPI-Data-Distribution" title="MPI Data Distribution">
fftw-link.txt:work/fftw-3.3.4/doc/html/Basic-and-advanced-distribution-interfaces.html:<link rel="prev" href="MPI-Data-Distribution.html#MPI-Data-Distribution" title="MPI Data Distribution">
fftw-link.txt:work/fftw-3.3.4/doc/html/Basic-and-advanced-distribution-interfaces.html:<link rel="next" href="Load-balancing.html#Load-balancing" title="Load balancing">
fftw-link.txt:work/fftw-3.3.4/doc/html/Basic-and-advanced-distribution-interfaces.html:<link href="http://www.gnu.org/software/texinfo/" rel="generator-home" title="Texinfo Homepage">
fftw-link.txt:work/fftw-3.3.4/doc/html/Basic-distributed_002dtranspose-interface.html:<link title="Top" rel="start" href="index.html#Top">
fftw-link.txt:work/fftw-3.3.4/doc/html/Basic-distributed_002dtranspose-interface.html:<link rel="up" href="FFTW-MPI-Transposes.html#FFTW-MPI-Transposes" title="FFTW MPI Transposes">
fftw-link.txt:work/fftw-3.3.4/doc/html/Basic-distributed_002dtranspose-interface.html:<link rel="prev" href="FFTW-MPI-Transposes.html#FFTW-MPI-Transposes" title="FFTW MPI Transposes">
fftw-link.txt:work/fftw-3.3.4/doc/html/Basic-distributed_002dtranspose-interface.html:<link rel="next" href="Advanced-distributed_002dtranspose-interface.html#Advanced-distributed_002dtranspose-interface" title="Advanced distributed-transpose interface">
fftw-link.txt:work/fftw-3.3.4/doc/html/Basic-distributed_002dtranspose-interface.html:<link href="http://www.gnu.org/software/texinfo/" rel="generator-home" title="Texinfo Homepage">
fftw-link.txt:work/fftw-3.3.4/doc/html/Calling-FFTW-from-Legacy-Fortran.html:<link title="Top" rel="start" href="index.html#Top">
fftw-link.txt:work/fftw-3.3.4/doc/html/Calling-FFTW-from-Legacy-Fortran.html:<link rel="prev" href="Calling-FFTW-from-Modern-Fortran.html#Calling-FFTW-from-Modern-Fortran" title="Calling FFTW from Modern Fortran">
fftw-link.txt:work/fftw-3.3.4/doc/html/Calling-FFTW-from-Legacy-Fortran.html:<link rel="next" href="Upgrading-from-FFTW-version-2.html#Upgrading-from-FFTW-version-2" title="Upgrading from FFTW version 2">
fftw-link.txt:work/fftw-3.3.4/doc/html/Calling-FFTW-from-Legacy-Fortran.html:<link href="http://www.gnu.org/software/texinfo/" rel="generator-home" title="Texinfo Homepage">
fftw-link.txt:work/fftw-3.3.4/doc/html/Calling-FFTW-from-Modern-Fortran.html:<link title="Top" rel="start" href="index.html#Top">
fftw-link.txt:work/fftw-3.3.4/doc/html/Calling-FFTW-from-Modern-Fortran.html:<link rel="prev" href="Distributed_002dmemory-FFTW-with-MPI.html#Distributed_002dmemory-FFTW-with-MPI" title="Distributed-memory FFTW with MPI">
fftw-link.txt:work/fftw-3.3.4/doc/html/Calling-FFTW-from-Modern-Fortran.html:<link rel="next" href="Calling-FFTW-from-Legacy-Fortran.html#Calling-FFTW-from-Legacy-Fortran" title="Calling FFTW from Legacy Fortran">
fftw-link.txt:work/fftw-3.3.4/doc/html/Calling-FFTW-from-Modern-Fortran.html:<link href="http://www.gnu.org/software/texinfo/" rel="generator-home" title="Texinfo Homepage">
fftw-link.txt:work/fftw-3.3.4/doc/html/Caveats-in-Using-Wisdom.html:<link title="Top" rel="start" href="index.html#Top">
fftw-link.txt:work/fftw-3.3.4/doc/html/Caveats-in-Using-Wisdom.html:<link rel="up" href="Other-Important-Topics.html#Other-Important-Topics" title="Other Important Topics">
fftw-link.txt:work/fftw-3.3.4/doc/html/Caveats-in-Using-Wisdom.html:<link rel="prev" href="Words-of-Wisdom_002dSaving-Plans.html#Words-of-Wisdom_002dSaving-Plans" title="Words of Wisdom-Saving Plans">
fftw-link.txt:work/fftw-3.3.4/doc/html/Caveats-in-Using-Wisdom.html:<link href="http://www.gnu.org/software/texinfo/" rel="generator-home" title="Texinfo Homepage">
fftw-link.txt:work/fftw-3.3.4/doc/html/Column_002dmajor-Format.html:<link title="Top" rel="start" href="index.html#Top">
fftw-link.txt:work/fftw-3.3.4/doc/html/Column_002dmajor-Format.html:<link rel="up" href="Multi_002ddimensional-Array-Format.html#Multi_002ddimensional-Array-Format" title="Multi-dimensional Array Format">
fftw-link.txt:work/fftw-3.3.4/doc/html/Column_002dmajor-Format.html:<link rel="prev" href="Row_002dmajor-Format.html#Row_002dmajor-Format" title="Row-major Format">
fftw-link.txt:work/fftw-3.3.4/doc/html/Column_002dmajor-Format.html:<link rel="next" href="Fixed_002dsize-Arrays-in-C.html#Fixed_002dsize-Arrays-in-C" title="Fixed-size Arrays in C">
fftw-link.txt:work/fftw-3.3.4/doc/html/Column_002dmajor-Format.html:<link href="http://www.gnu.org/software/texinfo/" rel="generator-home" title="Texinfo Homepage">
fftw-link.txt:work/fftw-3.3.4/doc/html/Combining-MPI-and-Threads.html:<link title="Top" rel="start" href="index.html#Top">
fftw-link.txt:work/fftw-3.3.4/doc/html/Combining-MPI-and-Threads.html:<link rel="up" href="Distributed_002dmemory-FFTW-with-MPI.html#Distributed_002dmemory-FFTW-with-MPI" title="Distributed-memory FFTW with MPI">
fftw-link.txt:work/fftw-3.3.4/doc/html/Combining-MPI-and-Threads.html:<link rel="prev" href="FFTW-MPI-Performance-Tips.html#FFTW-MPI-Performance-Tips" title="FFTW MPI Performance Tips">
fftw-link.txt:work/fftw-3.3.4/doc/html/Combining-MPI-and-Threads.html:<link rel="next" href="FFTW-MPI-Reference.html#FFTW-MPI-Reference" title="FFTW MPI Reference">
fftw-link.txt:work/fftw-3.3.4/doc/html/Combining-MPI-and-Threads.html:<link href="http://www.gnu.org/software/texinfo/" rel="generator-home" title="Texinfo Homepage">
fftw-link.txt:work/fftw-3.3.4/doc/html/Complex-DFTs.html:<link title="Top" rel="start" href="index.html#Top">
fftw-link.txt:work/fftw-3.3.4/doc/html/Complex-DFTs.html:<link rel="up" href="Basic-Interface.html#Basic-Interface" title="Basic Interface">
fftw-link.txt:work/fftw-3.3.4/doc/html/Complex-DFTs.html:<link rel="prev" href="Basic-Interface.html#Basic-Interface" title="Basic Interface">
fftw-link.txt:work/fftw-3.3.4/doc/html/Complex-DFTs.html:<link rel="next" href="Planner-Flags.html#Planner-Flags" title="Planner Flags">
fftw-link.txt:work/fftw-3.3.4/doc/html/Complex-DFTs.html:<link href="http://www.gnu.org/software/texinfo/" rel="generator-home" title="Texinfo Homepage">
fftw-link.txt:work/fftw-3.3.4/doc/html/Complex-Multi_002dDimensional-DFTs.html:<link title="Top" rel="start" href="index.html#Top">
fftw-link.txt:work/fftw-3.3.4/doc/html/Complex-Multi_002dDimensional-DFTs.html:<link rel="up" href="Tutorial.html#Tutorial" title="Tutorial">
fftw-link.txt:work/fftw-3.3.4/doc/html/Complex-Multi_002dDimensional-DFTs.html:<link rel="prev" href="Complex-One_002dDimensional-DFTs.html#Complex-One_002dDimensional-DFTs" title="Complex One-Dimensional DFTs">
fftw-link.txt:work/fftw-3.3.4/doc/html/Complex-Multi_002dDimensional-DFTs.html:<link rel="next" href="One_002dDimensional-DFTs-of-Real-Data.html#One_002dDimensional-DFTs-of-Real-Data" title="One-Dimensional DFTs of Real Data">
fftw-link.txt:work/fftw-3.3.4/doc/html/Complex-Multi_002dDimensional-DFTs.html:<link href="http://www.gnu.org/software/texinfo/" rel="generator-home" title="Texinfo Homepage">
fftw-link.txt:work/fftw-3.3.4/doc/html/Complex-One_002dDimensional-DFTs.html:<link title="Top" rel="start" href="index.html#Top">
fftw-link.txt:work/fftw-3.3.4/doc/html/Complex-One_002dDimensional-DFTs.html:<link rel="up" href="Tutorial.html#Tutorial" title="Tutorial">
fftw-link.txt:work/fftw-3.3.4/doc/html/Complex-One_002dDimensional-DFTs.html:<link rel="prev" href="Tutorial.html#Tutorial" title="Tutorial">
fftw-link.txt:work/fftw-3.3.4/doc/html/Complex-One_002dDimensional-DFTs.html:<link rel="next" href="Complex-Multi_002dDimensional-DFTs.html#Complex-Multi_002dDimensional-DFTs" title="Complex Multi-Dimensional DFTs">
fftw-link.txt:work/fftw-3.3.4/doc/html/Complex-One_002dDimensional-DFTs.html:<link href="http://www.gnu.org/software/texinfo/" rel="generator-home" title="Texinfo Homepage">
fftw-link.txt:work/fftw-3.3.4/doc/html/Complex-One_002dDimensional-DFTs.html:   <p>You must link this code with the <code>fftw3</code> library.  On Unix systems,
fftw-link.txt:work/fftw-3.3.4/doc/html/Complex-One_002dDimensional-DFTs.html:link with <code>-lfftw3 -lm</code>.
fftw-link.txt:work/fftw-3.3.4/doc/html/Complex-One_002dDimensional-DFTs.html:<code>fftw_</code> prefix by <code>fftwf_</code> or <code>fftwl_</code> and link with
fftw-link.txt:work/fftw-3.3.4/doc/html/Complex-numbers.html:<link title="Top" rel="start" href="index.html#Top">
fftw-link.txt:work/fftw-3.3.4/doc/html/Complex-numbers.html:<link rel="up" href="Data-Types-and-Files.html#Data-Types-and-Files" title="Data Types and Files">
fftw-link.txt:work/fftw-3.3.4/doc/html/Complex-numbers.html:<link rel="prev" href="Data-Types-and-Files.html#Data-Types-and-Files" title="Data Types and Files">
fftw-link.txt:work/fftw-3.3.4/doc/html/Complex-numbers.html:<link rel="next" href="Precision.html#Precision" title="Precision">
fftw-link.txt:work/fftw-3.3.4/doc/html/Complex-numbers.html:<link href="http://www.gnu.org/software/texinfo/" rel="generator-home" title="Texinfo Homepage">
fftw-link.txt:work/fftw-3.3.4/doc/html/Concept-Index.html:<link title="Top" rel="start" href="index.html#Top">
fftw-link.txt:work/fftw-3.3.4/doc/html/Concept-Index.html:<link rel="prev" href="License-and-Copyright.html#License-and-Copyright" title="License and Copyright">
fftw-link.txt:work/fftw-3.3.4/doc/html/Concept-Index.html:<link rel="next" href="Library-Index.html#Library-Index" title="Library Index">
fftw-link.txt:work/fftw-3.3.4/doc/html/Concept-Index.html:<link href="http://www.gnu.org/software/texinfo/" rel="generator-home" title="Texinfo Homepage">
fftw-link.txt:work/fftw-3.3.4/doc/html/Concept-Index.html:<li><a href="Linking-and-Initializing-MPI-FFTW.html#index-linking-on-Unix-355">linking on Unix</a>: <a href="Linking-and-Initializing-MPI-FFTW.html#Linking-and-Initializing-MPI-FFTW">Linking and Initializing MPI FFTW</a></li>
fftw-link.txt:work/fftw-3.3.4/doc/html/Concept-Index.html:<li><a href="Usage-of-Multi_002dthreaded-FFTW.html#index-linking-on-Unix-336">linking on Unix</a>: <a href="Usage-of-Multi_002dthreaded-FFTW.html#Usage-of-Multi_002dthreaded-FFTW">Usage of Multi-threaded FFTW</a></li>
fftw-link.txt:work/fftw-3.3.4/doc/html/Cycle-Counters.html:<link title="Top" rel="start" href="index.html#Top">
fftw-link.txt:work/fftw-3.3.4/doc/html/Cycle-Counters.html:<link rel="up" href="Installation-and-Customization.html#Installation-and-Customization" title="Installation and Customization">
fftw-link.txt:work/fftw-3.3.4/doc/html/Cycle-Counters.html:<link rel="prev" href="Installation-on-non_002dUnix-systems.html#Installation-on-non_002dUnix-systems" title="Installation on non-Unix systems">
fftw-link.txt:work/fftw-3.3.4/doc/html/Cycle-Counters.html:<link rel="next" href="Generating-your-own-code.html#Generating-your-own-code" title="Generating your own code">
fftw-link.txt:work/fftw-3.3.4/doc/html/Cycle-Counters.html:<link href="http://www.gnu.org/software/texinfo/" rel="generator-home" title="Texinfo Homepage">
fftw-link.txt:work/fftw-3.3.4/doc/html/Data-Types-and-Files.html:<link title="Top" rel="start" href="index.html#Top">
fftw-link.txt:work/fftw-3.3.4/doc/html/Data-Types-and-Files.html:<link rel="up" href="FFTW-Reference.html#FFTW-Reference" title="FFTW Reference">
fftw-link.txt:work/fftw-3.3.4/doc/html/Data-Types-and-Files.html:<link rel="prev" href="FFTW-Reference.html#FFTW-Reference" title="FFTW Reference">
fftw-link.txt:work/fftw-3.3.4/doc/html/Data-Types-and-Files.html:<link rel="next" href="Using-Plans.html#Using-Plans" title="Using Plans">
fftw-link.txt:work/fftw-3.3.4/doc/html/Data-Types-and-Files.html:<link href="http://www.gnu.org/software/texinfo/" rel="generator-home" title="Texinfo Homepage">
fftw-link.txt:work/fftw-3.3.4/doc/html/Data-Types-and-Files.html:   <p>You must also link to the FFTW library.  On Unix, this
fftw-link.txt:work/fftw-3.3.4/doc/html/Data-Types-and-Files.html:means adding <code>-lfftw3 -lm</code> at the <em>end</em> of the link command.
fftw-link.txt:work/fftw-3.3.4/doc/html/Defining-an-FFTW-module.html:<link title="Top" rel="start" href="index.html#Top">
fftw-link.txt:work/fftw-3.3.4/doc/html/Defining-an-FFTW-module.html:<link rel="up" href="Calling-FFTW-from-Modern-Fortran.html#Calling-FFTW-from-Modern-Fortran" title="Calling FFTW from Modern Fortran">
fftw-link.txt:work/fftw-3.3.4/doc/html/Defining-an-FFTW-module.html:<link rel="prev" href="Accessing-the-wisdom-API-from-Fortran.html#Accessing-the-wisdom-API-from-Fortran" title="Accessing the wisdom API from Fortran">
fftw-link.txt:work/fftw-3.3.4/doc/html/Defining-an-FFTW-module.html:<link href="http://www.gnu.org/software/texinfo/" rel="generator-home" title="Texinfo Homepage">
fftw-link.txt:work/fftw-3.3.4/doc/html/Defining-an-FFTW-module.html:   <p>as usual for Fortran modules.  (You still need to link to the FFTW
fftw-link.txt:work/fftw-3.3.4/doc/html/Distributed_002dmemory-FFTW-with-MPI.html:<link title="Top" rel="start" href="index.html#Top">
fftw-link.txt:work/fftw-3.3.4/doc/html/Distributed_002dmemory-FFTW-with-MPI.html:<link rel="prev" href="Multi_002dthreaded-FFTW.html#Multi_002dthreaded-FFTW" title="Multi-threaded FFTW">
fftw-link.txt:work/fftw-3.3.4/doc/html/Distributed_002dmemory-FFTW-with-MPI.html:<link rel="next" href="Calling-FFTW-from-Modern-Fortran.html#Calling-FFTW-from-Modern-Fortran" title="Calling FFTW from Modern Fortran">
fftw-link.txt:work/fftw-3.3.4/doc/html/Distributed_002dmemory-FFTW-with-MPI.html:<link href="http://www.gnu.org/software/texinfo/" rel="generator-home" title="Texinfo Homepage">
fftw-link.txt:work/fftw-3.3.4/doc/html/Dynamic-Arrays-in-C.html:<link title="Top" rel="start" href="index.html#Top">
fftw-link.txt:work/fftw-3.3.4/doc/html/Dynamic-Arrays-in-C.html:<link rel="up" href="Multi_002ddimensional-Array-Format.html#Multi_002ddimensional-Array-Format" title="Multi-dimensional Array Format">
fftw-link.txt:work/fftw-3.3.4/doc/html/Dynamic-Arrays-in-C.html:<link rel="prev" href="Fixed_002dsize-Arrays-in-C.html#Fixed_002dsize-Arrays-in-C" title="Fixed-size Arrays in C">
fftw-link.txt:work/fftw-3.3.4/doc/html/Dynamic-Arrays-in-C.html:<link rel="next" href="Dynamic-Arrays-in-C_002dThe-Wrong-Way.html#Dynamic-Arrays-in-C_002dThe-Wrong-Way" title="Dynamic Arrays in C-The Wrong Way">
fftw-link.txt:work/fftw-3.3.4/doc/html/Dynamic-Arrays-in-C.html:<link href="http://www.gnu.org/software/texinfo/" rel="generator-home" title="Texinfo Homepage">
fftw-link.txt:work/fftw-3.3.4/doc/html/Dynamic-Arrays-in-C_002dThe-Wrong-Way.html:<link title="Top" rel="start" href="index.html#Top">
fftw-link.txt:work/fftw-3.3.4/doc/html/Dynamic-Arrays-in-C_002dThe-Wrong-Way.html:<link rel="up" href="Multi_002ddimensional-Array-Format.html#Multi_002ddimensional-Array-Format" title="Multi-dimensional Array Format">
fftw-link.txt:work/fftw-3.3.4/doc/html/Dynamic-Arrays-in-C_002dThe-Wrong-Way.html:<link rel="prev" href="Dynamic-Arrays-in-C.html#Dynamic-Arrays-in-C" title="Dynamic Arrays in C">
fftw-link.txt:work/fftw-3.3.4/doc/html/Dynamic-Arrays-in-C_002dThe-Wrong-Way.html:<link href="http://www.gnu.org/software/texinfo/" rel="generator-home" title="Texinfo Homepage">
fftw-link.txt:work/fftw-3.3.4/doc/html/Extended-and-quadruple-precision-in-Fortran.html:<link title="Top" rel="start" href="index.html#Top">
fftw-link.txt:work/fftw-3.3.4/doc/html/Extended-and-quadruple-precision-in-Fortran.html:<link rel="up" href="Overview-of-Fortran-interface.html#Overview-of-Fortran-interface" title="Overview of Fortran interface">
fftw-link.txt:work/fftw-3.3.4/doc/html/Extended-and-quadruple-precision-in-Fortran.html:<link rel="prev" href="Overview-of-Fortran-interface.html#Overview-of-Fortran-interface" title="Overview of Fortran interface">
fftw-link.txt:work/fftw-3.3.4/doc/html/Extended-and-quadruple-precision-in-Fortran.html:<link href="http://www.gnu.org/software/texinfo/" rel="generator-home" title="Texinfo Homepage">
fftw-link.txt:work/fftw-3.3.4/doc/html/Extended-and-quadruple-precision-in-Fortran.html:<code>fftw3l.f03</code>, as above.  You should also link with
fftw-link.txt:work/fftw-3.3.4/doc/html/FFTW-Constants-in-Fortran.html:<link title="Top" rel="start" href="index.html#Top">
fftw-link.txt:work/fftw-3.3.4/doc/html/FFTW-Constants-in-Fortran.html:<link rel="up" href="Calling-FFTW-from-Legacy-Fortran.html#Calling-FFTW-from-Legacy-Fortran" title="Calling FFTW from Legacy Fortran">
fftw-link.txt:work/fftw-3.3.4/doc/html/FFTW-Constants-in-Fortran.html:<link rel="prev" href="Fortran_002dinterface-routines.html#Fortran_002dinterface-routines" title="Fortran-interface routines">
fftw-link.txt:work/fftw-3.3.4/doc/html/FFTW-Constants-in-Fortran.html:<link rel="next" href="FFTW-Execution-in-Fortran.html#FFTW-Execution-in-Fortran" title="FFTW Execution in Fortran">
fftw-link.txt:work/fftw-3.3.4/doc/html/FFTW-Constants-in-Fortran.html:<link href="http://www.gnu.org/software/texinfo/" rel="generator-home" title="Texinfo Homepage">
fftw-link.txt:work/fftw-3.3.4/doc/html/FFTW-Execution-in-Fortran.html:<link title="Top" rel="start" href="index.html#Top">
fftw-link.txt:work/fftw-3.3.4/doc/html/FFTW-Execution-in-Fortran.html:<link rel="up" href="Calling-FFTW-from-Legacy-Fortran.html#Calling-FFTW-from-Legacy-Fortran" title="Calling FFTW from Legacy Fortran">
fftw-link.txt:work/fftw-3.3.4/doc/html/FFTW-Execution-in-Fortran.html:<link rel="prev" href="FFTW-Constants-in-Fortran.html#FFTW-Constants-in-Fortran" title="FFTW Constants in Fortran">
fftw-link.txt:work/fftw-3.3.4/doc/html/FFTW-Execution-in-Fortran.html:<link rel="next" href="Fortran-Examples.html#Fortran-Examples" title="Fortran Examples">
fftw-link.txt:work/fftw-3.3.4/doc/html/FFTW-Execution-in-Fortran.html:<link href="http://www.gnu.org/software/texinfo/" rel="generator-home" title="Texinfo Homepage">
fftw-link.txt:work/fftw-3.3.4/doc/html/FFTW-Fortran-type-reference.html:<link title="Top" rel="start" href="index.html#Top">
fftw-link.txt:work/fftw-3.3.4/doc/html/FFTW-Fortran-type-reference.html:<link rel="up" href="Calling-FFTW-from-Modern-Fortran.html#Calling-FFTW-from-Modern-Fortran" title="Calling FFTW from Modern Fortran">
fftw-link.txt:work/fftw-3.3.4/doc/html/FFTW-Fortran-type-reference.html:<link rel="prev" href="Reversing-array-dimensions.html#Reversing-array-dimensions" title="Reversing array dimensions">
fftw-link.txt:work/fftw-3.3.4/doc/html/FFTW-Fortran-type-reference.html:<link rel="next" href="Plan-execution-in-Fortran.html#Plan-execution-in-Fortran" title="Plan execution in Fortran">
fftw-link.txt:work/fftw-3.3.4/doc/html/FFTW-Fortran-type-reference.html:<link href="http://www.gnu.org/software/texinfo/" rel="generator-home" title="Texinfo Homepage">
fftw-link.txt:work/fftw-3.3.4/doc/html/FFTW-Fortran-type-reference.html:&lsquo;<samp><span class="samp">fftw_</span></samp>&rsquo;, <code>fftwf_</code>, and <code>fftwl_</code> for the different precisions, and link to different libraries (<code>-lfftw3</code>, <code>-lfftw3f</code>, and <code>-lfftw3l</code> on Unix), but use the <em>same</em> include file <code>fftw3.f03</code> and the <em>same</em> constants (all of which begin with &lsquo;<samp><span class="samp">FFTW_</span></samp>&rsquo;).  The exception is <code>long double</code> precision, for which you should <em>also</em> include <code>fftw3l.f03</code> (see <a href="Extended-and-quadruple-precision-in-Fortran.html#Extended-and-quadruple-precision-in-Fortran">Extended and quadruple precision in Fortran</a>).
fftw-link.txt:work/fftw-3.3.4/doc/html/FFTW-MPI-Fortran-Interface.html:<link title="Top" rel="start" href="index.html#Top">
fftw-link.txt:work/fftw-3.3.4/doc/html/FFTW-MPI-Fortran-Interface.html:<link rel="up" href="Distributed_002dmemory-FFTW-with-MPI.html#Distributed_002dmemory-FFTW-with-MPI" title="Distributed-memory FFTW with MPI">
fftw-link.txt:work/fftw-3.3.4/doc/html/FFTW-MPI-Fortran-Interface.html:<link rel="prev" href="FFTW-MPI-Reference.html#FFTW-MPI-Reference" title="FFTW MPI Reference">
fftw-link.txt:work/fftw-3.3.4/doc/html/FFTW-MPI-Fortran-Interface.html:<link href="http://www.gnu.org/software/texinfo/" rel="generator-home" title="Texinfo Homepage">
fftw-link.txt:work/fftw-3.3.4/doc/html/FFTW-MPI-Installation.html:<link title="Top" rel="start" href="index.html#Top">
fftw-link.txt:work/fftw-3.3.4/doc/html/FFTW-MPI-Installation.html:<link rel="up" href="Distributed_002dmemory-FFTW-with-MPI.html#Distributed_002dmemory-FFTW-with-MPI" title="Distributed-memory FFTW with MPI">
fftw-link.txt:work/fftw-3.3.4/doc/html/FFTW-MPI-Installation.html:<link rel="prev" href="Distributed_002dmemory-FFTW-with-MPI.html#Distributed_002dmemory-FFTW-with-MPI" title="Distributed-memory FFTW with MPI">
fftw-link.txt:work/fftw-3.3.4/doc/html/FFTW-MPI-Installation.html:<link rel="next" href="Linking-and-Initializing-MPI-FFTW.html#Linking-and-Initializing-MPI-FFTW" title="Linking and Initializing MPI FFTW">
fftw-link.txt:work/fftw-3.3.4/doc/html/FFTW-MPI-Installation.html:<link href="http://www.gnu.org/software/texinfo/" rel="generator-home" title="Texinfo Homepage">
fftw-link.txt:work/fftw-3.3.4/doc/html/FFTW-MPI-Installation.html:automatically detect how to compile and link code using your MPI
fftw-link.txt:work/fftw-3.3.4/doc/html/FFTW-MPI-Installation.html:   <p>If, instead of a special compiler command, you need to link a certain
fftw-link.txt:work/fftw-3.3.4/doc/html/FFTW-MPI-Installation.html:library, you can specify the link command via the <code>MPILIBS</code>
fftw-link.txt:work/fftw-3.3.4/doc/html/FFTW-MPI-Performance-Tips.html:<link title="Top" rel="start" href="index.html#Top">
fftw-link.txt:work/fftw-3.3.4/doc/html/FFTW-MPI-Performance-Tips.html:<link rel="up" href="Distributed_002dmemory-FFTW-with-MPI.html#Distributed_002dmemory-FFTW-with-MPI" title="Distributed-memory FFTW with MPI">
fftw-link.txt:work/fftw-3.3.4/doc/html/FFTW-MPI-Performance-Tips.html:<link rel="prev" href="Avoiding-MPI-Deadlocks.html#Avoiding-MPI-Deadlocks" title="Avoiding MPI Deadlocks">
fftw-link.txt:work/fftw-3.3.4/doc/html/FFTW-MPI-Performance-Tips.html:<link rel="next" href="Combining-MPI-and-Threads.html#Combining-MPI-and-Threads" title="Combining MPI and Threads">
fftw-link.txt:work/fftw-3.3.4/doc/html/FFTW-MPI-Performance-Tips.html:<link href="http://www.gnu.org/software/texinfo/" rel="generator-home" title="Texinfo Homepage">
fftw-link.txt:work/fftw-3.3.4/doc/html/FFTW-MPI-Reference.html:<link title="Top" rel="start" href="index.html#Top">
fftw-link.txt:work/fftw-3.3.4/doc/html/FFTW-MPI-Reference.html:<link rel="up" href="Distributed_002dmemory-FFTW-with-MPI.html#Distributed_002dmemory-FFTW-with-MPI" title="Distributed-memory FFTW with MPI">
fftw-link.txt:work/fftw-3.3.4/doc/html/FFTW-MPI-Reference.html:<link rel="prev" href="Combining-MPI-and-Threads.html#Combining-MPI-and-Threads" title="Combining MPI and Threads">
fftw-link.txt:work/fftw-3.3.4/doc/html/FFTW-MPI-Reference.html:<link rel="next" href="FFTW-MPI-Fortran-Interface.html#FFTW-MPI-Fortran-Interface" title="FFTW MPI Fortran Interface">
fftw-link.txt:work/fftw-3.3.4/doc/html/FFTW-MPI-Reference.html:<link href="http://www.gnu.org/software/texinfo/" rel="generator-home" title="Texinfo Homepage">
fftw-link.txt:work/fftw-3.3.4/doc/html/FFTW-MPI-Transposes.html:<link title="Top" rel="start" href="index.html#Top">
fftw-link.txt:work/fftw-3.3.4/doc/html/FFTW-MPI-Transposes.html:<link rel="up" href="Distributed_002dmemory-FFTW-with-MPI.html#Distributed_002dmemory-FFTW-with-MPI" title="Distributed-memory FFTW with MPI">
fftw-link.txt:work/fftw-3.3.4/doc/html/FFTW-MPI-Transposes.html:<link rel="prev" href="Other-Multi_002ddimensional-Real_002ddata-MPI-Transforms.html#Other-Multi_002ddimensional-Real_002ddata-MPI-Transforms" title="Other Multi-dimensional Real-data MPI Transforms">
fftw-link.txt:work/fftw-3.3.4/doc/html/FFTW-MPI-Transposes.html:<link rel="next" href="FFTW-MPI-Wisdom.html#FFTW-MPI-Wisdom" title="FFTW MPI Wisdom">
fftw-link.txt:work/fftw-3.3.4/doc/html/FFTW-MPI-Transposes.html:<link href="http://www.gnu.org/software/texinfo/" rel="generator-home" title="Texinfo Homepage">
fftw-link.txt:work/fftw-3.3.4/doc/html/FFTW-MPI-Wisdom.html:<link title="Top" rel="start" href="index.html#Top">
fftw-link.txt:work/fftw-3.3.4/doc/html/FFTW-MPI-Wisdom.html:<link rel="up" href="Distributed_002dmemory-FFTW-with-MPI.html#Distributed_002dmemory-FFTW-with-MPI" title="Distributed-memory FFTW with MPI">
fftw-link.txt:work/fftw-3.3.4/doc/html/FFTW-MPI-Wisdom.html:<link rel="prev" href="FFTW-MPI-Transposes.html#FFTW-MPI-Transposes" title="FFTW MPI Transposes">
fftw-link.txt:work/fftw-3.3.4/doc/html/FFTW-MPI-Wisdom.html:<link rel="next" href="Avoiding-MPI-Deadlocks.html#Avoiding-MPI-Deadlocks" title="Avoiding MPI Deadlocks">
fftw-link.txt:work/fftw-3.3.4/doc/html/FFTW-MPI-Wisdom.html:<link href="http://www.gnu.org/software/texinfo/" rel="generator-home" title="Texinfo Homepage">
fftw-link.txt:work/fftw-3.3.4/doc/html/FFTW-Reference.html:<link title="Top" rel="start" href="index.html#Top">
fftw-link.txt:work/fftw-3.3.4/doc/html/FFTW-Reference.html:<link rel="prev" href="Other-Important-Topics.html#Other-Important-Topics" title="Other Important Topics">
fftw-link.txt:work/fftw-3.3.4/doc/html/FFTW-Reference.html:<link rel="next" href="Multi_002dthreaded-FFTW.html#Multi_002dthreaded-FFTW" title="Multi-threaded FFTW">
fftw-link.txt:work/fftw-3.3.4/doc/html/FFTW-Reference.html:<link href="http://www.gnu.org/software/texinfo/" rel="generator-home" title="Texinfo Homepage">
fftw-link.txt:work/fftw-3.3.4/doc/html/Fixed_002dsize-Arrays-in-C.html:<link title="Top" rel="start" href="index.html#Top">
fftw-link.txt:work/fftw-3.3.4/doc/html/Fixed_002dsize-Arrays-in-C.html:<link rel="up" href="Multi_002ddimensional-Array-Format.html#Multi_002ddimensional-Array-Format" title="Multi-dimensional Array Format">
fftw-link.txt:work/fftw-3.3.4/doc/html/Fixed_002dsize-Arrays-in-C.html:<link rel="prev" href="Column_002dmajor-Format.html#Column_002dmajor-Format" title="Column-major Format">
fftw-link.txt:work/fftw-3.3.4/doc/html/Fixed_002dsize-Arrays-in-C.html:<link rel="next" href="Dynamic-Arrays-in-C.html#Dynamic-Arrays-in-C" title="Dynamic Arrays in C">
fftw-link.txt:work/fftw-3.3.4/doc/html/Fixed_002dsize-Arrays-in-C.html:<link href="http://www.gnu.org/software/texinfo/" rel="generator-home" title="Texinfo Homepage">
fftw-link.txt:work/fftw-3.3.4/doc/html/Forgetting-Wisdom.html:<link title="Top" rel="start" href="index.html#Top">
fftw-link.txt:work/fftw-3.3.4/doc/html/Forgetting-Wisdom.html:<link rel="up" href="Wisdom.html#Wisdom" title="Wisdom">
fftw-link.txt:work/fftw-3.3.4/doc/html/Forgetting-Wisdom.html:<link rel="prev" href="Wisdom-Import.html#Wisdom-Import" title="Wisdom Import">
fftw-link.txt:work/fftw-3.3.4/doc/html/Forgetting-Wisdom.html:<link rel="next" href="Wisdom-Utilities.html#Wisdom-Utilities" title="Wisdom Utilities">
fftw-link.txt:work/fftw-3.3.4/doc/html/Forgetting-Wisdom.html:<link href="http://www.gnu.org/software/texinfo/" rel="generator-home" title="Texinfo Homepage">
fftw-link.txt:work/fftw-3.3.4/doc/html/Fortran-Examples.html:<link title="Top" rel="start" href="index.html#Top">
fftw-link.txt:work/fftw-3.3.4/doc/html/Fortran-Examples.html:<link rel="up" href="Calling-FFTW-from-Legacy-Fortran.html#Calling-FFTW-from-Legacy-Fortran" title="Calling FFTW from Legacy Fortran">
fftw-link.txt:work/fftw-3.3.4/doc/html/Fortran-Examples.html:<link rel="prev" href="FFTW-Execution-in-Fortran.html#FFTW-Execution-in-Fortran" title="FFTW Execution in Fortran">
fftw-link.txt:work/fftw-3.3.4/doc/html/Fortran-Examples.html:<link rel="next" href="Wisdom-of-Fortran_003f.html#Wisdom-of-Fortran_003f" title="Wisdom of Fortran?">
fftw-link.txt:work/fftw-3.3.4/doc/html/Fortran-Examples.html:<link href="http://www.gnu.org/software/texinfo/" rel="generator-home" title="Texinfo Homepage">
fftw-link.txt:work/fftw-3.3.4/doc/html/Fortran_002dinterface-routines.html:<link title="Top" rel="start" href="index.html#Top">
fftw-link.txt:work/fftw-3.3.4/doc/html/Fortran_002dinterface-routines.html:<link rel="up" href="Calling-FFTW-from-Legacy-Fortran.html#Calling-FFTW-from-Legacy-Fortran" title="Calling FFTW from Legacy Fortran">
fftw-link.txt:work/fftw-3.3.4/doc/html/Fortran_002dinterface-routines.html:<link rel="prev" href="Calling-FFTW-from-Legacy-Fortran.html#Calling-FFTW-from-Legacy-Fortran" title="Calling FFTW from Legacy Fortran">
fftw-link.txt:work/fftw-3.3.4/doc/html/Fortran_002dinterface-routines.html:<link rel="next" href="FFTW-Constants-in-Fortran.html#FFTW-Constants-in-Fortran" title="FFTW Constants in Fortran">
fftw-link.txt:work/fftw-3.3.4/doc/html/Fortran_002dinterface-routines.html:<link href="http://www.gnu.org/software/texinfo/" rel="generator-home" title="Texinfo Homepage">
fftw-link.txt:work/fftw-3.3.4/doc/html/Fortran_002dinterface-routines.html:deserve to link to FFTW.</p>
fftw-link.txt:work/fftw-3.3.4/doc/html/Generating-your-own-code.html:<link title="Top" rel="start" href="index.html#Top">
fftw-link.txt:work/fftw-3.3.4/doc/html/Generating-your-own-code.html:<link rel="up" href="Installation-and-Customization.html#Installation-and-Customization" title="Installation and Customization">
fftw-link.txt:work/fftw-3.3.4/doc/html/Generating-your-own-code.html:<link rel="prev" href="Cycle-Counters.html#Cycle-Counters" title="Cycle Counters">
fftw-link.txt:work/fftw-3.3.4/doc/html/Generating-your-own-code.html:<link href="http://www.gnu.org/software/texinfo/" rel="generator-home" title="Texinfo Homepage">
fftw-link.txt:work/fftw-3.3.4/doc/html/Guru-Complex-DFTs.html:<link title="Top" rel="start" href="index.html#Top">
fftw-link.txt:work/fftw-3.3.4/doc/html/Guru-Complex-DFTs.html:<link rel="up" href="Guru-Interface.html#Guru-Interface" title="Guru Interface">
fftw-link.txt:work/fftw-3.3.4/doc/html/Guru-Complex-DFTs.html:<link rel="prev" href="Guru-vector-and-transform-sizes.html#Guru-vector-and-transform-sizes" title="Guru vector and transform sizes">
fftw-link.txt:work/fftw-3.3.4/doc/html/Guru-Complex-DFTs.html:<link rel="next" href="Guru-Real_002ddata-DFTs.html#Guru-Real_002ddata-DFTs" title="Guru Real-data DFTs">
fftw-link.txt:work/fftw-3.3.4/doc/html/Guru-Complex-DFTs.html:<link href="http://www.gnu.org/software/texinfo/" rel="generator-home" title="Texinfo Homepage">
fftw-link.txt:work/fftw-3.3.4/doc/html/Guru-Interface.html:<link title="Top" rel="start" href="index.html#Top">
fftw-link.txt:work/fftw-3.3.4/doc/html/Guru-Interface.html:<link rel="up" href="FFTW-Reference.html#FFTW-Reference" title="FFTW Reference">
fftw-link.txt:work/fftw-3.3.4/doc/html/Guru-Interface.html:<link rel="prev" href="Advanced-Interface.html#Advanced-Interface" title="Advanced Interface">
fftw-link.txt:work/fftw-3.3.4/doc/html/Guru-Interface.html:<link rel="next" href="New_002darray-Execute-Functions.html#New_002darray-Execute-Functions" title="New-array Execute Functions">
fftw-link.txt:work/fftw-3.3.4/doc/html/Guru-Interface.html:<link href="http://www.gnu.org/software/texinfo/" rel="generator-home" title="Texinfo Homepage">
fftw-link.txt:work/fftw-3.3.4/doc/html/Guru-Real_002ddata-DFTs.html:<link title="Top" rel="start" href="index.html#Top">
fftw-link.txt:work/fftw-3.3.4/doc/html/Guru-Real_002ddata-DFTs.html:<link rel="up" href="Guru-Interface.html#Guru-Interface" title="Guru Interface">
fftw-link.txt:work/fftw-3.3.4/doc/html/Guru-Real_002ddata-DFTs.html:<link rel="prev" href="Guru-Complex-DFTs.html#Guru-Complex-DFTs" title="Guru Complex DFTs">
fftw-link.txt:work/fftw-3.3.4/doc/html/Guru-Real_002ddata-DFTs.html:<link rel="next" href="Guru-Real_002dto_002dreal-Transforms.html#Guru-Real_002dto_002dreal-Transforms" title="Guru Real-to-real Transforms">
fftw-link.txt:work/fftw-3.3.4/doc/html/Guru-Real_002ddata-DFTs.html:<link href="http://www.gnu.org/software/texinfo/" rel="generator-home" title="Texinfo Homepage">
fftw-link.txt:work/fftw-3.3.4/doc/html/Guru-Real_002dto_002dreal-Transforms.html:<link title="Top" rel="start" href="index.html#Top">
fftw-link.txt:work/fftw-3.3.4/doc/html/Guru-Real_002dto_002dreal-Transforms.html:<link rel="up" href="Guru-Interface.html#Guru-Interface" title="Guru Interface">
fftw-link.txt:work/fftw-3.3.4/doc/html/Guru-Real_002dto_002dreal-Transforms.html:<link rel="prev" href="Guru-Real_002ddata-DFTs.html#Guru-Real_002ddata-DFTs" title="Guru Real-data DFTs">
fftw-link.txt:work/fftw-3.3.4/doc/html/Guru-Real_002dto_002dreal-Transforms.html:<link rel="next" href="64_002dbit-Guru-Interface.html#g_t64_002dbit-Guru-Interface" title="64-bit Guru Interface">
fftw-link.txt:work/fftw-3.3.4/doc/html/Guru-Real_002dto_002dreal-Transforms.html:<link href="http://www.gnu.org/software/texinfo/" rel="generator-home" title="Texinfo Homepage">
fftw-link.txt:work/fftw-3.3.4/doc/html/Guru-vector-and-transform-sizes.html:<link title="Top" rel="start" href="index.html#Top">
fftw-link.txt:work/fftw-3.3.4/doc/html/Guru-vector-and-transform-sizes.html:<link rel="up" href="Guru-Interface.html#Guru-Interface" title="Guru Interface">
fftw-link.txt:work/fftw-3.3.4/doc/html/Guru-vector-and-transform-sizes.html:<link rel="prev" href="Interleaved-and-split-arrays.html#Interleaved-and-split-arrays" title="Interleaved and split arrays">
fftw-link.txt:work/fftw-3.3.4/doc/html/Guru-vector-and-transform-sizes.html:<link rel="next" href="Guru-Complex-DFTs.html#Guru-Complex-DFTs" title="Guru Complex DFTs">
fftw-link.txt:work/fftw-3.3.4/doc/html/Guru-vector-and-transform-sizes.html:<link href="http://www.gnu.org/software/texinfo/" rel="generator-home" title="Texinfo Homepage">
fftw-link.txt:work/fftw-3.3.4/doc/html/How-Many-Threads-to-Use_003f.html:<link title="Top" rel="start" href="index.html#Top">
fftw-link.txt:work/fftw-3.3.4/doc/html/How-Many-Threads-to-Use_003f.html:<link rel="up" href="Multi_002dthreaded-FFTW.html#Multi_002dthreaded-FFTW" title="Multi-threaded FFTW">
fftw-link.txt:work/fftw-3.3.4/doc/html/How-Many-Threads-to-Use_003f.html:<link rel="prev" href="Usage-of-Multi_002dthreaded-FFTW.html#Usage-of-Multi_002dthreaded-FFTW" title="Usage of Multi-threaded FFTW">
fftw-link.txt:work/fftw-3.3.4/doc/html/How-Many-Threads-to-Use_003f.html:<link rel="next" href="Thread-safety.html#Thread-safety" title="Thread safety">
fftw-link.txt:work/fftw-3.3.4/doc/html/How-Many-Threads-to-Use_003f.html:<link href="http://www.gnu.org/software/texinfo/" rel="generator-home" title="Texinfo Homepage">
fftw-link.txt:work/fftw-3.3.4/doc/html/Installation-and-Customization.html:<link title="Top" rel="start" href="index.html#Top">
fftw-link.txt:work/fftw-3.3.4/doc/html/Installation-and-Customization.html:<link rel="prev" href="Upgrading-from-FFTW-version-2.html#Upgrading-from-FFTW-version-2" title="Upgrading from FFTW version 2">
fftw-link.txt:work/fftw-3.3.4/doc/html/Installation-and-Customization.html:<link rel="next" href="Acknowledgments.html#Acknowledgments" title="Acknowledgments">
fftw-link.txt:work/fftw-3.3.4/doc/html/Installation-and-Customization.html:<link href="http://www.gnu.org/software/texinfo/" rel="generator-home" title="Texinfo Homepage">
fftw-link.txt:work/fftw-3.3.4/doc/html/Installation-and-Supported-Hardware_002fSoftware.html:<link title="Top" rel="start" href="index.html#Top">
fftw-link.txt:work/fftw-3.3.4/doc/html/Installation-and-Supported-Hardware_002fSoftware.html:<link rel="up" href="Multi_002dthreaded-FFTW.html#Multi_002dthreaded-FFTW" title="Multi-threaded FFTW">
fftw-link.txt:work/fftw-3.3.4/doc/html/Installation-and-Supported-Hardware_002fSoftware.html:<link rel="prev" href="Multi_002dthreaded-FFTW.html#Multi_002dthreaded-FFTW" title="Multi-threaded FFTW">
fftw-link.txt:work/fftw-3.3.4/doc/html/Installation-and-Supported-Hardware_002fSoftware.html:<link rel="next" href="Usage-of-Multi_002dthreaded-FFTW.html#Usage-of-Multi_002dthreaded-FFTW" title="Usage of Multi-threaded FFTW">
fftw-link.txt:work/fftw-3.3.4/doc/html/Installation-and-Supported-Hardware_002fSoftware.html:<link href="http://www.gnu.org/software/texinfo/" rel="generator-home" title="Texinfo Homepage">
fftw-link.txt:work/fftw-3.3.4/doc/html/Installation-and-Supported-Hardware_002fSoftware.html:described below).  However, your programs may only link to <em>one</em>
fftw-link.txt:work/fftw-3.3.4/doc/html/Installation-on-Unix.html:<link title="Top" rel="start" href="index.html#Top">
fftw-link.txt:work/fftw-3.3.4/doc/html/Installation-on-Unix.html:<link rel="up" href="Installation-and-Customization.html#Installation-and-Customization" title="Installation and Customization">
fftw-link.txt:work/fftw-3.3.4/doc/html/Installation-on-Unix.html:<link rel="prev" href="Installation-and-Customization.html#Installation-and-Customization" title="Installation and Customization">
fftw-link.txt:work/fftw-3.3.4/doc/html/Installation-on-Unix.html:<link rel="next" href="Installation-on-non_002dUnix-systems.html#Installation-on-non_002dUnix-systems" title="Installation on non-Unix systems">
fftw-link.txt:work/fftw-3.3.4/doc/html/Installation-on-Unix.html:<link href="http://www.gnu.org/software/texinfo/" rel="generator-home" title="Texinfo Homepage">
fftw-link.txt:work/fftw-3.3.4/doc/html/Installation-on-Unix.html:must be linked in addition to the main FFTW library.  This is so that
fftw-link.txt:work/fftw-3.3.4/doc/html/Installation-on-Unix.html:users of the serial library do not need to link the system threads
fftw-link.txt:work/fftw-3.3.4/doc/html/Installation-on-Unix.html:included, the wrappers employ the linking conventions of the Fortran
fftw-link.txt:work/fftw-3.3.4/doc/html/Installation-on-Unix.html:<code>-mabi=altivec</code> option when compiling any code that links to FFTW,
fftw-link.txt:work/fftw-3.3.4/doc/html/Installation-on-Unix.html:properly aligns the stack when compiling any code that links to FFTW. 
fftw-link.txt:work/fftw-3.3.4/doc/html/Installation-on-non_002dUnix-systems.html:<link title="Top" rel="start" href="index.html#Top">
fftw-link.txt:work/fftw-3.3.4/doc/html/Installation-on-non_002dUnix-systems.html:<link rel="up" href="Installation-and-Customization.html#Installation-and-Customization" title="Installation and Customization">
fftw-link.txt:work/fftw-3.3.4/doc/html/Installation-on-non_002dUnix-systems.html:<link rel="prev" href="Installation-on-Unix.html#Installation-on-Unix" title="Installation on Unix">
fftw-link.txt:work/fftw-3.3.4/doc/html/Installation-on-non_002dUnix-systems.html:<link rel="next" href="Cycle-Counters.html#Cycle-Counters" title="Cycle Counters">
fftw-link.txt:work/fftw-3.3.4/doc/html/Installation-on-non_002dUnix-systems.html:<link href="http://www.gnu.org/software/texinfo/" rel="generator-home" title="Texinfo Homepage">
fftw-link.txt:work/fftw-3.3.4/doc/html/Installation-on-non_002dUnix-systems.html:   <p>Once these files are all compiled, link them into a library, or a shared
fftw-link.txt:work/fftw-3.3.4/doc/html/Installation-on-non_002dUnix-systems.html:<code>libbench2/</code> directory, and link it into a library.  Then compile
fftw-link.txt:work/fftw-3.3.4/doc/html/Installation-on-non_002dUnix-systems.html:the code in the <code>tests/</code> directory and link it to the
fftw-link.txt:work/fftw-3.3.4/doc/html/Installation-on-non_002dUnix-systems.html:<code>tools/fftw-wisdom.c</code> and link it to the <code>libbench2</code> and FFTW
fftw-link.txt:work/fftw-3.3.4/doc/html/Interleaved-and-split-arrays.html:<link title="Top" rel="start" href="index.html#Top">
fftw-link.txt:work/fftw-3.3.4/doc/html/Interleaved-and-split-arrays.html:<link rel="up" href="Guru-Interface.html#Guru-Interface" title="Guru Interface">
fftw-link.txt:work/fftw-3.3.4/doc/html/Interleaved-and-split-arrays.html:<link rel="prev" href="Guru-Interface.html#Guru-Interface" title="Guru Interface">
fftw-link.txt:work/fftw-3.3.4/doc/html/Interleaved-and-split-arrays.html:<link rel="next" href="Guru-vector-and-transform-sizes.html#Guru-vector-and-transform-sizes" title="Guru vector and transform sizes">
fftw-link.txt:work/fftw-3.3.4/doc/html/Interleaved-and-split-arrays.html:<link href="http://www.gnu.org/software/texinfo/" rel="generator-home" title="Texinfo Homepage">
fftw-link.txt:work/fftw-3.3.4/doc/html/Introduction.html:<link title="Top" rel="start" href="index.html#Top">
fftw-link.txt:work/fftw-3.3.4/doc/html/Introduction.html:<link rel="prev" href="index.html#Top" title="Top">
fftw-link.txt:work/fftw-3.3.4/doc/html/Introduction.html:<link rel="next" href="Tutorial.html#Tutorial" title="Tutorial">
fftw-link.txt:work/fftw-3.3.4/doc/html/Introduction.html:<link href="http://www.gnu.org/software/texinfo/" rel="generator-home" title="Texinfo Homepage">
fftw-link.txt:work/fftw-3.3.4/doc/html/Introduction.html:<a href="http://www.fftw.org">Our web page</a> also has links to FFT-related
fftw-link.txt:work/fftw-3.3.4/doc/html/Introduction.html:example, if code space is a concern, we provide a tool that links only
fftw-link.txt:work/fftw-3.3.4/doc/html/Introduction.html:FFTW, the FAQ, benchmarks, and other links, are available at
fftw-link.txt:work/fftw-3.3.4/doc/html/Library-Index.html:<link title="Top" rel="start" href="index.html#Top">
fftw-link.txt:work/fftw-3.3.4/doc/html/Library-Index.html:<link rel="prev" href="Concept-Index.html#Concept-Index" title="Concept Index">
fftw-link.txt:work/fftw-3.3.4/doc/html/Library-Index.html:<link href="http://www.gnu.org/software/texinfo/" rel="generator-home" title="Texinfo Homepage">
fftw-link.txt:work/fftw-3.3.4/doc/html/License-and-Copyright.html:<link title="Top" rel="start" href="index.html#Top">
fftw-link.txt:work/fftw-3.3.4/doc/html/License-and-Copyright.html:<link rel="prev" href="Acknowledgments.html#Acknowledgments" title="Acknowledgments">
fftw-link.txt:work/fftw-3.3.4/doc/html/License-and-Copyright.html:<link rel="next" href="Concept-Index.html#Concept-Index" title="Concept Index">
fftw-link.txt:work/fftw-3.3.4/doc/html/License-and-Copyright.html:<link href="http://www.gnu.org/software/texinfo/" rel="generator-home" title="Texinfo Homepage">
fftw-link.txt:work/fftw-3.3.4/doc/html/Linking-and-Initializing-MPI-FFTW.html:<link title="Top" rel="start" href="index.html#Top">
fftw-link.txt:work/fftw-3.3.4/doc/html/Linking-and-Initializing-MPI-FFTW.html:<link rel="up" href="Distributed_002dmemory-FFTW-with-MPI.html#Distributed_002dmemory-FFTW-with-MPI" title="Distributed-memory FFTW with MPI">
fftw-link.txt:work/fftw-3.3.4/doc/html/Linking-and-Initializing-MPI-FFTW.html:<link rel="prev" href="FFTW-MPI-Installation.html#FFTW-MPI-Installation" title="FFTW MPI Installation">
fftw-link.txt:work/fftw-3.3.4/doc/html/Linking-and-Initializing-MPI-FFTW.html:<link rel="next" href="2d-MPI-example.html#g_t2d-MPI-example" title="2d MPI example">
fftw-link.txt:work/fftw-3.3.4/doc/html/Linking-and-Initializing-MPI-FFTW.html:<link href="http://www.gnu.org/software/texinfo/" rel="generator-home" title="Texinfo Homepage">
fftw-link.txt:work/fftw-3.3.4/doc/html/Linking-and-Initializing-MPI-FFTW.html:<p>Programs using the MPI FFTW routines should be linked with
fftw-link.txt:work/fftw-3.3.4/doc/html/Linking-and-Initializing-MPI-FFTW.html:(see <a href="Precision.html#Precision">Precision</a>). You will also need to link with whatever library
fftw-link.txt:work/fftw-3.3.4/doc/html/Linking-and-Initializing-MPI-FFTW.html:link MPI code. 
fftw-link.txt:work/fftw-3.3.4/doc/html/Linking-and-Initializing-MPI-FFTW.html:<a name="index-mpicc-354"></a><a name="index-linking-on-Unix-355"></a><a name="index-precision-356"></a>
fftw-link.txt:work/fftw-3.3.4/doc/html/Load-balancing.html:<link title="Top" rel="start" href="index.html#Top">
fftw-link.txt:work/fftw-3.3.4/doc/html/Load-balancing.html:<link rel="up" href="MPI-Data-Distribution.html#MPI-Data-Distribution" title="MPI Data Distribution">
fftw-link.txt:work/fftw-3.3.4/doc/html/Load-balancing.html:<link rel="prev" href="Basic-and-advanced-distribution-interfaces.html#Basic-and-advanced-distribution-interfaces" title="Basic and advanced distribution interfaces">
fftw-link.txt:work/fftw-3.3.4/doc/html/Load-balancing.html:<link rel="next" href="Transposed-distributions.html#Transposed-distributions" title="Transposed distributions">
fftw-link.txt:work/fftw-3.3.4/doc/html/Load-balancing.html:<link href="http://www.gnu.org/software/texinfo/" rel="generator-home" title="Texinfo Homepage">
fftw-link.txt:work/fftw-3.3.4/doc/html/MPI-Data-Distribution-Functions.html:<link title="Top" rel="start" href="index.html#Top">
fftw-link.txt:work/fftw-3.3.4/doc/html/MPI-Data-Distribution-Functions.html:<link rel="up" href="FFTW-MPI-Reference.html#FFTW-MPI-Reference" title="FFTW MPI Reference">
fftw-link.txt:work/fftw-3.3.4/doc/html/MPI-Data-Distribution-Functions.html:<link rel="prev" href="Using-MPI-Plans.html#Using-MPI-Plans" title="Using MPI Plans">
fftw-link.txt:work/fftw-3.3.4/doc/html/MPI-Data-Distribution-Functions.html:<link rel="next" href="MPI-Plan-Creation.html#MPI-Plan-Creation" title="MPI Plan Creation">
fftw-link.txt:work/fftw-3.3.4/doc/html/MPI-Data-Distribution-Functions.html:<link href="http://www.gnu.org/software/texinfo/" rel="generator-home" title="Texinfo Homepage">
fftw-link.txt:work/fftw-3.3.4/doc/html/MPI-Data-Distribution.html:<link title="Top" rel="start" href="index.html#Top">
fftw-link.txt:work/fftw-3.3.4/doc/html/MPI-Data-Distribution.html:<link rel="up" href="Distributed_002dmemory-FFTW-with-MPI.html#Distributed_002dmemory-FFTW-with-MPI" title="Distributed-memory FFTW with MPI">
fftw-link.txt:work/fftw-3.3.4/doc/html/MPI-Data-Distribution.html:<link rel="prev" href="2d-MPI-example.html#g_t2d-MPI-example" title="2d MPI example">
fftw-link.txt:work/fftw-3.3.4/doc/html/MPI-Data-Distribution.html:<link rel="next" href="Multi_002ddimensional-MPI-DFTs-of-Real-Data.html#Multi_002ddimensional-MPI-DFTs-of-Real-Data" title="Multi-dimensional MPI DFTs of Real Data">
fftw-link.txt:work/fftw-3.3.4/doc/html/MPI-Data-Distribution.html:<link href="http://www.gnu.org/software/texinfo/" rel="generator-home" title="Texinfo Homepage">
fftw-link.txt:work/fftw-3.3.4/doc/html/MPI-Files-and-Data-Types.html:<link title="Top" rel="start" href="index.html#Top">
fftw-link.txt:work/fftw-3.3.4/doc/html/MPI-Files-and-Data-Types.html:<link rel="up" href="FFTW-MPI-Reference.html#FFTW-MPI-Reference" title="FFTW MPI Reference">
fftw-link.txt:work/fftw-3.3.4/doc/html/MPI-Files-and-Data-Types.html:<link rel="prev" href="FFTW-MPI-Reference.html#FFTW-MPI-Reference" title="FFTW MPI Reference">
fftw-link.txt:work/fftw-3.3.4/doc/html/MPI-Files-and-Data-Types.html:<link rel="next" href="MPI-Initialization.html#MPI-Initialization" title="MPI Initialization">
fftw-link.txt:work/fftw-3.3.4/doc/html/MPI-Files-and-Data-Types.html:<link href="http://www.gnu.org/software/texinfo/" rel="generator-home" title="Texinfo Homepage">
fftw-link.txt:work/fftw-3.3.4/doc/html/MPI-Files-and-Data-Types.html:   <p>You must also link to <em>both</em> the FFTW MPI library and to the
fftw-link.txt:work/fftw-3.3.4/doc/html/MPI-Files-and-Data-Types.html:-lfftw3 -lm</code> at the end of the link command.
fftw-link.txt:work/fftw-3.3.4/doc/html/MPI-Initialization.html:<link title="Top" rel="start" href="index.html#Top">
fftw-link.txt:work/fftw-3.3.4/doc/html/MPI-Initialization.html:<link rel="up" href="FFTW-MPI-Reference.html#FFTW-MPI-Reference" title="FFTW MPI Reference">
fftw-link.txt:work/fftw-3.3.4/doc/html/MPI-Initialization.html:<link rel="prev" href="MPI-Files-and-Data-Types.html#MPI-Files-and-Data-Types" title="MPI Files and Data Types">
fftw-link.txt:work/fftw-3.3.4/doc/html/MPI-Initialization.html:<link rel="next" href="Using-MPI-Plans.html#Using-MPI-Plans" title="Using MPI Plans">
fftw-link.txt:work/fftw-3.3.4/doc/html/MPI-Initialization.html:<link href="http://www.gnu.org/software/texinfo/" rel="generator-home" title="Texinfo Homepage">
fftw-link.txt:work/fftw-3.3.4/doc/html/MPI-Plan-Creation.html:<link title="Top" rel="start" href="index.html#Top">
fftw-link.txt:work/fftw-3.3.4/doc/html/MPI-Plan-Creation.html:<link rel="up" href="FFTW-MPI-Reference.html#FFTW-MPI-Reference" title="FFTW MPI Reference">
fftw-link.txt:work/fftw-3.3.4/doc/html/MPI-Plan-Creation.html:<link rel="prev" href="MPI-Data-Distribution-Functions.html#MPI-Data-Distribution-Functions" title="MPI Data Distribution Functions">
fftw-link.txt:work/fftw-3.3.4/doc/html/MPI-Plan-Creation.html:<link rel="next" href="MPI-Wisdom-Communication.html#MPI-Wisdom-Communication" title="MPI Wisdom Communication">
fftw-link.txt:work/fftw-3.3.4/doc/html/MPI-Plan-Creation.html:<link href="http://www.gnu.org/software/texinfo/" rel="generator-home" title="Texinfo Homepage">
fftw-link.txt:work/fftw-3.3.4/doc/html/MPI-Wisdom-Communication.html:<link title="Top" rel="start" href="index.html#Top">
fftw-link.txt:work/fftw-3.3.4/doc/html/MPI-Wisdom-Communication.html:<link rel="up" href="FFTW-MPI-Reference.html#FFTW-MPI-Reference" title="FFTW MPI Reference">
fftw-link.txt:work/fftw-3.3.4/doc/html/MPI-Wisdom-Communication.html:<link rel="prev" href="MPI-Plan-Creation.html#MPI-Plan-Creation" title="MPI Plan Creation">
fftw-link.txt:work/fftw-3.3.4/doc/html/MPI-Wisdom-Communication.html:<link href="http://www.gnu.org/software/texinfo/" rel="generator-home" title="Texinfo Homepage">
fftw-link.txt:work/fftw-3.3.4/doc/html/Memory-Allocation.html:<link title="Top" rel="start" href="index.html#Top">
fftw-link.txt:work/fftw-3.3.4/doc/html/Memory-Allocation.html:<link rel="up" href="Data-Types-and-Files.html#Data-Types-and-Files" title="Data Types and Files">
fftw-link.txt:work/fftw-3.3.4/doc/html/Memory-Allocation.html:<link rel="prev" href="Precision.html#Precision" title="Precision">
fftw-link.txt:work/fftw-3.3.4/doc/html/Memory-Allocation.html:<link href="http://www.gnu.org/software/texinfo/" rel="generator-home" title="Texinfo Homepage">
fftw-link.txt:work/fftw-3.3.4/doc/html/More-DFTs-of-Real-Data.html:<link title="Top" rel="start" href="index.html#Top">
fftw-link.txt:work/fftw-3.3.4/doc/html/More-DFTs-of-Real-Data.html:<link rel="up" href="Tutorial.html#Tutorial" title="Tutorial">
fftw-link.txt:work/fftw-3.3.4/doc/html/More-DFTs-of-Real-Data.html:<link rel="prev" href="Multi_002dDimensional-DFTs-of-Real-Data.html#Multi_002dDimensional-DFTs-of-Real-Data" title="Multi-Dimensional DFTs of Real Data">
fftw-link.txt:work/fftw-3.3.4/doc/html/More-DFTs-of-Real-Data.html:<link href="http://www.gnu.org/software/texinfo/" rel="generator-home" title="Texinfo Homepage">
fftw-link.txt:work/fftw-3.3.4/doc/html/Multi_002dDimensional-DFTs-of-Real-Data.html:<link title="Top" rel="start" href="index.html#Top">
fftw-link.txt:work/fftw-3.3.4/doc/html/Multi_002dDimensional-DFTs-of-Real-Data.html:<link rel="up" href="Tutorial.html#Tutorial" title="Tutorial">
fftw-link.txt:work/fftw-3.3.4/doc/html/Multi_002dDimensional-DFTs-of-Real-Data.html:<link rel="prev" href="One_002dDimensional-DFTs-of-Real-Data.html#One_002dDimensional-DFTs-of-Real-Data" title="One-Dimensional DFTs of Real Data">
fftw-link.txt:work/fftw-3.3.4/doc/html/Multi_002dDimensional-DFTs-of-Real-Data.html:<link rel="next" href="More-DFTs-of-Real-Data.html#More-DFTs-of-Real-Data" title="More DFTs of Real Data">
fftw-link.txt:work/fftw-3.3.4/doc/html/Multi_002dDimensional-DFTs-of-Real-Data.html:<link href="http://www.gnu.org/software/texinfo/" rel="generator-home" title="Texinfo Homepage">
fftw-link.txt:work/fftw-3.3.4/doc/html/Multi_002ddimensional-Array-Format.html:<link title="Top" rel="start" href="index.html#Top">
fftw-link.txt:work/fftw-3.3.4/doc/html/Multi_002ddimensional-Array-Format.html:<link rel="up" href="Other-Important-Topics.html#Other-Important-Topics" title="Other Important Topics">
fftw-link.txt:work/fftw-3.3.4/doc/html/Multi_002ddimensional-Array-Format.html:<link rel="prev" href="SIMD-alignment-and-fftw_005fmalloc.html#SIMD-alignment-and-fftw_005fmalloc" title="SIMD alignment and fftw_malloc">
fftw-link.txt:work/fftw-3.3.4/doc/html/Multi_002ddimensional-Array-Format.html:<link rel="next" href="Words-of-Wisdom_002dSaving-Plans.html#Words-of-Wisdom_002dSaving-Plans" title="Words of Wisdom-Saving Plans">
fftw-link.txt:work/fftw-3.3.4/doc/html/Multi_002ddimensional-Array-Format.html:<link href="http://www.gnu.org/software/texinfo/" rel="generator-home" title="Texinfo Homepage">
fftw-link.txt:work/fftw-3.3.4/doc/html/Multi_002ddimensional-MPI-DFTs-of-Real-Data.html:<link title="Top" rel="start" href="index.html#Top">
fftw-link.txt:work/fftw-3.3.4/doc/html/Multi_002ddimensional-MPI-DFTs-of-Real-Data.html:<link rel="up" href="Distributed_002dmemory-FFTW-with-MPI.html#Distributed_002dmemory-FFTW-with-MPI" title="Distributed-memory FFTW with MPI">
fftw-link.txt:work/fftw-3.3.4/doc/html/Multi_002ddimensional-MPI-DFTs-of-Real-Data.html:<link rel="prev" href="MPI-Data-Distribution.html#MPI-Data-Distribution" title="MPI Data Distribution">
fftw-link.txt:work/fftw-3.3.4/doc/html/Multi_002ddimensional-MPI-DFTs-of-Real-Data.html:<link rel="next" href="Other-Multi_002ddimensional-Real_002ddata-MPI-Transforms.html#Other-Multi_002ddimensional-Real_002ddata-MPI-Transforms" title="Other Multi-dimensional Real-data MPI Transforms">
fftw-link.txt:work/fftw-3.3.4/doc/html/Multi_002ddimensional-MPI-DFTs-of-Real-Data.html:<link href="http://www.gnu.org/software/texinfo/" rel="generator-home" title="Texinfo Homepage">
fftw-link.txt:work/fftw-3.3.4/doc/html/Multi_002ddimensional-Transforms.html:<link title="Top" rel="start" href="index.html#Top">
fftw-link.txt:work/fftw-3.3.4/doc/html/Multi_002ddimensional-Transforms.html:<link rel="up" href="What-FFTW-Really-Computes.html#What-FFTW-Really-Computes" title="What FFTW Really Computes">
fftw-link.txt:work/fftw-3.3.4/doc/html/Multi_002ddimensional-Transforms.html:<link rel="prev" href="1d-Discrete-Hartley-Transforms-_0028DHTs_0029.html#g_t1d-Discrete-Hartley-Transforms-_0028DHTs_0029" title="1d Discrete Hartley Transforms (DHTs)">
fftw-link.txt:work/fftw-3.3.4/doc/html/Multi_002ddimensional-Transforms.html:<link href="http://www.gnu.org/software/texinfo/" rel="generator-home" title="Texinfo Homepage">
fftw-link.txt:work/fftw-3.3.4/doc/html/Multi_002dthreaded-FFTW.html:<link title="Top" rel="start" href="index.html#Top">
fftw-link.txt:work/fftw-3.3.4/doc/html/Multi_002dthreaded-FFTW.html:<link rel="prev" href="FFTW-Reference.html#FFTW-Reference" title="FFTW Reference">
fftw-link.txt:work/fftw-3.3.4/doc/html/Multi_002dthreaded-FFTW.html:<link rel="next" href="Distributed_002dmemory-FFTW-with-MPI.html#Distributed_002dmemory-FFTW-with-MPI" title="Distributed-memory FFTW with MPI">
fftw-link.txt:work/fftw-3.3.4/doc/html/Multi_002dthreaded-FFTW.html:<link href="http://www.gnu.org/software/texinfo/" rel="generator-home" title="Texinfo Homepage">
fftw-link.txt:work/fftw-3.3.4/doc/html/New_002darray-Execute-Functions.html:<link title="Top" rel="start" href="index.html#Top">
fftw-link.txt:work/fftw-3.3.4/doc/html/New_002darray-Execute-Functions.html:<link rel="up" href="FFTW-Reference.html#FFTW-Reference" title="FFTW Reference">
fftw-link.txt:work/fftw-3.3.4/doc/html/New_002darray-Execute-Functions.html:<link rel="prev" href="Guru-Interface.html#Guru-Interface" title="Guru Interface">
fftw-link.txt:work/fftw-3.3.4/doc/html/New_002darray-Execute-Functions.html:<link rel="next" href="Wisdom.html#Wisdom" title="Wisdom">
fftw-link.txt:work/fftw-3.3.4/doc/html/New_002darray-Execute-Functions.html:<link href="http://www.gnu.org/software/texinfo/" rel="generator-home" title="Texinfo Homepage">
fftw-link.txt:work/fftw-3.3.4/doc/html/One_002dDimensional-DFTs-of-Real-Data.html:<link title="Top" rel="start" href="index.html#Top">
fftw-link.txt:work/fftw-3.3.4/doc/html/One_002dDimensional-DFTs-of-Real-Data.html:<link rel="up" href="Tutorial.html#Tutorial" title="Tutorial">
fftw-link.txt:work/fftw-3.3.4/doc/html/One_002dDimensional-DFTs-of-Real-Data.html:<link rel="prev" href="Complex-Multi_002dDimensional-DFTs.html#Complex-Multi_002dDimensional-DFTs" title="Complex Multi-Dimensional DFTs">
fftw-link.txt:work/fftw-3.3.4/doc/html/One_002dDimensional-DFTs-of-Real-Data.html:<link rel="next" href="Multi_002dDimensional-DFTs-of-Real-Data.html#Multi_002dDimensional-DFTs-of-Real-Data" title="Multi-Dimensional DFTs of Real Data">
fftw-link.txt:work/fftw-3.3.4/doc/html/One_002dDimensional-DFTs-of-Real-Data.html:<link href="http://www.gnu.org/software/texinfo/" rel="generator-home" title="Texinfo Homepage">
fftw-link.txt:work/fftw-3.3.4/doc/html/One_002ddimensional-distributions.html:<link title="Top" rel="start" href="index.html#Top">
fftw-link.txt:work/fftw-3.3.4/doc/html/One_002ddimensional-distributions.html:<link rel="up" href="MPI-Data-Distribution.html#MPI-Data-Distribution" title="MPI Data Distribution">
fftw-link.txt:work/fftw-3.3.4/doc/html/One_002ddimensional-distributions.html:<link rel="prev" href="Transposed-distributions.html#Transposed-distributions" title="Transposed distributions">
fftw-link.txt:work/fftw-3.3.4/doc/html/One_002ddimensional-distributions.html:<link href="http://www.gnu.org/software/texinfo/" rel="generator-home" title="Texinfo Homepage">
fftw-link.txt:work/fftw-3.3.4/doc/html/Other-Important-Topics.html:<link title="Top" rel="start" href="index.html#Top">
fftw-link.txt:work/fftw-3.3.4/doc/html/Other-Important-Topics.html:<link rel="prev" href="Tutorial.html#Tutorial" title="Tutorial">
fftw-link.txt:work/fftw-3.3.4/doc/html/Other-Important-Topics.html:<link rel="next" href="FFTW-Reference.html#FFTW-Reference" title="FFTW Reference">
fftw-link.txt:work/fftw-3.3.4/doc/html/Other-Important-Topics.html:<link href="http://www.gnu.org/software/texinfo/" rel="generator-home" title="Texinfo Homepage">
fftw-link.txt:work/fftw-3.3.4/doc/html/Other-Multi_002ddimensional-Real_002ddata-MPI-Transforms.html:<link title="Top" rel="start" href="index.html#Top">
fftw-link.txt:work/fftw-3.3.4/doc/html/Other-Multi_002ddimensional-Real_002ddata-MPI-Transforms.html:<link rel="up" href="Distributed_002dmemory-FFTW-with-MPI.html#Distributed_002dmemory-FFTW-with-MPI" title="Distributed-memory FFTW with MPI">
fftw-link.txt:work/fftw-3.3.4/doc/html/Other-Multi_002ddimensional-Real_002ddata-MPI-Transforms.html:<link rel="prev" href="Multi_002ddimensional-MPI-DFTs-of-Real-Data.html#Multi_002ddimensional-MPI-DFTs-of-Real-Data" title="Multi-dimensional MPI DFTs of Real Data">
fftw-link.txt:work/fftw-3.3.4/doc/html/Other-Multi_002ddimensional-Real_002ddata-MPI-Transforms.html:<link rel="next" href="FFTW-MPI-Transposes.html#FFTW-MPI-Transposes" title="FFTW MPI Transposes">
fftw-link.txt:work/fftw-3.3.4/doc/html/Other-Multi_002ddimensional-Real_002ddata-MPI-Transforms.html:<link href="http://www.gnu.org/software/texinfo/" rel="generator-home" title="Texinfo Homepage">
fftw-link.txt:work/fftw-3.3.4/doc/html/Overview-of-Fortran-interface.html:<link title="Top" rel="start" href="index.html#Top">
fftw-link.txt:work/fftw-3.3.4/doc/html/Overview-of-Fortran-interface.html:<link rel="up" href="Calling-FFTW-from-Modern-Fortran.html#Calling-FFTW-from-Modern-Fortran" title="Calling FFTW from Modern Fortran">
fftw-link.txt:work/fftw-3.3.4/doc/html/Overview-of-Fortran-interface.html:<link rel="prev" href="Calling-FFTW-from-Modern-Fortran.html#Calling-FFTW-from-Modern-Fortran" title="Calling FFTW from Modern Fortran">
fftw-link.txt:work/fftw-3.3.4/doc/html/Overview-of-Fortran-interface.html:<link rel="next" href="Reversing-array-dimensions.html#Reversing-array-dimensions" title="Reversing array dimensions">
fftw-link.txt:work/fftw-3.3.4/doc/html/Overview-of-Fortran-interface.html:<link href="http://www.gnu.org/software/texinfo/" rel="generator-home" title="Texinfo Homepage">
fftw-link.txt:work/fftw-3.3.4/doc/html/Plan-execution-in-Fortran.html:<link title="Top" rel="start" href="index.html#Top">
fftw-link.txt:work/fftw-3.3.4/doc/html/Plan-execution-in-Fortran.html:<link rel="up" href="Calling-FFTW-from-Modern-Fortran.html#Calling-FFTW-from-Modern-Fortran" title="Calling FFTW from Modern Fortran">
fftw-link.txt:work/fftw-3.3.4/doc/html/Plan-execution-in-Fortran.html:<link rel="prev" href="FFTW-Fortran-type-reference.html#FFTW-Fortran-type-reference" title="FFTW Fortran type reference">
fftw-link.txt:work/fftw-3.3.4/doc/html/Plan-execution-in-Fortran.html:<link rel="next" href="Allocating-aligned-memory-in-Fortran.html#Allocating-aligned-memory-in-Fortran" title="Allocating aligned memory in Fortran">
fftw-link.txt:work/fftw-3.3.4/doc/html/Plan-execution-in-Fortran.html:<link href="http://www.gnu.org/software/texinfo/" rel="generator-home" title="Texinfo Homepage">
fftw-link.txt:work/fftw-3.3.4/doc/html/Planner-Flags.html:<link title="Top" rel="start" href="index.html#Top">
fftw-link.txt:work/fftw-3.3.4/doc/html/Planner-Flags.html:<link rel="up" href="Basic-Interface.html#Basic-Interface" title="Basic Interface">
fftw-link.txt:work/fftw-3.3.4/doc/html/Planner-Flags.html:<link rel="prev" href="Complex-DFTs.html#Complex-DFTs" title="Complex DFTs">
fftw-link.txt:work/fftw-3.3.4/doc/html/Planner-Flags.html:<link rel="next" href="Real_002ddata-DFTs.html#Real_002ddata-DFTs" title="Real-data DFTs">
fftw-link.txt:work/fftw-3.3.4/doc/html/Planner-Flags.html:<link href="http://www.gnu.org/software/texinfo/" rel="generator-home" title="Texinfo Homepage">
fftw-link.txt:work/fftw-3.3.4/doc/html/Precision.html:<link title="Top" rel="start" href="index.html#Top">
fftw-link.txt:work/fftw-3.3.4/doc/html/Precision.html:<link rel="up" href="Data-Types-and-Files.html#Data-Types-and-Files" title="Data Types and Files">
fftw-link.txt:work/fftw-3.3.4/doc/html/Precision.html:<link rel="prev" href="Complex-numbers.html#Complex-numbers" title="Complex numbers">
fftw-link.txt:work/fftw-3.3.4/doc/html/Precision.html:<link rel="next" href="Memory-Allocation.html#Memory-Allocation" title="Memory Allocation">
fftw-link.txt:work/fftw-3.3.4/doc/html/Precision.html:<link href="http://www.gnu.org/software/texinfo/" rel="generator-home" title="Texinfo Homepage">
fftw-link.txt:work/fftw-3.3.4/doc/html/Precision.html:can link to the different-precision libraries simultaneously.)
fftw-link.txt:work/fftw-3.3.4/doc/html/Precision.html:To use this type, link with <code>-lfftw3q -lquadmath -lm</code> (the
fftw-link.txt:work/fftw-3.3.4/doc/html/Real-even_002fodd-DFTs-_0028cosine_002fsine-transforms_0029.html:<link title="Top" rel="start" href="index.html#Top">
fftw-link.txt:work/fftw-3.3.4/doc/html/Real-even_002fodd-DFTs-_0028cosine_002fsine-transforms_0029.html:<link rel="up" href="More-DFTs-of-Real-Data.html#More-DFTs-of-Real-Data" title="More DFTs of Real Data">
fftw-link.txt:work/fftw-3.3.4/doc/html/Real-even_002fodd-DFTs-_0028cosine_002fsine-transforms_0029.html:<link rel="prev" href="The-Halfcomplex_002dformat-DFT.html#The-Halfcomplex_002dformat-DFT" title="The Halfcomplex-format DFT">
fftw-link.txt:work/fftw-3.3.4/doc/html/Real-even_002fodd-DFTs-_0028cosine_002fsine-transforms_0029.html:<link rel="next" href="The-Discrete-Hartley-Transform.html#The-Discrete-Hartley-Transform" title="The Discrete Hartley Transform">
fftw-link.txt:work/fftw-3.3.4/doc/html/Real-even_002fodd-DFTs-_0028cosine_002fsine-transforms_0029.html:<link href="http://www.gnu.org/software/texinfo/" rel="generator-home" title="Texinfo Homepage">
fftw-link.txt:work/fftw-3.3.4/doc/html/Real_002ddata-DFT-Array-Format.html:<link title="Top" rel="start" href="index.html#Top">
fftw-link.txt:work/fftw-3.3.4/doc/html/Real_002ddata-DFT-Array-Format.html:<link rel="up" href="Basic-Interface.html#Basic-Interface" title="Basic Interface">
fftw-link.txt:work/fftw-3.3.4/doc/html/Real_002ddata-DFT-Array-Format.html:<link rel="prev" href="Real_002ddata-DFTs.html#Real_002ddata-DFTs" title="Real-data DFTs">
fftw-link.txt:work/fftw-3.3.4/doc/html/Real_002ddata-DFT-Array-Format.html:<link rel="next" href="Real_002dto_002dReal-Transforms.html#Real_002dto_002dReal-Transforms" title="Real-to-Real Transforms">
fftw-link.txt:work/fftw-3.3.4/doc/html/Real_002ddata-DFT-Array-Format.html:<link href="http://www.gnu.org/software/texinfo/" rel="generator-home" title="Texinfo Homepage">
fftw-link.txt:work/fftw-3.3.4/doc/html/Real_002ddata-DFTs.html:<link title="Top" rel="start" href="index.html#Top">
fftw-link.txt:work/fftw-3.3.4/doc/html/Real_002ddata-DFTs.html:<link rel="up" href="Basic-Interface.html#Basic-Interface" title="Basic Interface">
fftw-link.txt:work/fftw-3.3.4/doc/html/Real_002ddata-DFTs.html:<link rel="prev" href="Planner-Flags.html#Planner-Flags" title="Planner Flags">
fftw-link.txt:work/fftw-3.3.4/doc/html/Real_002ddata-DFTs.html:<link rel="next" href="Real_002ddata-DFT-Array-Format.html#Real_002ddata-DFT-Array-Format" title="Real-data DFT Array Format">
fftw-link.txt:work/fftw-3.3.4/doc/html/Real_002ddata-DFTs.html:<link href="http://www.gnu.org/software/texinfo/" rel="generator-home" title="Texinfo Homepage">
fftw-link.txt:work/fftw-3.3.4/doc/html/Real_002dto_002dReal-Transform-Kinds.html:<link title="Top" rel="start" href="index.html#Top">
fftw-link.txt:work/fftw-3.3.4/doc/html/Real_002dto_002dReal-Transform-Kinds.html:<link rel="up" href="Basic-Interface.html#Basic-Interface" title="Basic Interface">
fftw-link.txt:work/fftw-3.3.4/doc/html/Real_002dto_002dReal-Transform-Kinds.html:<link rel="prev" href="Real_002dto_002dReal-Transforms.html#Real_002dto_002dReal-Transforms" title="Real-to-Real Transforms">
fftw-link.txt:work/fftw-3.3.4/doc/html/Real_002dto_002dReal-Transform-Kinds.html:<link href="http://www.gnu.org/software/texinfo/" rel="generator-home" title="Texinfo Homepage">
fftw-link.txt:work/fftw-3.3.4/doc/html/Real_002dto_002dReal-Transforms.html:<link title="Top" rel="start" href="index.html#Top">
fftw-link.txt:work/fftw-3.3.4/doc/html/Real_002dto_002dReal-Transforms.html:<link rel="up" href="Basic-Interface.html#Basic-Interface" title="Basic Interface">
fftw-link.txt:work/fftw-3.3.4/doc/html/Real_002dto_002dReal-Transforms.html:<link rel="prev" href="Real_002ddata-DFT-Array-Format.html#Real_002ddata-DFT-Array-Format" title="Real-data DFT Array Format">
fftw-link.txt:work/fftw-3.3.4/doc/html/Real_002dto_002dReal-Transforms.html:<link rel="next" href="Real_002dto_002dReal-Transform-Kinds.html#Real_002dto_002dReal-Transform-Kinds" title="Real-to-Real Transform Kinds">
fftw-link.txt:work/fftw-3.3.4/doc/html/Real_002dto_002dReal-Transforms.html:<link href="http://www.gnu.org/software/texinfo/" rel="generator-home" title="Texinfo Homepage">
fftw-link.txt:work/fftw-3.3.4/doc/html/Reversing-array-dimensions.html:<link title="Top" rel="start" href="index.html#Top">
fftw-link.txt:work/fftw-3.3.4/doc/html/Reversing-array-dimensions.html:<link rel="up" href="Calling-FFTW-from-Modern-Fortran.html#Calling-FFTW-from-Modern-Fortran" title="Calling FFTW from Modern Fortran">
fftw-link.txt:work/fftw-3.3.4/doc/html/Reversing-array-dimensions.html:<link rel="prev" href="Overview-of-Fortran-interface.html#Overview-of-Fortran-interface" title="Overview of Fortran interface">
fftw-link.txt:work/fftw-3.3.4/doc/html/Reversing-array-dimensions.html:<link rel="next" href="FFTW-Fortran-type-reference.html#FFTW-Fortran-type-reference" title="FFTW Fortran type reference">
fftw-link.txt:work/fftw-3.3.4/doc/html/Reversing-array-dimensions.html:<link href="http://www.gnu.org/software/texinfo/" rel="generator-home" title="Texinfo Homepage">
fftw-link.txt:work/fftw-3.3.4/doc/html/Row_002dmajor-Format.html:<link title="Top" rel="start" href="index.html#Top">
fftw-link.txt:work/fftw-3.3.4/doc/html/Row_002dmajor-Format.html:<link rel="up" href="Multi_002ddimensional-Array-Format.html#Multi_002ddimensional-Array-Format" title="Multi-dimensional Array Format">
fftw-link.txt:work/fftw-3.3.4/doc/html/Row_002dmajor-Format.html:<link rel="prev" href="Multi_002ddimensional-Array-Format.html#Multi_002ddimensional-Array-Format" title="Multi-dimensional Array Format">
fftw-link.txt:work/fftw-3.3.4/doc/html/Row_002dmajor-Format.html:<link rel="next" href="Column_002dmajor-Format.html#Column_002dmajor-Format" title="Column-major Format">
fftw-link.txt:work/fftw-3.3.4/doc/html/Row_002dmajor-Format.html:<link href="http://www.gnu.org/software/texinfo/" rel="generator-home" title="Texinfo Homepage">
fftw-link.txt:work/fftw-3.3.4/doc/html/SIMD-alignment-and-fftw_005fmalloc.html:<link title="Top" rel="start" href="index.html#Top">
fftw-link.txt:work/fftw-3.3.4/doc/html/SIMD-alignment-and-fftw_005fmalloc.html:<link rel="up" href="Other-Important-Topics.html#Other-Important-Topics" title="Other Important Topics">
fftw-link.txt:work/fftw-3.3.4/doc/html/SIMD-alignment-and-fftw_005fmalloc.html:<link rel="prev" href="Other-Important-Topics.html#Other-Important-Topics" title="Other Important Topics">
fftw-link.txt:work/fftw-3.3.4/doc/html/SIMD-alignment-and-fftw_005fmalloc.html:<link rel="next" href="Multi_002ddimensional-Array-Format.html#Multi_002ddimensional-Array-Format" title="Multi-dimensional Array Format">
fftw-link.txt:work/fftw-3.3.4/doc/html/SIMD-alignment-and-fftw_005fmalloc.html:<link href="http://www.gnu.org/software/texinfo/" rel="generator-home" title="Texinfo Homepage">
fftw-link.txt:work/fftw-3.3.4/doc/html/SIMD-alignment-and-fftw_005fmalloc.html:   <p>A program linking to an FFTW library compiled with SIMD support can
fftw-link.txt:work/fftw-3.3.4/doc/html/SIMD-alignment-and-fftw_005fmalloc.html:your program is ever linked against a SIMD-using FFTW, we recommend
fftw-link.txt:work/fftw-3.3.4/doc/html/The-1d-Discrete-Fourier-Transform-_0028DFT_0029.html:<link title="Top" rel="start" href="index.html#Top">
fftw-link.txt:work/fftw-3.3.4/doc/html/The-1d-Discrete-Fourier-Transform-_0028DFT_0029.html:<link rel="up" href="What-FFTW-Really-Computes.html#What-FFTW-Really-Computes" title="What FFTW Really Computes">
fftw-link.txt:work/fftw-3.3.4/doc/html/The-1d-Discrete-Fourier-Transform-_0028DFT_0029.html:<link rel="prev" href="What-FFTW-Really-Computes.html#What-FFTW-Really-Computes" title="What FFTW Really Computes">
fftw-link.txt:work/fftw-3.3.4/doc/html/The-1d-Discrete-Fourier-Transform-_0028DFT_0029.html:<link rel="next" href="The-1d-Real_002ddata-DFT.html#The-1d-Real_002ddata-DFT" title="The 1d Real-data DFT">
fftw-link.txt:work/fftw-3.3.4/doc/html/The-1d-Discrete-Fourier-Transform-_0028DFT_0029.html:<link href="http://www.gnu.org/software/texinfo/" rel="generator-home" title="Texinfo Homepage">
fftw-link.txt:work/fftw-3.3.4/doc/html/The-1d-Real_002ddata-DFT.html:<link title="Top" rel="start" href="index.html#Top">
fftw-link.txt:work/fftw-3.3.4/doc/html/The-1d-Real_002ddata-DFT.html:<link rel="up" href="What-FFTW-Really-Computes.html#What-FFTW-Really-Computes" title="What FFTW Really Computes">
fftw-link.txt:work/fftw-3.3.4/doc/html/The-1d-Real_002ddata-DFT.html:<link rel="prev" href="The-1d-Discrete-Fourier-Transform-_0028DFT_0029.html#The-1d-Discrete-Fourier-Transform-_0028DFT_0029" title="The 1d Discrete Fourier Transform (DFT)">
fftw-link.txt:work/fftw-3.3.4/doc/html/The-1d-Real_002ddata-DFT.html:<link rel="next" href="1d-Real_002deven-DFTs-_0028DCTs_0029.html#g_t1d-Real_002deven-DFTs-_0028DCTs_0029" title="1d Real-even DFTs (DCTs)">
fftw-link.txt:work/fftw-3.3.4/doc/html/The-1d-Real_002ddata-DFT.html:<link href="http://www.gnu.org/software/texinfo/" rel="generator-home" title="Texinfo Homepage">
fftw-link.txt:work/fftw-3.3.4/doc/html/The-Discrete-Hartley-Transform.html:<link title="Top" rel="start" href="index.html#Top">
fftw-link.txt:work/fftw-3.3.4/doc/html/The-Discrete-Hartley-Transform.html:<link rel="up" href="More-DFTs-of-Real-Data.html#More-DFTs-of-Real-Data" title="More DFTs of Real Data">
fftw-link.txt:work/fftw-3.3.4/doc/html/The-Discrete-Hartley-Transform.html:<link rel="prev" href="Real-even_002fodd-DFTs-_0028cosine_002fsine-transforms_0029.html#Real-even_002fodd-DFTs-_0028cosine_002fsine-transforms_0029" title="Real even/odd DFTs (cosine/sine transforms)">
fftw-link.txt:work/fftw-3.3.4/doc/html/The-Discrete-Hartley-Transform.html:<link href="http://www.gnu.org/software/texinfo/" rel="generator-home" title="Texinfo Homepage">
fftw-link.txt:work/fftw-3.3.4/doc/html/The-Halfcomplex_002dformat-DFT.html:<link title="Top" rel="start" href="index.html#Top">
fftw-link.txt:work/fftw-3.3.4/doc/html/The-Halfcomplex_002dformat-DFT.html:<link rel="up" href="More-DFTs-of-Real-Data.html#More-DFTs-of-Real-Data" title="More DFTs of Real Data">
fftw-link.txt:work/fftw-3.3.4/doc/html/The-Halfcomplex_002dformat-DFT.html:<link rel="prev" href="More-DFTs-of-Real-Data.html#More-DFTs-of-Real-Data" title="More DFTs of Real Data">
fftw-link.txt:work/fftw-3.3.4/doc/html/The-Halfcomplex_002dformat-DFT.html:<link rel="next" href="Real-even_002fodd-DFTs-_0028cosine_002fsine-transforms_0029.html#Real-even_002fodd-DFTs-_0028cosine_002fsine-transforms_0029" title="Real even/odd DFTs (cosine/sine transforms)">
fftw-link.txt:work/fftw-3.3.4/doc/html/The-Halfcomplex_002dformat-DFT.html:<link href="http://www.gnu.org/software/texinfo/" rel="generator-home" title="Texinfo Homepage">
fftw-link.txt:work/fftw-3.3.4/doc/html/Thread-safety.html:<link title="Top" rel="start" href="index.html#Top">
fftw-link.txt:work/fftw-3.3.4/doc/html/Thread-safety.html:<link rel="up" href="Multi_002dthreaded-FFTW.html#Multi_002dthreaded-FFTW" title="Multi-threaded FFTW">
fftw-link.txt:work/fftw-3.3.4/doc/html/Thread-safety.html:<link rel="prev" href="How-Many-Threads-to-Use_003f.html#How-Many-Threads-to-Use_003f" title="How Many Threads to Use?">
fftw-link.txt:work/fftw-3.3.4/doc/html/Thread-safety.html:<link href="http://www.gnu.org/software/texinfo/" rel="generator-home" title="Texinfo Homepage">
fftw-link.txt:work/fftw-3.3.4/doc/html/Transposed-distributions.html:<link title="Top" rel="start" href="index.html#Top">
fftw-link.txt:work/fftw-3.3.4/doc/html/Transposed-distributions.html:<link rel="up" href="MPI-Data-Distribution.html#MPI-Data-Distribution" title="MPI Data Distribution">
fftw-link.txt:work/fftw-3.3.4/doc/html/Transposed-distributions.html:<link rel="prev" href="Load-balancing.html#Load-balancing" title="Load balancing">
fftw-link.txt:work/fftw-3.3.4/doc/html/Transposed-distributions.html:<link rel="next" href="One_002ddimensional-distributions.html#One_002ddimensional-distributions" title="One-dimensional distributions">
fftw-link.txt:work/fftw-3.3.4/doc/html/Transposed-distributions.html:<link href="http://www.gnu.org/software/texinfo/" rel="generator-home" title="Texinfo Homepage">
fftw-link.txt:work/fftw-3.3.4/doc/html/Tutorial.html:<link title="Top" rel="start" href="index.html#Top">
fftw-link.txt:work/fftw-3.3.4/doc/html/Tutorial.html:<link rel="prev" href="Introduction.html#Introduction" title="Introduction">
fftw-link.txt:work/fftw-3.3.4/doc/html/Tutorial.html:<link rel="next" href="Other-Important-Topics.html#Other-Important-Topics" title="Other Important Topics">
fftw-link.txt:work/fftw-3.3.4/doc/html/Tutorial.html:<link href="http://www.gnu.org/software/texinfo/" rel="generator-home" title="Texinfo Homepage">
fftw-link.txt:work/fftw-3.3.4/doc/html/Upgrading-from-FFTW-version-2.html:<link title="Top" rel="start" href="index.html#Top">
fftw-link.txt:work/fftw-3.3.4/doc/html/Upgrading-from-FFTW-version-2.html:<link rel="prev" href="Calling-FFTW-from-Legacy-Fortran.html#Calling-FFTW-from-Legacy-Fortran" title="Calling FFTW from Legacy Fortran">
fftw-link.txt:work/fftw-3.3.4/doc/html/Upgrading-from-FFTW-version-2.html:<link rel="next" href="Installation-and-Customization.html#Installation-and-Customization" title="Installation and Customization">
fftw-link.txt:work/fftw-3.3.4/doc/html/Upgrading-from-FFTW-version-2.html:<link href="http://www.gnu.org/software/texinfo/" rel="generator-home" title="Texinfo Homepage">
fftw-link.txt:work/fftw-3.3.4/doc/html/Upgrading-from-FFTW-version-2.html:versions; codes written to use those versions will fail to link with
fftw-link.txt:work/fftw-3.3.4/doc/html/Upgrading-from-FFTW-version-2.html:prototypes are in <code>&lt;fftw3.h&gt;</code>.  However, you still have to link to
fftw-link.txt:work/fftw-3.3.4/doc/html/Usage-of-Multi_002dthreaded-FFTW.html:<link title="Top" rel="start" href="index.html#Top">
fftw-link.txt:work/fftw-3.3.4/doc/html/Usage-of-Multi_002dthreaded-FFTW.html:<link rel="up" href="Multi_002dthreaded-FFTW.html#Multi_002dthreaded-FFTW" title="Multi-threaded FFTW">
fftw-link.txt:work/fftw-3.3.4/doc/html/Usage-of-Multi_002dthreaded-FFTW.html:<link rel="prev" href="Installation-and-Supported-Hardware_002fSoftware.html#Installation-and-Supported-Hardware_002fSoftware" title="Installation and Supported Hardware/Software">
fftw-link.txt:work/fftw-3.3.4/doc/html/Usage-of-Multi_002dthreaded-FFTW.html:<link rel="next" href="How-Many-Threads-to-Use_003f.html#How-Many-Threads-to-Use_003f" title="How Many Threads to Use?">
fftw-link.txt:work/fftw-3.3.4/doc/html/Usage-of-Multi_002dthreaded-FFTW.html:<link href="http://www.gnu.org/software/texinfo/" rel="generator-home" title="Texinfo Homepage">
fftw-link.txt:work/fftw-3.3.4/doc/html/Usage-of-Multi_002dthreaded-FFTW.html:   <p><a name="index-OpenMP-335"></a>First, programs using the parallel complex transforms should be linked
fftw-link.txt:work/fftw-3.3.4/doc/html/Usage-of-Multi_002dthreaded-FFTW.html:-lfftw3 -lm</code> if you compiled with OpenMP. You will also need to link
fftw-link.txt:work/fftw-3.3.4/doc/html/Usage-of-Multi_002dthreaded-FFTW.html:<a name="index-linking-on-Unix-336"></a>
fftw-link.txt:work/fftw-3.3.4/doc/html/Using-MPI-Plans.html:<link title="Top" rel="start" href="index.html#Top">
fftw-link.txt:work/fftw-3.3.4/doc/html/Using-MPI-Plans.html:<link rel="up" href="FFTW-MPI-Reference.html#FFTW-MPI-Reference" title="FFTW MPI Reference">
fftw-link.txt:work/fftw-3.3.4/doc/html/Using-MPI-Plans.html:<link rel="prev" href="MPI-Initialization.html#MPI-Initialization" title="MPI Initialization">
fftw-link.txt:work/fftw-3.3.4/doc/html/Using-MPI-Plans.html:<link rel="next" href="MPI-Data-Distribution-Functions.html#MPI-Data-Distribution-Functions" title="MPI Data Distribution Functions">
fftw-link.txt:work/fftw-3.3.4/doc/html/Using-MPI-Plans.html:<link href="http://www.gnu.org/software/texinfo/" rel="generator-home" title="Texinfo Homepage">
fftw-link.txt:work/fftw-3.3.4/doc/html/Using-Plans.html:<link title="Top" rel="start" href="index.html#Top">
fftw-link.txt:work/fftw-3.3.4/doc/html/Using-Plans.html:<link rel="up" href="FFTW-Reference.html#FFTW-Reference" title="FFTW Reference">
fftw-link.txt:work/fftw-3.3.4/doc/html/Using-Plans.html:<link rel="prev" href="Data-Types-and-Files.html#Data-Types-and-Files" title="Data Types and Files">
fftw-link.txt:work/fftw-3.3.4/doc/html/Using-Plans.html:<link rel="next" href="Basic-Interface.html#Basic-Interface" title="Basic Interface">
fftw-link.txt:work/fftw-3.3.4/doc/html/Using-Plans.html:<link href="http://www.gnu.org/software/texinfo/" rel="generator-home" title="Texinfo Homepage">
fftw-link.txt:work/fftw-3.3.4/doc/html/What-FFTW-Really-Computes.html:<link title="Top" rel="start" href="index.html#Top">
fftw-link.txt:work/fftw-3.3.4/doc/html/What-FFTW-Really-Computes.html:<link rel="up" href="FFTW-Reference.html#FFTW-Reference" title="FFTW Reference">
fftw-link.txt:work/fftw-3.3.4/doc/html/What-FFTW-Really-Computes.html:<link rel="prev" href="Wisdom.html#Wisdom" title="Wisdom">
fftw-link.txt:work/fftw-3.3.4/doc/html/What-FFTW-Really-Computes.html:<link href="http://www.gnu.org/software/texinfo/" rel="generator-home" title="Texinfo Homepage">
fftw-link.txt:work/fftw-3.3.4/doc/html/Wisdom-Export.html:<link title="Top" rel="start" href="index.html#Top">
fftw-link.txt:work/fftw-3.3.4/doc/html/Wisdom-Export.html:<link rel="up" href="Wisdom.html#Wisdom" title="Wisdom">
fftw-link.txt:work/fftw-3.3.4/doc/html/Wisdom-Export.html:<link rel="prev" href="Wisdom.html#Wisdom" title="Wisdom">
fftw-link.txt:work/fftw-3.3.4/doc/html/Wisdom-Export.html:<link rel="next" href="Wisdom-Import.html#Wisdom-Import" title="Wisdom Import">
fftw-link.txt:work/fftw-3.3.4/doc/html/Wisdom-Export.html:<link href="http://www.gnu.org/software/texinfo/" rel="generator-home" title="Texinfo Homepage">
fftw-link.txt:work/fftw-3.3.4/doc/html/Wisdom-File-Export_002fImport-from-Fortran.html:<link title="Top" rel="start" href="index.html#Top">
fftw-link.txt:work/fftw-3.3.4/doc/html/Wisdom-File-Export_002fImport-from-Fortran.html:<link rel="up" href="Accessing-the-wisdom-API-from-Fortran.html#Accessing-the-wisdom-API-from-Fortran" title="Accessing the wisdom API from Fortran">
fftw-link.txt:work/fftw-3.3.4/doc/html/Wisdom-File-Export_002fImport-from-Fortran.html:<link rel="prev" href="Accessing-the-wisdom-API-from-Fortran.html#Accessing-the-wisdom-API-from-Fortran" title="Accessing the wisdom API from Fortran">
fftw-link.txt:work/fftw-3.3.4/doc/html/Wisdom-File-Export_002fImport-from-Fortran.html:<link rel="next" href="Wisdom-String-Export_002fImport-from-Fortran.html#Wisdom-String-Export_002fImport-from-Fortran" title="Wisdom String Export/Import from Fortran">
fftw-link.txt:work/fftw-3.3.4/doc/html/Wisdom-File-Export_002fImport-from-Fortran.html:<link href="http://www.gnu.org/software/texinfo/" rel="generator-home" title="Texinfo Homepage">
fftw-link.txt:work/fftw-3.3.4/doc/html/Wisdom-Generic-Export_002fImport-from-Fortran.html:<link title="Top" rel="start" href="index.html#Top">
fftw-link.txt:work/fftw-3.3.4/doc/html/Wisdom-Generic-Export_002fImport-from-Fortran.html:<link rel="up" href="Accessing-the-wisdom-API-from-Fortran.html#Accessing-the-wisdom-API-from-Fortran" title="Accessing the wisdom API from Fortran">
fftw-link.txt:work/fftw-3.3.4/doc/html/Wisdom-Generic-Export_002fImport-from-Fortran.html:<link rel="prev" href="Wisdom-String-Export_002fImport-from-Fortran.html#Wisdom-String-Export_002fImport-from-Fortran" title="Wisdom String Export/Import from Fortran">
fftw-link.txt:work/fftw-3.3.4/doc/html/Wisdom-Generic-Export_002fImport-from-Fortran.html:<link href="http://www.gnu.org/software/texinfo/" rel="generator-home" title="Texinfo Homepage">
fftw-link.txt:work/fftw-3.3.4/doc/html/Wisdom-Import.html:<link title="Top" rel="start" href="index.html#Top">
fftw-link.txt:work/fftw-3.3.4/doc/html/Wisdom-Import.html:<link rel="up" href="Wisdom.html#Wisdom" title="Wisdom">
fftw-link.txt:work/fftw-3.3.4/doc/html/Wisdom-Import.html:<link rel="prev" href="Wisdom-Export.html#Wisdom-Export" title="Wisdom Export">
fftw-link.txt:work/fftw-3.3.4/doc/html/Wisdom-Import.html:<link rel="next" href="Forgetting-Wisdom.html#Forgetting-Wisdom" title="Forgetting Wisdom">
fftw-link.txt:work/fftw-3.3.4/doc/html/Wisdom-Import.html:<link href="http://www.gnu.org/software/texinfo/" rel="generator-home" title="Texinfo Homepage">
fftw-link.txt:work/fftw-3.3.4/doc/html/Wisdom-String-Export_002fImport-from-Fortran.html:<link title="Top" rel="start" href="index.html#Top">
fftw-link.txt:work/fftw-3.3.4/doc/html/Wisdom-String-Export_002fImport-from-Fortran.html:<link rel="up" href="Accessing-the-wisdom-API-from-Fortran.html#Accessing-the-wisdom-API-from-Fortran" title="Accessing the wisdom API from Fortran">
fftw-link.txt:work/fftw-3.3.4/doc/html/Wisdom-String-Export_002fImport-from-Fortran.html:<link rel="prev" href="Wisdom-File-Export_002fImport-from-Fortran.html#Wisdom-File-Export_002fImport-from-Fortran" title="Wisdom File Export/Import from Fortran">
fftw-link.txt:work/fftw-3.3.4/doc/html/Wisdom-String-Export_002fImport-from-Fortran.html:<link rel="next" href="Wisdom-Generic-Export_002fImport-from-Fortran.html#Wisdom-Generic-Export_002fImport-from-Fortran" title="Wisdom Generic Export/Import from Fortran">
fftw-link.txt:work/fftw-3.3.4/doc/html/Wisdom-String-Export_002fImport-from-Fortran.html:<link href="http://www.gnu.org/software/texinfo/" rel="generator-home" title="Texinfo Homepage">
fftw-link.txt:work/fftw-3.3.4/doc/html/Wisdom-Utilities.html:<link title="Top" rel="start" href="index.html#Top">
fftw-link.txt:work/fftw-3.3.4/doc/html/Wisdom-Utilities.html:<link rel="up" href="Wisdom.html#Wisdom" title="Wisdom">
fftw-link.txt:work/fftw-3.3.4/doc/html/Wisdom-Utilities.html:<link rel="prev" href="Forgetting-Wisdom.html#Forgetting-Wisdom" title="Forgetting Wisdom">
fftw-link.txt:work/fftw-3.3.4/doc/html/Wisdom-Utilities.html:<link href="http://www.gnu.org/software/texinfo/" rel="generator-home" title="Texinfo Homepage">
fftw-link.txt:work/fftw-3.3.4/doc/html/Wisdom-Utilities.html:latter is a C subroutine that you can compile and link into your
fftw-link.txt:work/fftw-3.3.4/doc/html/Wisdom-Utilities.html:<code>fftw-wisdom-to-conf</code> produces a configuration routine that links
fftw-link.txt:work/fftw-3.3.4/doc/html/Wisdom-Utilities.html:greatly reducing the size of statically linked executables (which should
fftw-link.txt:work/fftw-3.3.4/doc/html/Wisdom-of-Fortran_003f.html:<link title="Top" rel="start" href="index.html#Top">
fftw-link.txt:work/fftw-3.3.4/doc/html/Wisdom-of-Fortran_003f.html:<link rel="up" href="Calling-FFTW-from-Legacy-Fortran.html#Calling-FFTW-from-Legacy-Fortran" title="Calling FFTW from Legacy Fortran">
fftw-link.txt:work/fftw-3.3.4/doc/html/Wisdom-of-Fortran_003f.html:<link rel="prev" href="Fortran-Examples.html#Fortran-Examples" title="Fortran Examples">
fftw-link.txt:work/fftw-3.3.4/doc/html/Wisdom-of-Fortran_003f.html:<link href="http://www.gnu.org/software/texinfo/" rel="generator-home" title="Texinfo Homepage">
fftw-link.txt:work/fftw-3.3.4/doc/html/Wisdom-of-Fortran_003f.html:programs be required to link with the Fortran I/O library.)
fftw-link.txt:work/fftw-3.3.4/doc/html/Wisdom.html:<link title="Top" rel="start" href="index.html#Top">
fftw-link.txt:work/fftw-3.3.4/doc/html/Wisdom.html:<link rel="up" href="FFTW-Reference.html#FFTW-Reference" title="FFTW Reference">
fftw-link.txt:work/fftw-3.3.4/doc/html/Wisdom.html:<link rel="prev" href="New_002darray-Execute-Functions.html#New_002darray-Execute-Functions" title="New-array Execute Functions">
fftw-link.txt:work/fftw-3.3.4/doc/html/Wisdom.html:<link rel="next" href="What-FFTW-Really-Computes.html#What-FFTW-Really-Computes" title="What FFTW Really Computes">
fftw-link.txt:work/fftw-3.3.4/doc/html/Wisdom.html:<link href="http://www.gnu.org/software/texinfo/" rel="generator-home" title="Texinfo Homepage">
fftw-link.txt:work/fftw-3.3.4/doc/html/Words-of-Wisdom_002dSaving-Plans.html:<link title="Top" rel="start" href="index.html#Top">
fftw-link.txt:work/fftw-3.3.4/doc/html/Words-of-Wisdom_002dSaving-Plans.html:<link rel="up" href="Other-Important-Topics.html#Other-Important-Topics" title="Other Important Topics">
fftw-link.txt:work/fftw-3.3.4/doc/html/Words-of-Wisdom_002dSaving-Plans.html:<link rel="prev" href="Multi_002ddimensional-Array-Format.html#Multi_002ddimensional-Array-Format" title="Multi-dimensional Array Format">
fftw-link.txt:work/fftw-3.3.4/doc/html/Words-of-Wisdom_002dSaving-Plans.html:<link rel="next" href="Caveats-in-Using-Wisdom.html#Caveats-in-Using-Wisdom" title="Caveats in Using Wisdom">
fftw-link.txt:work/fftw-3.3.4/doc/html/Words-of-Wisdom_002dSaving-Plans.html:<link href="http://www.gnu.org/software/texinfo/" rel="generator-home" title="Texinfo Homepage">
fftw-link.txt:work/fftw-3.3.4/doc/html/index.html:<link title="Top" rel="start" href="#Top">
fftw-link.txt:work/fftw-3.3.4/doc/html/index.html:<link href="http://www.gnu.org/software/texinfo/" rel="generator-home" title="Texinfo Homepage">
fftw-link.txt:work/fftw-3.3.4/doc/install.texi:must be linked in addition to the main FFTW library.  This is so that
fftw-link.txt:work/fftw-3.3.4/doc/install.texi:users of the serial library do not need to link the system threads
fftw-link.txt:work/fftw-3.3.4/doc/install.texi:included, the wrappers employ the linking conventions of the Fortran
fftw-link.txt:work/fftw-3.3.4/doc/install.texi:@code{-mabi=altivec} option when compiling any code that links to FFTW,
fftw-link.txt:work/fftw-3.3.4/doc/install.texi:properly aligns the stack when compiling any code that links to FFTW.
fftw-link.txt:work/fftw-3.3.4/doc/install.texi:Once these files are all compiled, link them into a library, or a shared
fftw-link.txt:work/fftw-3.3.4/doc/install.texi:@code{libbench2/} directory, and link it into a library.  Then compile
fftw-link.txt:work/fftw-3.3.4/doc/install.texi:the code in the @code{tests/} directory and link it to the
fftw-link.txt:work/fftw-3.3.4/doc/install.texi:@code{tools/fftw-wisdom.c} and link it to the @code{libbench2} and FFTW
fftw-link.txt:work/fftw-3.3.4/doc/intro.texi:@uref{http://www.fftw.org, Our web page} also has links to FFT-related
fftw-link.txt:work/fftw-3.3.4/doc/intro.texi:example, if code space is a concern, we provide a tool that links only
fftw-link.txt:work/fftw-3.3.4/doc/intro.texi:FFTW, the FAQ, benchmarks, and other links, are available at
fftw-link.txt:work/fftw-3.3.4/doc/legacy-fortran.texi:deserve to link to FFTW.}  The single and long-double precision
fftw-link.txt:work/fftw-3.3.4/doc/legacy-fortran.texi:programs be required to link with the Fortran I/O library.)
fftw-link.txt:work/fftw-3.3.4/doc/modern-fortran.texi:@code{fftw3l.f03}, as above.  You should also link with
fftw-link.txt:work/fftw-3.3.4/doc/modern-fortran.texi:@samp{fftw_}, @code{fftwf_}, and @code{fftwl_} for the different precisions, and link to different libraries (@code{-lfftw3}, @code{-lfftw3f}, and @code{-lfftw3l} on Unix), but use the @emph{same} include file @code{fftw3.f03} and the @emph{same} constants (all of which begin with @samp{FFTW_}).  The exception is @code{long double} precision, for which you should @emph{also} include @code{fftw3l.f03} (@pxref{Extended and quadruple precision in Fortran}).
fftw-link.txt:work/fftw-3.3.4/doc/modern-fortran.texi:as usual for Fortran modules.  (You still need to link to the FFTW
fftw-link.txt:work/fftw-3.3.4/doc/mpi.texi:automatically detect how to compile and link code using your MPI
fftw-link.txt:work/fftw-3.3.4/doc/mpi.texi:If, instead of a special compiler command, you need to link a certain
fftw-link.txt:work/fftw-3.3.4/doc/mpi.texi:library, you can specify the link command via the @code{MPILIBS}
fftw-link.txt:work/fftw-3.3.4/doc/mpi.texi:Programs using the MPI FFTW routines should be linked with
fftw-link.txt:work/fftw-3.3.4/doc/mpi.texi:(@pxref{Precision}). You will also need to link with whatever library
fftw-link.txt:work/fftw-3.3.4/doc/mpi.texi:link MPI code.
fftw-link.txt:work/fftw-3.3.4/doc/mpi.texi:@cindex linking on Unix
fftw-link.txt:work/fftw-3.3.4/doc/mpi.texi:You must also link to @emph{both} the FFTW MPI library and to the
fftw-link.txt:work/fftw-3.3.4/doc/mpi.texi:-lfftw3 -lm} at the end of the link command.
fftw-link.txt:work/fftw-3.3.4/doc/other.texi:A program linking to an FFTW library compiled with SIMD support can
fftw-link.txt:work/fftw-3.3.4/doc/other.texi:your program is ever linked against a SIMD-using FFTW, we recommend
fftw-link.txt:work/fftw-3.3.4/doc/reference.texi:You must also link to the FFTW library.  On Unix, this
fftw-link.txt:work/fftw-3.3.4/doc/reference.texi:means adding @code{-lfftw3 -lm} at the @emph{end} of the link command.
fftw-link.txt:work/fftw-3.3.4/doc/reference.texi:can link to the different-precision libraries simultaneously.)
fftw-link.txt:work/fftw-3.3.4/doc/reference.texi:To use this type, link with @code{-lfftw3q -lquadmath -lm} (the
fftw-link.txt:work/fftw-3.3.4/doc/reference.texi:latter is a C subroutine that you can compile and link into your
fftw-link.txt:work/fftw-3.3.4/doc/reference.texi:@code{fftw-wisdom-to-conf} produces a configuration routine that links
fftw-link.txt:work/fftw-3.3.4/doc/reference.texi:greatly reducing the size of statically linked executables (which should
fftw-link.txt:work/fftw-3.3.4/doc/texinfo.tex:% @setcolor (or @url, or @link, etc.) between @contents and the very
fftw-link.txt:work/fftw-3.3.4/doc/texinfo.tex:\newif\iflinks \linkstrue % by default we want the aux files.
fftw-link.txt:work/fftw-3.3.4/doc/texinfo.tex:\let\novalidate = \linksfalse
fftw-link.txt:work/fftw-3.3.4/doc/texinfo.tex:   \iflinks
fftw-link.txt:work/fftw-3.3.4/doc/texinfo.tex:  \def\linkcolor{\rgbDarkRed}
fftw-link.txt:work/fftw-3.3.4/doc/texinfo.tex:  \def\endlink{\setcolor{\maincolor}\pdfendlink}
fftw-link.txt:work/fftw-3.3.4/doc/texinfo.tex:    % Generate a link to the node text if that exists; else, use the
fftw-link.txt:work/fftw-3.3.4/doc/texinfo.tex:    \let \startlink \pdfannotlink
fftw-link.txt:work/fftw-3.3.4/doc/texinfo.tex:    \let \startlink \pdfstartlink
fftw-link.txt:work/fftw-3.3.4/doc/texinfo.tex:      \startlink attr{/Border [0 0 0]}%
fftw-link.txt:work/fftw-3.3.4/doc/texinfo.tex:      \ifnum0=\countA\else\makelink\fi
fftw-link.txt:work/fftw-3.3.4/doc/texinfo.tex:  \def\makelink{\addtokens{\toksB}%
fftw-link.txt:work/fftw-3.3.4/doc/texinfo.tex:    {\noexpand\pdflink{\the\toksC}}\toksC={}\global\countA=0}
fftw-link.txt:work/fftw-3.3.4/doc/texinfo.tex:  \def\pdflink#1{%
fftw-link.txt:work/fftw-3.3.4/doc/texinfo.tex:    \startlink attr{/Border [0 0 0]} goto name{\pdfmkpgn{#1}}
fftw-link.txt:work/fftw-3.3.4/doc/texinfo.tex:    \setcolor{\linkcolor}#1\endlink}
fftw-link.txt:work/fftw-3.3.4/doc/texinfo.tex:  \let\endlink = \relax
fftw-link.txt:work/fftw-3.3.4/doc/texinfo.tex:  \endlink
fftw-link.txt:work/fftw-3.3.4/doc/texinfo.tex:  \endlink
fftw-link.txt:work/fftw-3.3.4/doc/texinfo.tex:    \endlink
fftw-link.txt:work/fftw-3.3.4/doc/texinfo.tex:  \iflinks
fftw-link.txt:work/fftw-3.3.4/doc/texinfo.tex:  \iflinks
fftw-link.txt:work/fftw-3.3.4/doc/texinfo.tex:  \iflinks
fftw-link.txt:work/fftw-3.3.4/doc/texinfo.tex:    \iflinks
fftw-link.txt:work/fftw-3.3.4/doc/texinfo.tex:  \iflinks
fftw-link.txt:work/fftw-3.3.4/doc/texinfo.tex:  % Make link in pdf output.
fftw-link.txt:work/fftw-3.3.4/doc/texinfo.tex:     \startlink attr{/Border [0 0 0]}%
fftw-link.txt:work/fftw-3.3.4/doc/texinfo.tex:    \setcolor{\linkcolor}%
fftw-link.txt:work/fftw-3.3.4/doc/texinfo.tex:  \endlink
fftw-link.txt:work/fftw-3.3.4/doc/texinfo.tex:    \iflinks
fftw-link.txt:work/fftw-3.3.4/doc/texinfo.tex:  % page number, and we want to fully expand that so we can get a link
fftw-link.txt:work/fftw-3.3.4/doc/threads.texi:described below).  However, your programs may only link to @emph{one}
fftw-link.txt:work/fftw-3.3.4/doc/threads.texi:First, programs using the parallel complex transforms should be linked
fftw-link.txt:work/fftw-3.3.4/doc/threads.texi:-lfftw3 -lm} if you compiled with OpenMP. You will also need to link
fftw-link.txt:work/fftw-3.3.4/doc/threads.texi:@cindex linking on Unix
fftw-link.txt:work/fftw-3.3.4/doc/tutorial.texi:You must link this code with the @code{fftw3} library.  On Unix systems,
fftw-link.txt:work/fftw-3.3.4/doc/tutorial.texi:link with @code{-lfftw3 -lm}.
fftw-link.txt:work/fftw-3.3.4/doc/tutorial.texi:@code{fftw_} prefix by @code{fftwf_} or @code{fftwl_} and link with
fftw-link.txt:work/fftw-3.3.4/doc/upgrading.texi:versions; codes written to use those versions will fail to link with
fftw-link.txt:work/fftw-3.3.4/doc/upgrading.texi:prototypes are in @code{<fftw3.h>}.  However, you still have to link to
fftw-link.txt:work/fftw-3.3.4/install-sh:	# We try this two ways since rm can't unlink itself on some
fftw-link.txt:work/fftw-3.3.4/install-sh:	  { echo "$0: cannot unlink or rename $dst" >&2
fftw-link.txt:work/fftw-3.3.4/kernel/Makefile.in:	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
fftw-link.txt:work/fftw-3.3.4/kernel/cycle.h:   from Carbon, requires no additional libraries to be linked). */
fftw-link.txt:work/fftw-3.3.4/kernel/cycle.h:   NOTE: this code will fail to link unless you use the -Masmkeyword compiler
fftw-link.txt:work/fftw-3.3.4/kernel/kalloc.c:   Visual C++ "Processor Pack" that you have to statically link into
fftw-link.txt:work/fftw-3.3.4/kernel/scan.c:   willing to link this crap with FFTW.  Not over my dead body.
fftw-link.txt:work/fftw-3.3.4/libbench2/Makefile.in:	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
fftw-link.txt:work/fftw-3.3.4/libbench2/main.c:   routine (called "MAIN__" or something similar in order to link a C
fftw-link.txt:work/fftw-3.3.4/ltmain.sh:#         link               create a library or an executable
fftw-link.txt:work/fftw-3.3.4/ltmain.sh:#         linker:		$LD (gnu? $with_gnu_ld)
fftw-link.txt:work/fftw-3.3.4/ltmain.sh:link|lin|li|l)
fftw-link.txt:work/fftw-3.3.4/ltmain.sh:  shift; set dummy --mode link ${1+"$@"}; shift
fftw-link.txt:work/fftw-3.3.4/ltmain.sh:  clean|compile|execute|finish|install|link|relink|uninstall) ;;
fftw-link.txt:work/fftw-3.3.4/ltmain.sh:# It is necessary for linking the library.
fftw-link.txt:work/fftw-3.3.4/ltmain.sh:    # We use this script file to make the link, it avoids creating a new file
fftw-link.txt:work/fftw-3.3.4/ltmain.sh:  -shared           do not build a \`.o' file suitable for static linking
fftw-link.txt:work/fftw-3.3.4/ltmain.sh:  -static           only build a \`.o' file suitable for static linking
fftw-link.txt:work/fftw-3.3.4/ltmain.sh:      link)
fftw-link.txt:work/fftw-3.3.4/ltmain.sh:"Usage: $progname [OPTION]... --mode=link LINK-COMMAND...
fftw-link.txt:work/fftw-3.3.4/ltmain.sh:  -all-static       do not do any dynamic linking at all
fftw-link.txt:work/fftw-3.3.4/ltmain.sh:  -dlpreopen FILE   link in FILE and add its symbols to lt_preloaded_symbols
fftw-link.txt:work/fftw-3.3.4/ltmain.sh:  -no-install       link a not-installable executable
fftw-link.txt:work/fftw-3.3.4/ltmain.sh:  -shared           only do dynamic linking of libtool libraries
fftw-link.txt:work/fftw-3.3.4/ltmain.sh:  -static           do not do any dynamic linking of uninstalled libtool libraries
fftw-link.txt:work/fftw-3.3.4/ltmain.sh:                    do not do any dynamic linking of libtool libraries
fftw-link.txt:work/fftw-3.3.4/ltmain.sh:  -Xcompiler FLAG   pass linker-specific FLAG directly to the compiler
fftw-link.txt:work/fftw-3.3.4/ltmain.sh:  -Xlinker FLAG     pass linker-specific FLAG directly to the linker
fftw-link.txt:work/fftw-3.3.4/ltmain.sh:  -XCClinker FLAG   pass link-specific FLAG to the compiler driver (CC)
fftw-link.txt:work/fftw-3.3.4/ltmain.sh:      for opt_mode in compile link execute install finish uninstall clean; do
fftw-link.txt:work/fftw-3.3.4/ltmain.sh:      for opt_mode in compile link execute install finish uninstall clean; do
fftw-link.txt:work/fftw-3.3.4/ltmain.sh:	    func_warning "\`$file' was not linked with \`-export-dynamic'"
fftw-link.txt:work/fftw-3.3.4/ltmain.sh:      echo "If you ever happen to want to link against installed libraries"
fftw-link.txt:work/fftw-3.3.4/ltmain.sh:      echo "flag during linking and do at least one of the following:"
fftw-link.txt:work/fftw-3.3.4/ltmain.sh:	echo "     during linking"
fftw-link.txt:work/fftw-3.3.4/ltmain.sh:	$ECHO "   - use the \`$flag' linker flag"
fftw-link.txt:work/fftw-3.3.4/ltmain.sh:	relink_command=
fftw-link.txt:work/fftw-3.3.4/ltmain.sh:	if test -n "$relink_command"; then
fftw-link.txt:work/fftw-3.3.4/ltmain.sh:	    # Stick the inst_prefix_dir data into the link command.
fftw-link.txt:work/fftw-3.3.4/ltmain.sh:	    relink_command=`$ECHO "$relink_command" | $SED "s%@inst_prefix_dir@%-inst-prefix-dir $inst_prefix_dir%"`
fftw-link.txt:work/fftw-3.3.4/ltmain.sh:	    relink_command=`$ECHO "$relink_command" | $SED "s%@inst_prefix_dir@%%"`
fftw-link.txt:work/fftw-3.3.4/ltmain.sh:	  func_warning "relinking \`$file'"
fftw-link.txt:work/fftw-3.3.4/ltmain.sh:	  func_show_eval "$relink_command" \
fftw-link.txt:work/fftw-3.3.4/ltmain.sh:	    'func_fatal_error "error: relink \`$file'\'' with the above command before installing it"'
fftw-link.txt:work/fftw-3.3.4/ltmain.sh:	  test -n "$relink_command" && srcname="$realname"T
fftw-link.txt:work/fftw-3.3.4/ltmain.sh:	  # Install the shared library and build the symlinks.
fftw-link.txt:work/fftw-3.3.4/ltmain.sh:	    # Delete the old symlinks, and create new ones.
fftw-link.txt:work/fftw-3.3.4/ltmain.sh:	    # the symlink we replace!  Solaris /bin/ln does not understand -f,
fftw-link.txt:work/fftw-3.3.4/ltmain.sh:	    for linkname
fftw-link.txt:work/fftw-3.3.4/ltmain.sh:	      test "$linkname" != "$realname" \
fftw-link.txt:work/fftw-3.3.4/ltmain.sh:		&& func_show_eval "(cd $destdir && { $LN_S -f $realname $linkname || { $RM $linkname && $LN_S $realname $linkname; }; })"
fftw-link.txt:work/fftw-3.3.4/ltmain.sh:	  relink_command=
fftw-link.txt:work/fftw-3.3.4/ltmain.sh:	  relink_command=
fftw-link.txt:work/fftw-3.3.4/ltmain.sh:	  if test "$fast_install" = no && test -n "$relink_command"; then
fftw-link.txt:work/fftw-3.3.4/ltmain.sh:	        relink_command=`$ECHO "$relink_command" | $SED 's%@OUTPUT@%'"$outputname"'%g'`
fftw-link.txt:work/fftw-3.3.4/ltmain.sh:	          func_quote_for_expand "$relink_command"
fftw-link.txt:work/fftw-3.3.4/ltmain.sh:	        if eval "$relink_command"; then :
fftw-link.txt:work/fftw-3.3.4/ltmain.sh:		  func_error "error: relink \`$file' with the above command before installing it"
fftw-link.txt:work/fftw-3.3.4/ltmain.sh:	        func_warning "cannot relink \`$file'"
fftw-link.txt:work/fftw-3.3.4/ltmain.sh:	            $sharedlib_from_linklib_cmd "$dlprefile"
fftw-link.txt:work/fftw-3.3.4/ltmain.sh:	            dlprefile_dlbasename=$sharedlib_from_linklib_result
fftw-link.txt:work/fftw-3.3.4/ltmain.sh:/* This works around a problem in FreeBSD linker */
fftw-link.txt:work/fftw-3.3.4/ltmain.sh:	  # linked before any other PIC object.  But we must not use
fftw-link.txt:work/fftw-3.3.4/ltmain.sh:	  # pic_flag when linking with -static.  The problem exists in
fftw-link.txt:work/fftw-3.3.4/ltmain.sh:      # lt_preloaded_symbols.  The linker will fail if global_symbol_pipe
fftw-link.txt:work/fftw-3.3.4/ltmain.sh:#    $sharedlib_from_linklib_cmd
fftw-link.txt:work/fftw-3.3.4/ltmain.sh:#    $sharedlib_from_linklib_result
fftw-link.txt:work/fftw-3.3.4/ltmain.sh:  sharedlib_from_linklib_result=`$DLLTOOL --identify-strict --identify "$1"`
fftw-link.txt:work/fftw-3.3.4/ltmain.sh:#    $sharedlib_from_linklib_cmd
fftw-link.txt:work/fftw-3.3.4/ltmain.sh:#    $sharedlib_from_linklib_result
fftw-link.txt:work/fftw-3.3.4/ltmain.sh:    sharedlib_from_linklib_result=`func_cygming_dll_for_implib_fallback_core '.idata$7' "$1"`
fftw-link.txt:work/fftw-3.3.4/ltmain.sh:    sharedlib_from_linklib_result=`func_cygming_dll_for_implib_fallback_core '.idata$6' "$1"`
fftw-link.txt:work/fftw-3.3.4/ltmain.sh:    sharedlib_from_linklib_result=""
fftw-link.txt:work/fftw-3.3.4/ltmain.sh:# func_mode_link because it depends on a number of variables
fftw-link.txt:work/fftw-3.3.4/ltmain.sh:relink_command=\"$relink_command\"
fftw-link.txt:work/fftw-3.3.4/ltmain.sh:  # Follow symbolic links until we get to the real thisdir.
fftw-link.txt:work/fftw-3.3.4/ltmain.sh:    # relink executable if necessary
fftw-link.txt:work/fftw-3.3.4/ltmain.sh:    if test -n \"\$relink_command\"; then
fftw-link.txt:work/fftw-3.3.4/ltmain.sh:      if relink_command_output=\`eval \$relink_command 2>&1\`; then :
fftw-link.txt:work/fftw-3.3.4/ltmain.sh:	$ECHO \"\$relink_command_output\" >&2
fftw-link.txt:work/fftw-3.3.4/ltmain.sh:# Must ONLY be called from within func_mode_link because
fftw-link.txt:work/fftw-3.3.4/ltmain.sh:char *chase_symlinks (const char *pathspec);
fftw-link.txt:work/fftw-3.3.4/ltmain.sh:                  "(main) found exe (before symlink chase) at: %s\n",
fftw-link.txt:work/fftw-3.3.4/ltmain.sh:  actual_cwrapper_path = chase_symlinks (tmp_pathspec);
fftw-link.txt:work/fftw-3.3.4/ltmain.sh:                  "(main) found exe (after symlink chase) at: %s\n",
fftw-link.txt:work/fftw-3.3.4/ltmain.sh:   Does not chase symlinks, even on platforms that support them.
fftw-link.txt:work/fftw-3.3.4/ltmain.sh:chase_symlinks (const char *pathspec)
fftw-link.txt:work/fftw-3.3.4/ltmain.sh:  int has_symlinks = 0;
fftw-link.txt:work/fftw-3.3.4/ltmain.sh:  while (strlen (tmp_pathspec) && !has_symlinks)
fftw-link.txt:work/fftw-3.3.4/ltmain.sh:		      "checking path component for symlinks: %s\n",
fftw-link.txt:work/fftw-3.3.4/ltmain.sh:	      has_symlinks = 1;
fftw-link.txt:work/fftw-3.3.4/ltmain.sh:  if (!has_symlinks)
fftw-link.txt:work/fftw-3.3.4/ltmain.sh:		"could not follow symlinks for %s", pathspec);
fftw-link.txt:work/fftw-3.3.4/ltmain.sh:# func_mode_link arg...
fftw-link.txt:work/fftw-3.3.4/ltmain.sh:func_mode_link ()
fftw-link.txt:work/fftw-3.3.4/ltmain.sh:      # It is impossible to link a dll without this setting, and
fftw-link.txt:work/fftw-3.3.4/ltmain.sh:      # -no-undefined on the libtool link line when we can be certain
fftw-link.txt:work/fftw-3.3.4/ltmain.sh:    linker_flags=
fftw-link.txt:work/fftw-3.3.4/ltmain.sh:    new_inherited_linker_flags=
fftw-link.txt:work/fftw-3.3.4/ltmain.sh:	  if test "$build_libtool_libs" = yes && test -z "$link_static_flag"; then
fftw-link.txt:work/fftw-3.3.4/ltmain.sh:	    func_warning "complete static linking is impossible in this configuration"
fftw-link.txt:work/fftw-3.3.4/ltmain.sh:	  if test -n "$link_static_flag"; then
fftw-link.txt:work/fftw-3.3.4/ltmain.sh:	  if test -z "$pic_flag" && test -n "$link_static_flag"; then
fftw-link.txt:work/fftw-3.3.4/ltmain.sh:	  if test -z "$pic_flag" && test -n "$link_static_flag"; then
fftw-link.txt:work/fftw-3.3.4/ltmain.sh:	    # Add the symbol object into the linking commands.
fftw-link.txt:work/fftw-3.3.4/ltmain.sh:	    func_fatal_error "link input file \`$arg' does not exist"
fftw-link.txt:work/fftw-3.3.4/ltmain.sh:	xcclinker)
fftw-link.txt:work/fftw-3.3.4/ltmain.sh:	  func_append linker_flags " $qarg"
fftw-link.txt:work/fftw-3.3.4/ltmain.sh:	xlinker)
fftw-link.txt:work/fftw-3.3.4/ltmain.sh:	  func_append linker_flags " $qarg"
fftw-link.txt:work/fftw-3.3.4/ltmain.sh:	if test -n "$link_static_flag"; then
fftw-link.txt:work/fftw-3.3.4/ltmain.sh:	  func_append compile_command " $link_static_flag"
fftw-link.txt:work/fftw-3.3.4/ltmain.sh:	  func_append finalize_command " $link_static_flag"
fftw-link.txt:work/fftw-3.3.4/ltmain.sh:      # The native IRIX linker understands -LANG:*, -LIST:* and -LNO:*
fftw-link.txt:work/fftw-3.3.4/ltmain.sh:	case "$new_inherited_linker_flags " in
fftw-link.txt:work/fftw-3.3.4/ltmain.sh:	    * ) func_append new_inherited_linker_flags " $arg" ;;
fftw-link.txt:work/fftw-3.3.4/ltmain.sh:	  func_append linker_flags " $func_quote_for_eval_result"
fftw-link.txt:work/fftw-3.3.4/ltmain.sh:      -Xlinker)
fftw-link.txt:work/fftw-3.3.4/ltmain.sh:	prev=xlinker
fftw-link.txt:work/fftw-3.3.4/ltmain.sh:      -XCClinker)
fftw-link.txt:work/fftw-3.3.4/ltmain.sh:	prev=xcclinker
fftw-link.txt:work/fftw-3.3.4/ltmain.sh:      # -O*, -flto*, -fwhopr*, -fuse-linker-plugin GCC link-time optimization
fftw-link.txt:work/fftw-3.3.4/ltmain.sh:      -O*|-flto*|-fwhopr*|-fuse-linker-plugin)
fftw-link.txt:work/fftw-3.3.4/ltmain.sh:    *.$libext) linkmode=oldlib ;;
fftw-link.txt:work/fftw-3.3.4/ltmain.sh:    *.lo | *.$objext) linkmode=obj ;;
fftw-link.txt:work/fftw-3.3.4/ltmain.sh:    *.la) linkmode=lib ;;
fftw-link.txt:work/fftw-3.3.4/ltmain.sh:    *) linkmode=prog ;; # Anything else should be a program.
fftw-link.txt:work/fftw-3.3.4/ltmain.sh:    # that are linked more than once (e.g. -la -lb -la)
fftw-link.txt:work/fftw-3.3.4/ltmain.sh:    if test "$linkmode" = lib; then
fftw-link.txt:work/fftw-3.3.4/ltmain.sh:    need_relink=no # whether we're linking any uninstalled libtool libraries
fftw-link.txt:work/fftw-3.3.4/ltmain.sh:    case $linkmode in
fftw-link.txt:work/fftw-3.3.4/ltmain.sh:	passes="conv dlpreopen link"
fftw-link.txt:work/fftw-3.3.4/ltmain.sh:	passes="conv scan dlopen dlpreopen link"
fftw-link.txt:work/fftw-3.3.4/ltmain.sh:      if test "$linkmode,$pass" = "lib,link"; then
fftw-link.txt:work/fftw-3.3.4/ltmain.sh:      if test "$linkmode,$pass" = "lib,link" ||
fftw-link.txt:work/fftw-3.3.4/ltmain.sh:	 test "$linkmode,$pass" = "prog,scan"; then
fftw-link.txt:work/fftw-3.3.4/ltmain.sh:      if test "$linkmode" = prog; then
fftw-link.txt:work/fftw-3.3.4/ltmain.sh:	link) libs="$deplibs %DEPLIBS% $dependency_libs" ;;
fftw-link.txt:work/fftw-3.3.4/ltmain.sh:      if test "$linkmode,$pass" = "lib,dlpreopen"; then
fftw-link.txt:work/fftw-3.3.4/ltmain.sh:	  if test "$linkmode,$pass" = "prog,link"; then
fftw-link.txt:work/fftw-3.3.4/ltmain.sh:	    if test "$linkmode" = lib ; then
fftw-link.txt:work/fftw-3.3.4/ltmain.sh:		case "$new_inherited_linker_flags " in
fftw-link.txt:work/fftw-3.3.4/ltmain.sh:		    * ) func_append new_inherited_linker_flags " $deplib" ;;
fftw-link.txt:work/fftw-3.3.4/ltmain.sh:	  if test "$linkmode" != lib && test "$linkmode" != prog; then
fftw-link.txt:work/fftw-3.3.4/ltmain.sh:	  if test "$linkmode" = lib; then
fftw-link.txt:work/fftw-3.3.4/ltmain.sh:	    if test "$linkmode,$pass" = "prog,link"; then
fftw-link.txt:work/fftw-3.3.4/ltmain.sh:	      test "$linkmode" = lib && newdependency_libs="$deplib $newdependency_libs"
fftw-link.txt:work/fftw-3.3.4/ltmain.sh:		    if test "$linkmode,$pass" = "prog,link"; then
fftw-link.txt:work/fftw-3.3.4/ltmain.sh:		      test "$linkmode" = lib && newdependency_libs="$deplib $newdependency_libs"
fftw-link.txt:work/fftw-3.3.4/ltmain.sh:	  if test "$linkmode,$pass" = "prog,link"; then
fftw-link.txt:work/fftw-3.3.4/ltmain.sh:	    if test "$linkmode" = lib ; then
fftw-link.txt:work/fftw-3.3.4/ltmain.sh:		case "$new_inherited_linker_flags " in
fftw-link.txt:work/fftw-3.3.4/ltmain.sh:		    * ) func_append new_inherited_linker_flags " $deplib" ;;
fftw-link.txt:work/fftw-3.3.4/ltmain.sh:	  case $linkmode in
fftw-link.txt:work/fftw-3.3.4/ltmain.sh:	  esac # linkmode
fftw-link.txt:work/fftw-3.3.4/ltmain.sh:	  if test "$pass" = link; then
fftw-link.txt:work/fftw-3.3.4/ltmain.sh:	  case $linkmode in
fftw-link.txt:work/fftw-3.3.4/ltmain.sh:	    # but linking other static libraries is non-portable.
fftw-link.txt:work/fftw-3.3.4/ltmain.sh:		$ECHO "*** Warning: Trying to link with static lib archive $deplib."
fftw-link.txt:work/fftw-3.3.4/ltmain.sh:		echo "*** I have the capability to make that library automatically link in when"
fftw-link.txt:work/fftw-3.3.4/ltmain.sh:		echo "*** you link to this library.  But I can only do this if you have a"
fftw-link.txt:work/fftw-3.3.4/ltmain.sh:	    if test "$pass" != link; then
fftw-link.txt:work/fftw-3.3.4/ltmain.sh:	  esac # linkmode
fftw-link.txt:work/fftw-3.3.4/ltmain.sh:	  elif test "$linkmode" = prog; then
fftw-link.txt:work/fftw-3.3.4/ltmain.sh:	      # If there is no dlopen support or we're linking statically,
fftw-link.txt:work/fftw-3.3.4/ltmain.sh:	inherited_linker_flags=
fftw-link.txt:work/fftw-3.3.4/ltmain.sh:	# it will not redefine variables installed, or shouldnotlink
fftw-link.txt:work/fftw-3.3.4/ltmain.sh:	shouldnotlink=no
fftw-link.txt:work/fftw-3.3.4/ltmain.sh:	if test -n "$inherited_linker_flags"; then
fftw-link.txt:work/fftw-3.3.4/ltmain.sh:	  tmp_inherited_linker_flags=`$ECHO "$inherited_linker_flags" | $SED 's/-framework \([^ $]*\)/\1.ltframework/g'`
fftw-link.txt:work/fftw-3.3.4/ltmain.sh:	  for tmp_inherited_linker_flag in $tmp_inherited_linker_flags; do
fftw-link.txt:work/fftw-3.3.4/ltmain.sh:	    case " $new_inherited_linker_flags " in
fftw-link.txt:work/fftw-3.3.4/ltmain.sh:	      *" $tmp_inherited_linker_flag "*) ;;
fftw-link.txt:work/fftw-3.3.4/ltmain.sh:	      *) func_append new_inherited_linker_flags " $tmp_inherited_linker_flag";;
fftw-link.txt:work/fftw-3.3.4/ltmain.sh:	if test "$linkmode,$pass" = "lib,link" ||
fftw-link.txt:work/fftw-3.3.4/ltmain.sh:	   test "$linkmode,$pass" = "prog,scan" ||
fftw-link.txt:work/fftw-3.3.4/ltmain.sh:	   { test "$linkmode" != prog && test "$linkmode" != lib; }; then
fftw-link.txt:work/fftw-3.3.4/ltmain.sh:	      func_fatal_error "cannot find name of link library for \`$lib'"
fftw-link.txt:work/fftw-3.3.4/ltmain.sh:	  elif test "$linkmode" != prog && test "$linkmode" != lib; then
fftw-link.txt:work/fftw-3.3.4/ltmain.sh:	# Get the name of the library we link against.
fftw-link.txt:work/fftw-3.3.4/ltmain.sh:	linklib=
fftw-link.txt:work/fftw-3.3.4/ltmain.sh:	  linklib=$old_library
fftw-link.txt:work/fftw-3.3.4/ltmain.sh:	    linklib="$l"
fftw-link.txt:work/fftw-3.3.4/ltmain.sh:	if test -z "$linklib"; then
fftw-link.txt:work/fftw-3.3.4/ltmain.sh:	  func_fatal_error "cannot find name of link library for \`$lib'"
fftw-link.txt:work/fftw-3.3.4/ltmain.sh:	    # If there is no dlname, no dlopen support or we're linking
fftw-link.txt:work/fftw-3.3.4/ltmain.sh:	    func_warning "passing it literally to the linker, although it might fail"
fftw-link.txt:work/fftw-3.3.4/ltmain.sh:	  if test ! -f "$lt_sysroot$libdir/$linklib" && test -f "$abs_ladir/$linklib"; then
fftw-link.txt:work/fftw-3.3.4/ltmain.sh:	  if test ! -f "$ladir/$objdir/$linklib" && test -f "$abs_ladir/$linklib"; then
fftw-link.txt:work/fftw-3.3.4/ltmain.sh:	  if test -z "$libdir" && test "$linkmode" = prog; then
fftw-link.txt:work/fftw-3.3.4/ltmain.sh:	      # Linker will automatically link against shared library if both
fftw-link.txt:work/fftw-3.3.4/ltmain.sh:	        func_tr_sh "$dir/$linklib"
fftw-link.txt:work/fftw-3.3.4/ltmain.sh:	        func_append newdlprefiles " $dir/$linklib"
fftw-link.txt:work/fftw-3.3.4/ltmain.sh:	        # that they are being used correctly in the link pass.
fftw-link.txt:work/fftw-3.3.4/ltmain.sh:	      # are required to link).
fftw-link.txt:work/fftw-3.3.4/ltmain.sh:	        # that they are being used correctly in the link pass.
fftw-link.txt:work/fftw-3.3.4/ltmain.sh:	        func_append newdlprefiles " $dir/$linklib"
fftw-link.txt:work/fftw-3.3.4/ltmain.sh:	  if test "$linkmode" = lib; then
fftw-link.txt:work/fftw-3.3.4/ltmain.sh:	  elif test "$linkmode,$pass" = "prog,link"; then
fftw-link.txt:work/fftw-3.3.4/ltmain.sh:	if test "$linkmode" = prog && test "$pass" != link; then
fftw-link.txt:work/fftw-3.3.4/ltmain.sh:	  linkalldeplibs=no
fftw-link.txt:work/fftw-3.3.4/ltmain.sh:	  if test "$link_all_deplibs" != no || test -z "$library_names" ||
fftw-link.txt:work/fftw-3.3.4/ltmain.sh:	    linkalldeplibs=yes
fftw-link.txt:work/fftw-3.3.4/ltmain.sh:	    # Need to link against all dependency_libs?
fftw-link.txt:work/fftw-3.3.4/ltmain.sh:	    if test "$linkalldeplibs" = yes; then
fftw-link.txt:work/fftw-3.3.4/ltmain.sh:	      # or/and link against static libraries
fftw-link.txt:work/fftw-3.3.4/ltmain.sh:	fi # $linkmode = prog...
fftw-link.txt:work/fftw-3.3.4/ltmain.sh:	if test "$linkmode,$pass" = "prog,link"; then
fftw-link.txt:work/fftw-3.3.4/ltmain.sh:	  fi # $linkmode,$pass = prog,link...
fftw-link.txt:work/fftw-3.3.4/ltmain.sh:	link_static=no # Whether the deplib will be linked statically
fftw-link.txt:work/fftw-3.3.4/ltmain.sh:	      # No point in relinking DLLs because paths are not encoded
fftw-link.txt:work/fftw-3.3.4/ltmain.sh:	      need_relink=no
fftw-link.txt:work/fftw-3.3.4/ltmain.sh:	      need_relink=yes
fftw-link.txt:work/fftw-3.3.4/ltmain.sh:	  # Warn about portability, can't link against -module's on some
fftw-link.txt:work/fftw-3.3.4/ltmain.sh:	  if test -z "$dlopenmodule" && test "$shouldnotlink" = yes && test "$pass" = link; then
fftw-link.txt:work/fftw-3.3.4/ltmain.sh:	    if test "$linkmode" = prog; then
fftw-link.txt:work/fftw-3.3.4/ltmain.sh:	    $ECHO "*** $linklib is not portable!"
fftw-link.txt:work/fftw-3.3.4/ltmain.sh:	  if test "$linkmode" = lib &&
fftw-link.txt:work/fftw-3.3.4/ltmain.sh:	    linklib=$newlib
fftw-link.txt:work/fftw-3.3.4/ltmain.sh:	  if test "$linkmode" = prog || test "$opt_mode" != relink; then
fftw-link.txt:work/fftw-3.3.4/ltmain.sh:	    lib_linked=yes
fftw-link.txt:work/fftw-3.3.4/ltmain.sh:		add="$dir/$linklib"
fftw-link.txt:work/fftw-3.3.4/ltmain.sh:		    # link against it, someone is ignoring the earlier warnings
fftw-link.txt:work/fftw-3.3.4/ltmain.sh:			$ECHO "*** Warning: lib $linklib is a module, not a shared library"
fftw-link.txt:work/fftw-3.3.4/ltmain.sh:			  echo "*** The link will probably fail, sorry"
fftw-link.txt:work/fftw-3.3.4/ltmain.sh:		lib_linked=no
fftw-link.txt:work/fftw-3.3.4/ltmain.sh:	    relink)
fftw-link.txt:work/fftw-3.3.4/ltmain.sh:		add="$dir/$linklib"
fftw-link.txt:work/fftw-3.3.4/ltmain.sh:		lib_linked=no
fftw-link.txt:work/fftw-3.3.4/ltmain.sh:	    *) lib_linked=no ;;
fftw-link.txt:work/fftw-3.3.4/ltmain.sh:	    if test "$lib_linked" != yes; then
fftw-link.txt:work/fftw-3.3.4/ltmain.sh:	    if test "$linkmode" = prog; then
fftw-link.txt:work/fftw-3.3.4/ltmain.sh:	  if test "$linkmode" = prog || test "$opt_mode" = relink; then
fftw-link.txt:work/fftw-3.3.4/ltmain.sh:	      add="$libdir/$linklib"
fftw-link.txt:work/fftw-3.3.4/ltmain.sh:		 test -f "$inst_prefix_dir$libdir/$linklib" ; then
fftw-link.txt:work/fftw-3.3.4/ltmain.sh:		add="$inst_prefix_dir$libdir/$linklib"
fftw-link.txt:work/fftw-3.3.4/ltmain.sh:		add="$libdir/$linklib"
fftw-link.txt:work/fftw-3.3.4/ltmain.sh:	    if test "$linkmode" = prog; then
fftw-link.txt:work/fftw-3.3.4/ltmain.sh:	elif test "$linkmode" = prog; then
fftw-link.txt:work/fftw-3.3.4/ltmain.sh:	    test -n "$old_library" && linklib="$old_library"
fftw-link.txt:work/fftw-3.3.4/ltmain.sh:	    compile_deplibs="$dir/$linklib $compile_deplibs"
fftw-link.txt:work/fftw-3.3.4/ltmain.sh:	    finalize_deplibs="$dir/$linklib $finalize_deplibs"
fftw-link.txt:work/fftw-3.3.4/ltmain.sh:	    # We're trying link a shared library against a static one
fftw-link.txt:work/fftw-3.3.4/ltmain.sh:	    # that the program can be linked against the static library.
fftw-link.txt:work/fftw-3.3.4/ltmain.sh:	    $ECHO "*** Warning: This system can not link to static lib archive $lib."
fftw-link.txt:work/fftw-3.3.4/ltmain.sh:	    echo "*** I have the capability to make that library automatically link in when"
fftw-link.txt:work/fftw-3.3.4/ltmain.sh:	    echo "*** you link to this library.  But I can only do this if you have a"
fftw-link.txt:work/fftw-3.3.4/ltmain.sh:	      echo "*** is linked with the -dlopen flag to resolve symbols at runtime."
fftw-link.txt:work/fftw-3.3.4/ltmain.sh:	    link_static=yes
fftw-link.txt:work/fftw-3.3.4/ltmain.sh:	fi # link shared/static library?
fftw-link.txt:work/fftw-3.3.4/ltmain.sh:	if test "$linkmode" = lib; then
fftw-link.txt:work/fftw-3.3.4/ltmain.sh:	       test "$link_static" = yes; }; then
fftw-link.txt:work/fftw-3.3.4/ltmain.sh:	  test "$link_static" = no && newdependency_libs="$abs_ladir/$laname $newdependency_libs"
fftw-link.txt:work/fftw-3.3.4/ltmain.sh:	  if test "$link_all_deplibs" != no; then
fftw-link.txt:work/fftw-3.3.4/ltmain.sh:		      func_append linker_flags " -dylib_file ${darwin_install_name}:${depdepl}"
fftw-link.txt:work/fftw-3.3.4/ltmain.sh:	  fi # link_all_deplibs != no
fftw-link.txt:work/fftw-3.3.4/ltmain.sh:	fi # linkmode = lib
fftw-link.txt:work/fftw-3.3.4/ltmain.sh:      if test "$pass" = link; then
fftw-link.txt:work/fftw-3.3.4/ltmain.sh:	if test "$linkmode" = "prog"; then
fftw-link.txt:work/fftw-3.3.4/ltmain.sh:	  compile_deplibs="$new_inherited_linker_flags $compile_deplibs"
fftw-link.txt:work/fftw-3.3.4/ltmain.sh:	  finalize_deplibs="$new_inherited_linker_flags $finalize_deplibs"
fftw-link.txt:work/fftw-3.3.4/ltmain.sh:	  compiler_flags="$compiler_flags "`$ECHO " $new_inherited_linker_flags" | $SED 's% \([^ $]*\).ltframework% -framework \1%g'`
fftw-link.txt:work/fftw-3.3.4/ltmain.sh:	if test "$linkmode,$pass" != "prog,link"; then
fftw-link.txt:work/fftw-3.3.4/ltmain.sh:	      # is implicitly linked in more than once by the
fftw-link.txt:work/fftw-3.3.4/ltmain.sh:	      # such unportable linking tricks to link the library
fftw-link.txt:work/fftw-3.3.4/ltmain.sh:    if test "$linkmode" = prog; then
fftw-link.txt:work/fftw-3.3.4/ltmain.sh:    if test "$linkmode" = prog || test "$linkmode" = lib; then
fftw-link.txt:work/fftw-3.3.4/ltmain.sh:    case $linkmode in
fftw-link.txt:work/fftw-3.3.4/ltmain.sh:      if test "$opt_mode" != relink; then
fftw-link.txt:work/fftw-3.3.4/ltmain.sh:	    # Don't link with libc until the a.out ld.so is fixed.
fftw-link.txt:work/fftw-3.3.4/ltmain.sh:	# Transform deplibs into only deplibs that can be linked in shared.
fftw-link.txt:work/fftw-3.3.4/ltmain.sh:	  # limits. Maybe even breaks it.  We compile a program, linking it
fftw-link.txt:work/fftw-3.3.4/ltmain.sh:	  # whether they linked in statically or dynamically with ldd.
fftw-link.txt:work/fftw-3.3.4/ltmain.sh:		    $ECHO "*** Warning: dynamic linker does not accept needed library $i."
fftw-link.txt:work/fftw-3.3.4/ltmain.sh:		    echo "*** I have the capability to make that library automatically link in when"
fftw-link.txt:work/fftw-3.3.4/ltmain.sh:		    echo "*** you link to this library.  But I can only do this if you have a"
fftw-link.txt:work/fftw-3.3.4/ltmain.sh:		    echo "*** because a test_compile did reveal that the linker did not use it for"
fftw-link.txt:work/fftw-3.3.4/ltmain.sh:		      $ECHO "*** Warning: dynamic linker does not accept needed library $i."
fftw-link.txt:work/fftw-3.3.4/ltmain.sh:		      echo "*** I have the capability to make that library automatically link in when"
fftw-link.txt:work/fftw-3.3.4/ltmain.sh:		      echo "*** you link to this library.  But I can only do this if you have a"
fftw-link.txt:work/fftw-3.3.4/ltmain.sh:		      echo "*** because a test_compile did reveal that the linker did not use this one"
fftw-link.txt:work/fftw-3.3.4/ltmain.sh:		  echo "*** make it link in!  You will probably need to install it or some"
fftw-link.txt:work/fftw-3.3.4/ltmain.sh:		      # Follow soft links.
fftw-link.txt:work/fftw-3.3.4/ltmain.sh:		      # endless loop below, in case of cyclic links.
fftw-link.txt:work/fftw-3.3.4/ltmain.sh:		      # We might still enter an endless loop, since a link
fftw-link.txt:work/fftw-3.3.4/ltmain.sh:		      # loop can be closed while we follow links,
fftw-link.txt:work/fftw-3.3.4/ltmain.sh:			potliblink=`ls -ld $potlib | ${SED} 's/.* -> //'`
fftw-link.txt:work/fftw-3.3.4/ltmain.sh:			case $potliblink in
fftw-link.txt:work/fftw-3.3.4/ltmain.sh:			[\\/]* | [A-Za-z]:[\\/]*) potlib="$potliblink";;
fftw-link.txt:work/fftw-3.3.4/ltmain.sh:			*) potlib=`$ECHO "$potlib" | $SED 's,[^/]*$,,'`"$potliblink";;
fftw-link.txt:work/fftw-3.3.4/ltmain.sh:		$ECHO "*** Warning: linker path does not have real file for library $a_deplib."
fftw-link.txt:work/fftw-3.3.4/ltmain.sh:		echo "*** I have the capability to make that library automatically link in when"
fftw-link.txt:work/fftw-3.3.4/ltmain.sh:		echo "*** you link to this library.  But I can only do this if you have a"
fftw-link.txt:work/fftw-3.3.4/ltmain.sh:		echo "*** because I did check the linker path looking for a file starting"
fftw-link.txt:work/fftw-3.3.4/ltmain.sh:		    potlib="$potent_lib" # see symlink-check above in file_magic test
fftw-link.txt:work/fftw-3.3.4/ltmain.sh:		$ECHO "*** Warning: linker path does not have real file for library $a_deplib."
fftw-link.txt:work/fftw-3.3.4/ltmain.sh:		echo "*** I have the capability to make that library automatically link in when"
fftw-link.txt:work/fftw-3.3.4/ltmain.sh:		echo "*** you link to this library.  But I can only do this if you have a"
fftw-link.txt:work/fftw-3.3.4/ltmain.sh:		echo "*** because I did check the linker path looking for a file starting"
fftw-link.txt:work/fftw-3.3.4/ltmain.sh:	    echo "*** application is linked with the -dlopen flag."
fftw-link.txt:work/fftw-3.3.4/ltmain.sh:	    echo "*** automatically added whenever a program is linked with this library"
fftw-link.txt:work/fftw-3.3.4/ltmain.sh:	  new_inherited_linker_flags=`$ECHO " $new_inherited_linker_flags" | $SED 's% \([^ $]*\).ltframework% -framework \1%g'`
fftw-link.txt:work/fftw-3.3.4/ltmain.sh:	# Remove ${wl} instances when linking with ld.
fftw-link.txt:work/fftw-3.3.4/ltmain.sh:	  test "$opt_mode" != relink && rpath="$compile_rpath$rpath"
fftw-link.txt:work/fftw-3.3.4/ltmain.sh:	test "$opt_mode" != relink && shlibpath="$compile_shlibpath$shlibpath"
fftw-link.txt:work/fftw-3.3.4/ltmain.sh:	# Get the real and link names of the library.
fftw-link.txt:work/fftw-3.3.4/ltmain.sh:	linknames=
fftw-link.txt:work/fftw-3.3.4/ltmain.sh:	for link
fftw-link.txt:work/fftw-3.3.4/ltmain.sh:	  func_append linknames " $link"
fftw-link.txt:work/fftw-3.3.4/ltmain.sh:	  func_append linker_flags " $flag"
fftw-link.txt:work/fftw-3.3.4/ltmain.sh:	# Make a backup of the uninstalled library when relinking
fftw-link.txt:work/fftw-3.3.4/ltmain.sh:	if test "$opt_mode" = relink; then
fftw-link.txt:work/fftw-3.3.4/ltmain.sh:	  # The command line is too long to link in one step, link piecewise
fftw-link.txt:work/fftw-3.3.4/ltmain.sh:	  # or, if using GNU ld and skipped_export is not :, use a linker
fftw-link.txt:work/fftw-3.3.4/ltmain.sh:	  # assume the linker understands whole_archive_flag_spec.
fftw-link.txt:work/fftw-3.3.4/ltmain.sh:	  # convenience libraries get linked in and end up exceeding
fftw-link.txt:work/fftw-3.3.4/ltmain.sh:	    func_verbose "creating linker input file list: $output"
fftw-link.txt:work/fftw-3.3.4/ltmain.sh:	      # Loop over the list of objects to be linked.
fftw-link.txt:work/fftw-3.3.4/ltmain.sh:		    # All subsequent reloadable object files will link in
fftw-link.txt:work/fftw-3.3.4/ltmain.sh:	      # files will link in the last one created.
fftw-link.txt:work/fftw-3.3.4/ltmain.sh:		if test "$opt_mode" = relink; then
fftw-link.txt:work/fftw-3.3.4/ltmain.sh:	  # Expand the library linking commands again to reset the
fftw-link.txt:work/fftw-3.3.4/ltmain.sh:	  # value of $libobjs for piecewise linking.
fftw-link.txt:work/fftw-3.3.4/ltmain.sh:	    if test "$opt_mode" = relink; then
fftw-link.txt:work/fftw-3.3.4/ltmain.sh:	if test "$opt_mode" = relink; then
fftw-link.txt:work/fftw-3.3.4/ltmain.sh:	# Create links to the real library.
fftw-link.txt:work/fftw-3.3.4/ltmain.sh:	for linkname in $linknames; do
fftw-link.txt:work/fftw-3.3.4/ltmain.sh:	  if test "$realname" != "$linkname"; then
fftw-link.txt:work/fftw-3.3.4/ltmain.sh:	    func_show_eval '(cd "$output_objdir" && $RM "$linkname" && $LN_S "$realname" "$linkname")' 'exit $?'
fftw-link.txt:work/fftw-3.3.4/ltmain.sh:	# accidentally link it into a program.
fftw-link.txt:work/fftw-3.3.4/ltmain.sh:	# Don't allow lazy linking, it breaks C++ global constructors
fftw-link.txt:work/fftw-3.3.4/ltmain.sh:      # template prelinking step
fftw-link.txt:work/fftw-3.3.4/ltmain.sh:      if test -n "$prelink_cmds"; then
fftw-link.txt:work/fftw-3.3.4/ltmain.sh:	func_execute_cmds "$prelink_cmds" 'exit $?'
fftw-link.txt:work/fftw-3.3.4/ltmain.sh:        if test "$need_relink" = no || test "$build_libtool_libs" != yes; then
fftw-link.txt:work/fftw-3.3.4/ltmain.sh:	link_command="$compile_command$compile_rpath"
fftw-link.txt:work/fftw-3.3.4/ltmain.sh:	func_show_eval "$link_command" 'exit_status=$?'
fftw-link.txt:work/fftw-3.3.4/ltmain.sh:	if test -n "$postlink_cmds"; then
fftw-link.txt:work/fftw-3.3.4/ltmain.sh:	  postlink_cmds=`func_echo_all "$postlink_cmds" | $SED -e 's%@OUTPUT@%'"$output"'%g' -e 's%@TOOL_OUTPUT@%'"$func_to_tool_file_result"'%g'`
fftw-link.txt:work/fftw-3.3.4/ltmain.sh:	  func_execute_cmds "$postlink_cmds" 'exit $?'
fftw-link.txt:work/fftw-3.3.4/ltmain.sh:	link_command="$compile_var$compile_command$compile_rpath"
fftw-link.txt:work/fftw-3.3.4/ltmain.sh:	link_command=`$ECHO "$link_command" | $SED 's%@OUTPUT@%'"$output"'%g'`
fftw-link.txt:work/fftw-3.3.4/ltmain.sh:	func_show_eval "$link_command" 'exit $?'
fftw-link.txt:work/fftw-3.3.4/ltmain.sh:	if test -n "$postlink_cmds"; then
fftw-link.txt:work/fftw-3.3.4/ltmain.sh:	  postlink_cmds=`func_echo_all "$postlink_cmds" | $SED -e 's%@OUTPUT@%'"$output"'%g' -e 's%@TOOL_OUTPUT@%'"$func_to_tool_file_result"'%g'`
fftw-link.txt:work/fftw-3.3.4/ltmain.sh:	  func_execute_cmds "$postlink_cmds" 'exit $?'
fftw-link.txt:work/fftw-3.3.4/ltmain.sh:      if test "$hardcode_action" = relink; then
fftw-link.txt:work/fftw-3.3.4/ltmain.sh:	link_command="$compile_var$compile_command$compile_rpath"
fftw-link.txt:work/fftw-3.3.4/ltmain.sh:	relink_command="$finalize_var$finalize_command$finalize_rpath"
fftw-link.txt:work/fftw-3.3.4/ltmain.sh:	func_warning "\`$output' will be relinked during installation"
fftw-link.txt:work/fftw-3.3.4/ltmain.sh:	  link_command="$finalize_var$compile_command$finalize_rpath"
fftw-link.txt:work/fftw-3.3.4/ltmain.sh:	    relink_command=`$ECHO "$compile_var$compile_command$compile_rpath" | $SED 's%@OUTPUT@%\$progdir/\$file%g'`
fftw-link.txt:work/fftw-3.3.4/ltmain.sh:	    relink_command=
fftw-link.txt:work/fftw-3.3.4/ltmain.sh:	  link_command="$compile_var$compile_command$compile_rpath"
fftw-link.txt:work/fftw-3.3.4/ltmain.sh:	  relink_command="$finalize_var$finalize_command$finalize_rpath"
fftw-link.txt:work/fftw-3.3.4/ltmain.sh:      link_command=`$ECHO "$link_command" | $SED 's%@OUTPUT@%'"$output_objdir/$outputname"'%g'`
fftw-link.txt:work/fftw-3.3.4/ltmain.sh:      func_show_eval "$link_command" 'exit $?'
fftw-link.txt:work/fftw-3.3.4/ltmain.sh:      if test -n "$postlink_cmds"; then
fftw-link.txt:work/fftw-3.3.4/ltmain.sh:	postlink_cmds=`func_echo_all "$postlink_cmds" | $SED -e 's%@OUTPUT@%'"$output_objdir/$outputname"'%g' -e 's%@TOOL_OUTPUT@%'"$func_to_tool_file_result"'%g'`
fftw-link.txt:work/fftw-3.3.4/ltmain.sh:	func_execute_cmds "$postlink_cmds" 'exit $?'
fftw-link.txt:work/fftw-3.3.4/ltmain.sh:      # Quote the relink command for shipping.
fftw-link.txt:work/fftw-3.3.4/ltmain.sh:      if test -n "$relink_command"; then
fftw-link.txt:work/fftw-3.3.4/ltmain.sh:	for var in $variables_saved_for_relink; do
fftw-link.txt:work/fftw-3.3.4/ltmain.sh:	    relink_command="{ test -z \"\${$var+set}\" || $lt_unset $var || { $var=; export $var; }; }; $relink_command"
fftw-link.txt:work/fftw-3.3.4/ltmain.sh:	    relink_command="$var=; export $var; $relink_command"
fftw-link.txt:work/fftw-3.3.4/ltmain.sh:	    relink_command="$var=$func_quote_for_eval_result; export $var; $relink_command"
fftw-link.txt:work/fftw-3.3.4/ltmain.sh:	relink_command="(cd `pwd`; $relink_command)"
fftw-link.txt:work/fftw-3.3.4/ltmain.sh:	relink_command=`$ECHO "$relink_command" | $SED "$sed_quote_subst"`
fftw-link.txt:work/fftw-3.3.4/ltmain.sh:	# static archive out of a convenience library, or when linking
fftw-link.txt:work/fftw-3.3.4/ltmain.sh:	  func_verbose "using command file archive linking..."
fftw-link.txt:work/fftw-3.3.4/ltmain.sh:	  # the command line is too long to link in one step, link in parts
fftw-link.txt:work/fftw-3.3.4/ltmain.sh:	  func_verbose "using piecewise archive linking..."
fftw-link.txt:work/fftw-3.3.4/ltmain.sh:      for var in $variables_saved_for_relink; do
fftw-link.txt:work/fftw-3.3.4/ltmain.sh:	  relink_command="{ test -z \"\${$var+set}\" || $lt_unset $var || { $var=; export $var; }; }; $relink_command"
fftw-link.txt:work/fftw-3.3.4/ltmain.sh:	  relink_command="$var=; export $var; $relink_command"
fftw-link.txt:work/fftw-3.3.4/ltmain.sh:	  relink_command="$var=$func_quote_for_eval_result; export $var; $relink_command"
fftw-link.txt:work/fftw-3.3.4/ltmain.sh:      # Quote the link command for shipping.
fftw-link.txt:work/fftw-3.3.4/ltmain.sh:      relink_command="(cd `pwd`; $SHELL $progpath $preserve_args --mode=relink $libtool_args @inst_prefix_dir@)"
fftw-link.txt:work/fftw-3.3.4/ltmain.sh:      relink_command=`$ECHO "$relink_command" | $SED "$sed_quote_subst"`
fftw-link.txt:work/fftw-3.3.4/ltmain.sh:	relink_command=
fftw-link.txt:work/fftw-3.3.4/ltmain.sh:		# eventual linking with the app. that links it) if we
fftw-link.txt:work/fftw-3.3.4/ltmain.sh:		# didn't already link the preopened objects directly into
fftw-link.txt:work/fftw-3.3.4/ltmain.sh:# It is necessary for linking the library.
fftw-link.txt:work/fftw-3.3.4/ltmain.sh:inherited_linker_flags='$new_inherited_linker_flags'
fftw-link.txt:work/fftw-3.3.4/ltmain.sh:# Should we warn about portability when linking against -modules?
fftw-link.txt:work/fftw-3.3.4/ltmain.sh:shouldnotlink=$module
fftw-link.txt:work/fftw-3.3.4/ltmain.sh:	  if test "$installed" = no && test "$need_relink" = yes; then
fftw-link.txt:work/fftw-3.3.4/ltmain.sh:relink_command=\"$relink_command\""
fftw-link.txt:work/fftw-3.3.4/ltmain.sh:      # Do a symbolic link so that the libtool archive can be found in
fftw-link.txt:work/fftw-3.3.4/ltmain.sh:{ test "$opt_mode" = link || test "$opt_mode" = relink; } &&
fftw-link.txt:work/fftw-3.3.4/ltmain.sh:    func_mode_link ${1+"$@"}
fftw-link.txt:work/fftw-3.3.4/ltmain.sh:	  # Delete the libtool libraries and symlinks.
fftw-link.txt:work/fftw-3.3.4/ltmain.sh:	      relink_command=
fftw-link.txt:work/fftw-3.3.4/ltmain.sh:	      relink_command=
fftw-link.txt:work/fftw-3.3.4/ltmain.sh:	    if test "$fast_install" = yes && test -n "$relink_command"; then
fftw-link.txt:work/fftw-3.3.4/m4/acx_mpi.m4:dnl @summary figure out how to compile/link code with MPI
fftw-link.txt:work/fftw-3.3.4/m4/acx_mpi.m4:dnl needed for linking MPI (e.g. -lmpi, if a special MPICC/MPICXX/MPIF77
fftw-link.txt:work/fftw-3.3.4/m4/acx_mpi.m4:dnl       for linking as well as for compiling.  (This is the
fftw-link.txt:work/fftw-3.3.4/m4/acx_pthread.m4:dnl library and linker flags, and the PTHREAD_CFLAGS output variable
fftw-link.txt:work/fftw-3.3.4/m4/acx_pthread.m4:dnl flags, but also link it with them as well.  e.g. you should link
fftw-link.txt:work/fftw-3.3.4/m4/acx_pthread.m4:# It gets checked for in the link test anyway.
fftw-link.txt:work/fftw-3.3.4/m4/acx_pthread.m4:# etcetera environment variables, and if threads linking works using
fftw-link.txt:work/fftw-3.3.4/m4/acx_pthread.m4:# -mt: Sun Workshop C (may only link SunOS threads [-lthread], but it
fftw-link.txt:work/fftw-3.3.4/m4/acx_pthread.m4:        # (non-functional) versions of the pthreads routines, so link-based
fftw-link.txt:work/fftw-3.3.4/m4/acx_pthread.m4:        # tests will erroneously succeed.  (We need to link with -pthreads/-mt/
fftw-link.txt:work/fftw-3.3.4/m4/ax_openmp.m4:dnl output variable to the flag (e.g. -omp) used both to compile *and* link
fftw-link.txt:work/fftw-3.3.4/m4/ax_openmp.m4:dnl flags, but also link it with them as well.
fftw-link.txt:work/fftw-3.3.4/m4/libtool.m4:_LT_DECL([], [LN_S], [1], [Whether we need soft or hard links])dnl
fftw-link.txt:work/fftw-3.3.4/m4/libtool.m4:# All known linkers require a `.a' archive for static linking (except MSVC,
fftw-link.txt:work/fftw-3.3.4/m4/libtool.m4:# Check for linker boilerplate output or warnings with
fftw-link.txt:work/fftw-3.3.4/m4/libtool.m4:# the simple link test code.
fftw-link.txt:work/fftw-3.3.4/m4/libtool.m4:echo "$lt_simple_link_test_code" >conftest.$ac_ext
fftw-link.txt:work/fftw-3.3.4/m4/libtool.m4:eval "$ac_link" 2>&1 >/dev/null | $SED '/^$/d; /^ *+/d' >conftest.err
fftw-link.txt:work/fftw-3.3.4/m4/libtool.m4:_lt_linker_boilerplate=`cat conftest.err`
fftw-link.txt:work/fftw-3.3.4/m4/libtool.m4:    AC_CACHE_CHECK([for -single_module linker flag],[lt_cv_apple_cc_single_mod],
fftw-link.txt:work/fftw-3.3.4/m4/libtool.m4:	# link flags.
fftw-link.txt:work/fftw-3.3.4/m4/libtool.m4:	# appears in it, assume the flag caused a linker warning
fftw-link.txt:work/fftw-3.3.4/m4/libtool.m4:    AC_CACHE_CHECK([for -exported_symbols_list linker flag],
fftw-link.txt:work/fftw-3.3.4/m4/libtool.m4:    AC_CACHE_CHECK([for -force_load linker flag],[lt_cv_ld_force_load],
fftw-link.txt:work/fftw-3.3.4/m4/libtool.m4:# Checks for linker and compiler features on darwin
fftw-link.txt:work/fftw-3.3.4/m4/libtool.m4:  _LT_TAGVAR(link_all_deplibs, $1)=yes
fftw-link.txt:work/fftw-3.3.4/m4/libtool.m4:    output_verbose_link_cmd=func_echo_all
fftw-link.txt:work/fftw-3.3.4/m4/libtool.m4:# Some flags need to be propagated to the compiler or linker for good
fftw-link.txt:work/fftw-3.3.4/m4/libtool.m4:# Check whether the given linker option works
fftw-link.txt:work/fftw-3.3.4/m4/libtool.m4:   echo "$lt_simple_link_test_code" > conftest.$ac_ext
fftw-link.txt:work/fftw-3.3.4/m4/libtool.m4:   if (eval $ac_link 2>conftest.err) && test -s conftest$ac_exeext; then
fftw-link.txt:work/fftw-3.3.4/m4/libtool.m4:     # The linker can only warn and ignore the option if not recognized
fftw-link.txt:work/fftw-3.3.4/m4/libtool.m4:       $ECHO "$_lt_linker_boilerplate" | $SED '/^$/d' > conftest.exp
fftw-link.txt:work/fftw-3.3.4/m4/libtool.m4:      # linker.  It appears as though 1/2 is a usable value.
fftw-link.txt:work/fftw-3.3.4/m4/libtool.m4:  if AC_TRY_EVAL(ac_link) && test -s conftest${ac_exeext} 2>/dev/null; then
fftw-link.txt:work/fftw-3.3.4/m4/libtool.m4:  # if libdl is installed we need to link against it
fftw-link.txt:work/fftw-3.3.4/m4/libtool.m4:	      [AC_CHECK_LIB([dld], [dld_link],
fftw-link.txt:work/fftw-3.3.4/m4/libtool.m4:		    [lt_cv_dlopen="dld_link" lt_cv_dlopen_libs="-ldld"])
fftw-link.txt:work/fftw-3.3.4/m4/libtool.m4:      AC_CACHE_CHECK([whether a statically linked program can dlopen itself],
fftw-link.txt:work/fftw-3.3.4/m4/libtool.m4:	 [Whether dlopen of statically linked programs is supported])
fftw-link.txt:work/fftw-3.3.4/m4/libtool.m4:# Check to see if we can do hard links to lock some files if needed
fftw-link.txt:work/fftw-3.3.4/m4/libtool.m4:hard_links="nottested"
fftw-link.txt:work/fftw-3.3.4/m4/libtool.m4:  AC_MSG_CHECKING([if we can lock with hard links])
fftw-link.txt:work/fftw-3.3.4/m4/libtool.m4:  hard_links=yes
fftw-link.txt:work/fftw-3.3.4/m4/libtool.m4:  ln conftest.a conftest.b 2>/dev/null && hard_links=no
fftw-link.txt:work/fftw-3.3.4/m4/libtool.m4:  ln conftest.a conftest.b 2>&5 || hard_links=no
fftw-link.txt:work/fftw-3.3.4/m4/libtool.m4:  ln conftest.a conftest.b 2>/dev/null && hard_links=no
fftw-link.txt:work/fftw-3.3.4/m4/libtool.m4:  AC_MSG_RESULT([$hard_links])
fftw-link.txt:work/fftw-3.3.4/m4/libtool.m4:  if test "$hard_links" = no; then
fftw-link.txt:work/fftw-3.3.4/m4/libtool.m4:     # have to relink, otherwise we might link with an installed library
fftw-link.txt:work/fftw-3.3.4/m4/libtool.m4:     # when we should be linking with a yet-to-be-installed one
fftw-link.txt:work/fftw-3.3.4/m4/libtool.m4:    _LT_TAGVAR(hardcode_action, $1)=relink
fftw-link.txt:work/fftw-3.3.4/m4/libtool.m4:    # We can link without hardcoding, and we can hardcode nonexisting dirs.
fftw-link.txt:work/fftw-3.3.4/m4/libtool.m4:if test "$_LT_TAGVAR(hardcode_action, $1)" = relink ||
fftw-link.txt:work/fftw-3.3.4/m4/libtool.m4:AC_MSG_CHECKING([dynamic linker characteristics])
fftw-link.txt:work/fftw-3.3.4/m4/libtool.m4:dynamic_linker="$host_os ld.so"
fftw-link.txt:work/fftw-3.3.4/m4/libtool.m4:    # collect2, so additional links can be useful in future.
fftw-link.txt:work/fftw-3.3.4/m4/libtool.m4:    if test "$aix_use_runtimelinking" = yes; then
fftw-link.txt:work/fftw-3.3.4/m4/libtool.m4:      # If using run time linking (on AIX 4.2 or later) use lib<name>.so
fftw-link.txt:work/fftw-3.3.4/m4/libtool.m4:      # and later when we are not doing run time linking.
fftw-link.txt:work/fftw-3.3.4/m4/libtool.m4:  dynamic_linker="$host_os ld.so"
fftw-link.txt:work/fftw-3.3.4/m4/libtool.m4:  # /usr/X11R6/lib (/usr/X11 is a link to /usr/X11R6), but let us allow
fftw-link.txt:work/fftw-3.3.4/m4/libtool.m4:    dynamic_linker='Win32 ld.exe'
fftw-link.txt:work/fftw-3.3.4/m4/libtool.m4:    dynamic_linker='Win32 link.exe'
fftw-link.txt:work/fftw-3.3.4/m4/libtool.m4:    dynamic_linker='Win32 ld.exe'
fftw-link.txt:work/fftw-3.3.4/m4/libtool.m4:  dynamic_linker="$host_os dyld"
fftw-link.txt:work/fftw-3.3.4/m4/libtool.m4:  dynamic_linker="$host_os runtime_loader"
fftw-link.txt:work/fftw-3.3.4/m4/libtool.m4:  # link against other versions.
fftw-link.txt:work/fftw-3.3.4/m4/libtool.m4:    dynamic_linker="$host_os dld.so"
fftw-link.txt:work/fftw-3.3.4/m4/libtool.m4:    dynamic_linker="$host_os dld.sl"
fftw-link.txt:work/fftw-3.3.4/m4/libtool.m4:    dynamic_linker="$host_os dld.sl"
fftw-link.txt:work/fftw-3.3.4/m4/libtool.m4:  dynamic_linker='Interix 3.x ld.so.1 (PE, like ELF)'
fftw-link.txt:work/fftw-3.3.4/m4/libtool.m4:  dynamic_linker=no
fftw-link.txt:work/fftw-3.3.4/m4/libtool.m4:  # GNU dynamic linker.  Since this was broken with cross compilers,
fftw-link.txt:work/fftw-3.3.4/m4/libtool.m4:  # most powerpc-linux boxes support dynamic linking these days and
fftw-link.txt:work/fftw-3.3.4/m4/libtool.m4:  # assume the GNU/Linux dynamic linker is in use.
fftw-link.txt:work/fftw-3.3.4/m4/libtool.m4:  dynamic_linker='GNU/Linux ld.so'
fftw-link.txt:work/fftw-3.3.4/m4/libtool.m4:    dynamic_linker='NetBSD (a.out) ld.so'
fftw-link.txt:work/fftw-3.3.4/m4/libtool.m4:    dynamic_linker='NetBSD ld.elf_so'
fftw-link.txt:work/fftw-3.3.4/m4/libtool.m4:  dynamic_linker='ldqnx.so'
fftw-link.txt:work/fftw-3.3.4/m4/libtool.m4:  dynamic_linker='OS/2 ld.exe'
fftw-link.txt:work/fftw-3.3.4/m4/libtool.m4:  dynamic_linker=no
fftw-link.txt:work/fftw-3.3.4/m4/libtool.m4:  dynamic_linker=no
fftw-link.txt:work/fftw-3.3.4/m4/libtool.m4:AC_MSG_RESULT([$dynamic_linker])
fftw-link.txt:work/fftw-3.3.4/m4/libtool.m4:test "$dynamic_linker" = no && can_build_shared=no
fftw-link.txt:work/fftw-3.3.4/m4/libtool.m4:variables_saved_for_relink="PATH $shlibpath_var $runpath_var"
fftw-link.txt:work/fftw-3.3.4/m4/libtool.m4:  variables_saved_for_relink="$variables_saved_for_relink GCC_EXEC_PREFIX COMPILER_PATH LIBRARY_PATH"
fftw-link.txt:work/fftw-3.3.4/m4/libtool.m4:_LT_DECL([], [variables_saved_for_relink], [1],
fftw-link.txt:work/fftw-3.3.4/m4/libtool.m4:    restored at link time])
fftw-link.txt:work/fftw-3.3.4/m4/libtool.m4:    [[List of archive names.  First name is the real one, the rest are links.
fftw-link.txt:work/fftw-3.3.4/m4/libtool.m4:    The last name is the one that the linker finds with -lNAME]])
fftw-link.txt:work/fftw-3.3.4/m4/libtool.m4:*** depend on shared libraries, but programs linked with such libtool
fftw-link.txt:work/fftw-3.3.4/m4/libtool.m4:# find the pathname to the GNU or non-GNU linker
fftw-link.txt:work/fftw-3.3.4/m4/libtool.m4:_LT_TAGDECL([], [LD], [1], [The linker used to build libraries])
fftw-link.txt:work/fftw-3.3.4/m4/libtool.m4:[AC_CACHE_CHECK([if the linker ($LD) is GNU ld], lt_cv_prog_gnu_ld,
fftw-link.txt:work/fftw-3.3.4/m4/libtool.m4:# find reload flag for linker
fftw-link.txt:work/fftw-3.3.4/m4/libtool.m4:#   -- PORTME Some linkers may need a different reload flag.
fftw-link.txt:work/fftw-3.3.4/m4/libtool.m4:    AC_CHECK_TOOLS(DUMPBIN, [dumpbin "link -dump"], :)
fftw-link.txt:work/fftw-3.3.4/m4/libtool.m4:# associated with a specific link library.
fftw-link.txt:work/fftw-3.3.4/m4/libtool.m4:AC_CACHE_CHECK([how to associate runtime and link libraries],
fftw-link.txt:work/fftw-3.3.4/m4/libtool.m4:lt_cv_sharedlib_from_linklib_cmd,
fftw-link.txt:work/fftw-3.3.4/m4/libtool.m4:[lt_cv_sharedlib_from_linklib_cmd='unknown'
fftw-link.txt:work/fftw-3.3.4/m4/libtool.m4:    lt_cv_sharedlib_from_linklib_cmd=func_cygming_dll_for_implib
fftw-link.txt:work/fftw-3.3.4/m4/libtool.m4:    lt_cv_sharedlib_from_linklib_cmd=func_cygming_dll_for_implib_fallback
fftw-link.txt:work/fftw-3.3.4/m4/libtool.m4:  # fallback: assume linklib IS sharedlib
fftw-link.txt:work/fftw-3.3.4/m4/libtool.m4:  lt_cv_sharedlib_from_linklib_cmd="$ECHO"
fftw-link.txt:work/fftw-3.3.4/m4/libtool.m4:sharedlib_from_linklib_cmd=$lt_cv_sharedlib_from_linklib_cmd
fftw-link.txt:work/fftw-3.3.4/m4/libtool.m4:test -z "$sharedlib_from_linklib_cmd" && sharedlib_from_linklib_cmd=$ECHO
fftw-link.txt:work/fftw-3.3.4/m4/libtool.m4:_LT_DECL([], [sharedlib_from_linklib_cmd], [1],
fftw-link.txt:work/fftw-3.3.4/m4/libtool.m4:    [Command to associate shared and link libraries])
fftw-link.txt:work/fftw-3.3.4/m4/libtool.m4:# Some systems (esp. on ia64) link data and code symbols differently,
fftw-link.txt:work/fftw-3.3.4/m4/libtool.m4:/* This works around a problem in FreeBSD linker */
fftw-link.txt:work/fftw-3.3.4/m4/libtool.m4:	  # Now try linking the two files.
fftw-link.txt:work/fftw-3.3.4/m4/libtool.m4:	  if AC_TRY_EVAL(ac_link) && test -s conftest${ac_exeext}; then
fftw-link.txt:work/fftw-3.3.4/m4/libtool.m4:	    _LT_TAGVAR(lt_prog_compiler_static, $1)='-qstaticlink'
fftw-link.txt:work/fftw-3.3.4/m4/libtool.m4:      _LT_TAGVAR(lt_prog_compiler_wl, $1)='-Xlinker '
fftw-link.txt:work/fftw-3.3.4/m4/libtool.m4:    # PORTME Check for flag to pass linker flags through the system compiler.
fftw-link.txt:work/fftw-3.3.4/m4/libtool.m4:	_LT_TAGVAR(lt_prog_compiler_static, $1)='-qstaticlink'
fftw-link.txt:work/fftw-3.3.4/m4/libtool.m4:	  # Sun Fortran 8.3 passes all unrecognized flags to the linker
fftw-link.txt:work/fftw-3.3.4/m4/libtool.m4:	[How to pass a linker flag through the compiler])
fftw-link.txt:work/fftw-3.3.4/m4/libtool.m4:_LT_TAGDECL([link_static_flag], [lt_prog_compiler_static], [1],
fftw-link.txt:work/fftw-3.3.4/m4/libtool.m4:	[Compiler flag to prevent dynamic linking])
fftw-link.txt:work/fftw-3.3.4/m4/libtool.m4:# See if the linker supports building shared libraries.
fftw-link.txt:work/fftw-3.3.4/m4/libtool.m4:AC_MSG_CHECKING([whether the $compiler linker ($LD) supports shared libraries])
fftw-link.txt:work/fftw-3.3.4/m4/libtool.m4:  _LT_TAGVAR(link_all_deplibs, $1)=unknown
fftw-link.txt:work/fftw-3.3.4/m4/libtool.m4:  # platforms (ab)use it in PIC code, but their linkers get confused if
fftw-link.txt:work/fftw-3.3.4/m4/libtool.m4:  # On some targets, GNU ld is compatible enough with the native linker
fftw-link.txt:work/fftw-3.3.4/m4/libtool.m4:	# with the native linker.  However, as the warning in the GNU ld
fftw-link.txt:work/fftw-3.3.4/m4/libtool.m4:      # On AIX/PPC, the GNU linker is very broken
fftw-link.txt:work/fftw-3.3.4/m4/libtool.m4:*** Warning: the GNU linker, at least up to release 2.19, is reported
fftw-link.txt:work/fftw-3.3.4/m4/libtool.m4:*** 2.20 or above, or modify your PATH so that a non-GNU linker is found.
fftw-link.txt:work/fftw-3.3.4/m4/libtool.m4:        _LT_TAGVAR(archive_cmds, $1)='$CC -shared $libobjs $deplibs $compiler_flags -o $output_objdir/$soname ${wl}--enable-auto-image-base -Xlinker --out-implib -Xlinker $lib'
fftw-link.txt:work/fftw-3.3.4/m4/libtool.m4:	$CC -shared $output_objdir/$soname.def $libobjs $deplibs $compiler_flags -o $output_objdir/$soname ${wl}--enable-auto-image-base -Xlinker --out-implib -Xlinker $lib'
fftw-link.txt:work/fftw-3.3.4/m4/libtool.m4:      _LT_TAGVAR(link_all_deplibs, $1)=yes
fftw-link.txt:work/fftw-3.3.4/m4/libtool.m4:      # 256 KiB-aligned image base between 0x50000000 and 0x6FFC0000 at link
fftw-link.txt:work/fftw-3.3.4/m4/libtool.m4:	  diet\ *) tmp_diet=yes;;	# linux-dietlibc with static linking (!diet-dyn)
fftw-link.txt:work/fftw-3.3.4/m4/libtool.m4:	  _LT_TAGVAR(archive_cmds, $1)='$LD -shared $libobjs $deplibs $linker_flags -soname $soname -o $lib'
fftw-link.txt:work/fftw-3.3.4/m4/libtool.m4:	      $LD -shared $libobjs $deplibs $linker_flags -soname $soname -version-script $output_objdir/$libname.ver -o $lib'
fftw-link.txt:work/fftw-3.3.4/m4/libtool.m4:	_LT_TAGVAR(archive_cmds, $1)='$LD -Bshareable $libobjs $deplibs $linker_flags -o $lib'
fftw-link.txt:work/fftw-3.3.4/m4/libtool.m4:*** Warning: The releases 2.8.* of the GNU linker cannot reliably
fftw-link.txt:work/fftw-3.3.4/m4/libtool.m4:*** your PATH or compiler configuration so that the native linker is
fftw-link.txt:work/fftw-3.3.4/m4/libtool.m4:*** Warning: Releases of the GNU linker prior to 2.16.91.0.3 can not
fftw-link.txt:work/fftw-3.3.4/m4/libtool.m4:*** your PATH or compiler configuration so that the native linker is
fftw-link.txt:work/fftw-3.3.4/m4/libtool.m4:      _LT_TAGVAR(archive_cmds, $1)='$LD -assert pure-text -Bshareable -o $lib $libobjs $deplibs $linker_flags'
fftw-link.txt:work/fftw-3.3.4/m4/libtool.m4:    # PORTME fill in a description of your system's linker (not GNU ld)
fftw-link.txt:work/fftw-3.3.4/m4/libtool.m4:      _LT_TAGVAR(archive_expsym_cmds, $1)='$LD -o $output_objdir/$soname $libobjs $deplibs $linker_flags -bE:$export_symbols -T512 -H512 -bM:SRE~$AR $AR_FLAGS $lib $output_objdir/$soname'
fftw-link.txt:work/fftw-3.3.4/m4/libtool.m4:      # Note: this linker hardcodes the directories in LIBPATH if there
fftw-link.txt:work/fftw-3.3.4/m4/libtool.m4:	# Neither direct hardcoding nor static linking is supported with a
fftw-link.txt:work/fftw-3.3.4/m4/libtool.m4:	# On IA64, the linker does run time linking by default, so we don't
fftw-link.txt:work/fftw-3.3.4/m4/libtool.m4:	aix_use_runtimelinking=no
fftw-link.txt:work/fftw-3.3.4/m4/libtool.m4:	aix_use_runtimelinking=no
fftw-link.txt:work/fftw-3.3.4/m4/libtool.m4:	# Test if we are trying to use run time linking or normal
fftw-link.txt:work/fftw-3.3.4/m4/libtool.m4:	# AIX style linking. If -brtl is somewhere in LDFLAGS, we
fftw-link.txt:work/fftw-3.3.4/m4/libtool.m4:	# need to do runtime linking.
fftw-link.txt:work/fftw-3.3.4/m4/libtool.m4:	    aix_use_runtimelinking=yes
fftw-link.txt:work/fftw-3.3.4/m4/libtool.m4:      # have problems creating the table of contents.  If linking a library
fftw-link.txt:work/fftw-3.3.4/m4/libtool.m4:      _LT_TAGVAR(link_all_deplibs, $1)=yes
fftw-link.txt:work/fftw-3.3.4/m4/libtool.m4:	  # to unsupported forces relinking
fftw-link.txt:work/fftw-3.3.4/m4/libtool.m4:	if test "$aix_use_runtimelinking" = yes; then
fftw-link.txt:work/fftw-3.3.4/m4/libtool.m4:	  if test "$aix_use_runtimelinking" = yes; then
fftw-link.txt:work/fftw-3.3.4/m4/libtool.m4:      if test "$aix_use_runtimelinking" = yes; then
fftw-link.txt:work/fftw-3.3.4/m4/libtool.m4:	# -berok will link without error, but may produce a broken library.
fftw-link.txt:work/fftw-3.3.4/m4/libtool.m4:	  # -berok will link without error, but may produce a broken library.
fftw-link.txt:work/fftw-3.3.4/m4/libtool.m4:	# FIXME: Setting linknames here is a bad hack.
fftw-link.txt:work/fftw-3.3.4/m4/libtool.m4:	_LT_TAGVAR(archive_cmds, $1)='$CC -o $output_objdir/$soname $libobjs $compiler_flags $deplibs -Wl,-dll~linknames='
fftw-link.txt:work/fftw-3.3.4/m4/libtool.m4:	    sed -n -e 's/\\\\\\\(.*\\\\\\\)/-link\\\ -EXPORT:\\\\\\\1/' -e '1\\\!p' < $export_symbols > $output_objdir/$soname.exp;
fftw-link.txt:work/fftw-3.3.4/m4/libtool.m4:	    sed -e 's/\\\\\\\(.*\\\\\\\)/-link\\\ -EXPORT:\\\\\\\1/' < $export_symbols > $output_objdir/$soname.exp;
fftw-link.txt:work/fftw-3.3.4/m4/libtool.m4:	  linknames='
fftw-link.txt:work/fftw-3.3.4/m4/libtool.m4:	# The linker will not automatically build a static lib if we build a DLL.
fftw-link.txt:work/fftw-3.3.4/m4/libtool.m4:	_LT_TAGVAR(postlink_cmds, $1)='lt_outputfile="@OUTPUT@"~
fftw-link.txt:work/fftw-3.3.4/m4/libtool.m4:	# FIXME: Setting linknames here is a bad hack.
fftw-link.txt:work/fftw-3.3.4/m4/libtool.m4:	_LT_TAGVAR(archive_cmds, $1)='$CC -o $lib $libobjs $compiler_flags `func_echo_all "$deplibs" | $SED '\''s/ -lc$//'\''` -link -dll~linknames='
fftw-link.txt:work/fftw-3.3.4/m4/libtool.m4:	# The linker will automatically build a .lib file if we build a DLL.
fftw-link.txt:work/fftw-3.3.4/m4/libtool.m4:      _LT_TAGVAR(archive_cmds, $1)='$LD -G -h $soname -o $lib $libobjs $deplibs $linker_flags'
fftw-link.txt:work/fftw-3.3.4/m4/libtool.m4:      _LT_TAGVAR(archive_cmds, $1)='$LD -Bshareable -o $lib $libobjs $deplibs $linker_flags /usr/lib/c++rt0.o'
fftw-link.txt:work/fftw-3.3.4/m4/libtool.m4:      _LT_TAGVAR(archive_cmds, $1)='$LD -Bshareable -o $lib $libobjs $deplibs $linker_flags'
fftw-link.txt:work/fftw-3.3.4/m4/libtool.m4:	_LT_TAGVAR(archive_cmds, $1)='$RM $output_objdir/$soname~$LD -b +b $install_libdir -o $output_objdir/$soname $libobjs $deplibs $linker_flags~test $output_objdir/$soname = $lib || mv $output_objdir/$soname $lib'
fftw-link.txt:work/fftw-3.3.4/m4/libtool.m4:	_LT_TAGVAR(archive_cmds, $1)='$LD -b +h $soname +b $install_libdir -o $lib $libobjs $deplibs $linker_flags'
fftw-link.txt:work/fftw-3.3.4/m4/libtool.m4:	    [_LT_TAGVAR(archive_cmds, $1)='$LD -b +h $soname +b $install_libdir -o $lib $libobjs $deplibs $linker_flags'])],
fftw-link.txt:work/fftw-3.3.4/m4/libtool.m4:	AC_CACHE_CHECK([whether the $host_os linker accepts -exported_symbol],
fftw-link.txt:work/fftw-3.3.4/m4/libtool.m4:      _LT_TAGVAR(link_all_deplibs, $1)=yes
fftw-link.txt:work/fftw-3.3.4/m4/libtool.m4:	_LT_TAGVAR(archive_cmds, $1)='$LD -Bshareable -o $lib $libobjs $deplibs $linker_flags'  # a.out
fftw-link.txt:work/fftw-3.3.4/m4/libtool.m4:	_LT_TAGVAR(archive_cmds, $1)='$LD -shared -o $lib $libobjs $deplibs $linker_flags'      # ELF
fftw-link.txt:work/fftw-3.3.4/m4/libtool.m4:      _LT_TAGVAR(archive_cmds, $1)='$LD -G -h $soname -o $lib $libobjs $deplibs $linker_flags'
fftw-link.txt:work/fftw-3.3.4/m4/libtool.m4:	     _LT_TAGVAR(archive_cmds, $1)='$LD -Bshareable -o $lib $libobjs $deplibs $linker_flags'
fftw-link.txt:work/fftw-3.3.4/m4/libtool.m4:	  _LT_TAGVAR(archive_cmds, $1)='$LD -G${allow_undefined_flag} -h $soname -o $lib $libobjs $deplibs $linker_flags'
fftw-link.txt:work/fftw-3.3.4/m4/libtool.m4:	  $LD -G${allow_undefined_flag} -M $lib.exp -h $soname -o $lib $libobjs $deplibs $linker_flags~$RM $lib.exp'
fftw-link.txt:work/fftw-3.3.4/m4/libtool.m4:	# The compiler driver will combine and reorder linker options,
fftw-link.txt:work/fftw-3.3.4/m4/libtool.m4:	# but understands `-z linker_flag'.  GCC discards it without `$wl',
fftw-link.txt:work/fftw-3.3.4/m4/libtool.m4:      _LT_TAGVAR(link_all_deplibs, $1)=yes
fftw-link.txt:work/fftw-3.3.4/m4/libtool.m4:	# Use $CC to link under sequent, because it throws in some extra .o
fftw-link.txt:work/fftw-3.3.4/m4/libtool.m4:	_LT_TAGVAR(archive_cmds, $1)='$LD -assert pure-text -Bstatic -o $lib $libobjs $deplibs $linker_flags'
fftw-link.txt:work/fftw-3.3.4/m4/libtool.m4:	  _LT_TAGVAR(archive_cmds, $1)='$LD -G -h $soname -o $lib $libobjs $deplibs $linker_flags'
fftw-link.txt:work/fftw-3.3.4/m4/libtool.m4:	  _LT_TAGVAR(archive_cmds, $1)='$LD -G -o $lib $libobjs $deplibs $linker_flags'
fftw-link.txt:work/fftw-3.3.4/m4/libtool.m4:	  _LT_TAGVAR(archive_cmds, $1)='$LD -G -h $soname -o $lib $libobjs $deplibs $linker_flags'
fftw-link.txt:work/fftw-3.3.4/m4/libtool.m4:      _LT_TAGVAR(archive_cmds, $1)='$LD -G -h $soname -o $lib $libobjs $deplibs $linker_flags'
fftw-link.txt:work/fftw-3.3.4/m4/libtool.m4:	_LT_TAGVAR(archive_cmds, $1)='$LD -G -h $soname -o $lib $libobjs $deplibs $linker_flags'
fftw-link.txt:work/fftw-3.3.4/m4/libtool.m4:      # link with -lc, and that would cause any symbols used from libc to
fftw-link.txt:work/fftw-3.3.4/m4/libtool.m4:      # ever link correctly.  If we're not using GNU ld we use -z text
fftw-link.txt:work/fftw-3.3.4/m4/libtool.m4:      _LT_TAGVAR(link_all_deplibs, $1)=yes
fftw-link.txt:work/fftw-3.3.4/m4/libtool.m4:      _LT_TAGVAR(archive_cmds, $1)='$LD -G -h $soname -o $lib $libobjs $deplibs $linker_flags'
fftw-link.txt:work/fftw-3.3.4/m4/libtool.m4:# Do we need to explicitly link libc?
fftw-link.txt:work/fftw-3.3.4/m4/libtool.m4:      # Test whether the compiler implicitly links with -lc since on some
fftw-link.txt:work/fftw-3.3.4/m4/libtool.m4:      AC_CACHE_CHECK([whether -lc should be explicitly linked in],
fftw-link.txt:work/fftw-3.3.4/m4/libtool.m4:	  linker_flags=-v
fftw-link.txt:work/fftw-3.3.4/m4/libtool.m4:    [Create a temporary old-style archive to link instead of a shared archive])
fftw-link.txt:work/fftw-3.3.4/m4/libtool.m4:    [Flag to hardcode $libdir into a binary during linking.
fftw-link.txt:work/fftw-3.3.4/m4/libtool.m4:    [Set to "yes" if using DIR/libNAME${shared_ext} during linking hardcodes
fftw-link.txt:work/fftw-3.3.4/m4/libtool.m4:    [Set to "yes" if using DIR/libNAME${shared_ext} during linking hardcodes
fftw-link.txt:work/fftw-3.3.4/m4/libtool.m4:    [Set to "yes" if using the -LDIR flag during linking hardcodes DIR
fftw-link.txt:work/fftw-3.3.4/m4/libtool.m4:    [Set to "yes" if using SHLIBPATH_VAR=DIR during linking hardcodes DIR
fftw-link.txt:work/fftw-3.3.4/m4/libtool.m4:    into the library and all subsequent libraries and executables linked
fftw-link.txt:work/fftw-3.3.4/m4/libtool.m4:    [Set to yes if linker adds runtime paths of dependent libraries
fftw-link.txt:work/fftw-3.3.4/m4/libtool.m4:_LT_TAGDECL([], [link_all_deplibs], [0],
fftw-link.txt:work/fftw-3.3.4/m4/libtool.m4:    [Whether libtool must link a program against all its dependency libraries])
fftw-link.txt:work/fftw-3.3.4/m4/libtool.m4:_LT_TAGDECL([], [prelink_cmds], [2],
fftw-link.txt:work/fftw-3.3.4/m4/libtool.m4:    [Commands necessary for linking programs (against libraries) with templates])
fftw-link.txt:work/fftw-3.3.4/m4/libtool.m4:_LT_TAGDECL([], [postlink_cmds], [2],
fftw-link.txt:work/fftw-3.3.4/m4/libtool.m4:    [Commands necessary for finishing linking programs])
fftw-link.txt:work/fftw-3.3.4/m4/libtool.m4:# Code to be used in simple link tests
fftw-link.txt:work/fftw-3.3.4/m4/libtool.m4:lt_simple_link_test_code='int main(){return(0);}'
fftw-link.txt:work/fftw-3.3.4/m4/libtool.m4:    if test "$host_cpu" != ia64 && test "$aix_use_runtimelinking" = no ; then
fftw-link.txt:work/fftw-3.3.4/m4/libtool.m4:_LT_TAGVAR(link_all_deplibs, $1)=unknown
fftw-link.txt:work/fftw-3.3.4/m4/libtool.m4:  # Code to be used in simple link tests
fftw-link.txt:work/fftw-3.3.4/m4/libtool.m4:  lt_simple_link_test_code='int main(int, char *[[]]) { return(0); }'
fftw-link.txt:work/fftw-3.3.4/m4/libtool.m4:      # Check if GNU C++ uses GNU ld as the underlying linker, since the
fftw-link.txt:work/fftw-3.3.4/m4/libtool.m4:        # linker, instead of GNU ld.  If possible, this setting should
fftw-link.txt:work/fftw-3.3.4/m4/libtool.m4:        # overridden to take advantage of the native linker features on
fftw-link.txt:work/fftw-3.3.4/m4/libtool.m4:      # linking a shared library.
fftw-link.txt:work/fftw-3.3.4/m4/libtool.m4:      output_verbose_link_cmd='$CC -shared $CFLAGS -v conftest.$objext 2>&1 | $GREP -v "^Configured with:" | $GREP "\-L"'
fftw-link.txt:work/fftw-3.3.4/m4/libtool.m4:    # PORTME: fill in a description of your system's C++ link characteristics
fftw-link.txt:work/fftw-3.3.4/m4/libtool.m4:    AC_MSG_CHECKING([whether the $compiler linker ($LD) supports shared libraries])
fftw-link.txt:work/fftw-3.3.4/m4/libtool.m4:          # On IA64, the linker does run time linking by default, so we don't
fftw-link.txt:work/fftw-3.3.4/m4/libtool.m4:          aix_use_runtimelinking=no
fftw-link.txt:work/fftw-3.3.4/m4/libtool.m4:          aix_use_runtimelinking=no
fftw-link.txt:work/fftw-3.3.4/m4/libtool.m4:          # Test if we are trying to use run time linking or normal
fftw-link.txt:work/fftw-3.3.4/m4/libtool.m4:          # AIX style linking. If -brtl is somewhere in LDFLAGS, we
fftw-link.txt:work/fftw-3.3.4/m4/libtool.m4:          # need to do runtime linking.
fftw-link.txt:work/fftw-3.3.4/m4/libtool.m4:	        aix_use_runtimelinking=yes
fftw-link.txt:work/fftw-3.3.4/m4/libtool.m4:        # have problems creating the table of contents.  If linking a library
fftw-link.txt:work/fftw-3.3.4/m4/libtool.m4:        _LT_TAGVAR(link_all_deplibs, $1)=yes
fftw-link.txt:work/fftw-3.3.4/m4/libtool.m4:	    # to unsupported forces relinking
fftw-link.txt:work/fftw-3.3.4/m4/libtool.m4:	  if test "$aix_use_runtimelinking" = yes; then
fftw-link.txt:work/fftw-3.3.4/m4/libtool.m4:	    if test "$aix_use_runtimelinking" = yes; then
fftw-link.txt:work/fftw-3.3.4/m4/libtool.m4:        if test "$aix_use_runtimelinking" = yes; then
fftw-link.txt:work/fftw-3.3.4/m4/libtool.m4:          # -berok will link without error, but may produce a broken library.
fftw-link.txt:work/fftw-3.3.4/m4/libtool.m4:	    # -berok will link without error, but may produce a broken library.
fftw-link.txt:work/fftw-3.3.4/m4/libtool.m4:	  # FIXME: Setting linknames here is a bad hack.
fftw-link.txt:work/fftw-3.3.4/m4/libtool.m4:	  _LT_TAGVAR(archive_cmds, $1)='$CC -o $output_objdir/$soname $libobjs $compiler_flags $deplibs -Wl,-dll~linknames='
fftw-link.txt:work/fftw-3.3.4/m4/libtool.m4:	      $SED -n -e 's/\\\\\\\(.*\\\\\\\)/-link\\\ -EXPORT:\\\\\\\1/' -e '1\\\!p' < $export_symbols > $output_objdir/$soname.exp;
fftw-link.txt:work/fftw-3.3.4/m4/libtool.m4:	      $SED -e 's/\\\\\\\(.*\\\\\\\)/-link\\\ -EXPORT:\\\\\\\1/' < $export_symbols > $output_objdir/$soname.exp;
fftw-link.txt:work/fftw-3.3.4/m4/libtool.m4:	    linknames='
fftw-link.txt:work/fftw-3.3.4/m4/libtool.m4:	  # The linker will not automatically build a static lib if we build a DLL.
fftw-link.txt:work/fftw-3.3.4/m4/libtool.m4:	  _LT_TAGVAR(postlink_cmds, $1)='lt_outputfile="@OUTPUT@"~
fftw-link.txt:work/fftw-3.3.4/m4/libtool.m4:	    _LT_TAGVAR(archive_cmds, $1)='$CC -shared -nostdlib $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags -o $output_objdir/$soname ${wl}--enable-auto-image-base -Xlinker --out-implib -Xlinker $lib'
fftw-link.txt:work/fftw-3.3.4/m4/libtool.m4:	    $CC -shared -nostdlib $output_objdir/$soname.def $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags -o $output_objdir/$soname ${wl}--enable-auto-image-base -Xlinker --out-implib -Xlinker $lib'
fftw-link.txt:work/fftw-3.3.4/m4/libtool.m4:        _LT_TAGVAR(link_all_deplibs, $1)=yes
fftw-link.txt:work/fftw-3.3.4/m4/libtool.m4:            # linking a shared library.
fftw-link.txt:work/fftw-3.3.4/m4/libtool.m4:            # explicitly linking system object files so we need to strip them
fftw-link.txt:work/fftw-3.3.4/m4/libtool.m4:            output_verbose_link_cmd='templist=`($CC -b $CFLAGS -v conftest.$objext 2>&1) | $EGREP "\-L"`; list=""; for z in $templist; do case $z in conftest.$objext) list="$list $z";; *.$objext);; *) list="$list $z";;esac; done; func_echo_all "$list"'
fftw-link.txt:work/fftw-3.3.4/m4/libtool.m4:	    # linking a shared library.
fftw-link.txt:work/fftw-3.3.4/m4/libtool.m4:	    # explicitly linking system object files so we need to strip them
fftw-link.txt:work/fftw-3.3.4/m4/libtool.m4:	    output_verbose_link_cmd='templist=`($CC -b $CFLAGS -v conftest.$objext 2>&1) | $GREP "\-L"`; list=""; for z in $templist; do case $z in conftest.$objext) list="$list $z";; *.$objext);; *) list="$list $z";;esac; done; func_echo_all "$list"'
fftw-link.txt:work/fftw-3.3.4/m4/libtool.m4:	# 256 KiB-aligned image base between 0x50000000 and 0x6FFC0000 at link
fftw-link.txt:work/fftw-3.3.4/m4/libtool.m4:	    _LT_TAGVAR(link_all_deplibs, $1)=yes
fftw-link.txt:work/fftw-3.3.4/m4/libtool.m4:	    # to its proper name (with version) after linking.
fftw-link.txt:work/fftw-3.3.4/m4/libtool.m4:	    # linking a shared library.
fftw-link.txt:work/fftw-3.3.4/m4/libtool.m4:	    # explicitly linking system object files so we need to strip them
fftw-link.txt:work/fftw-3.3.4/m4/libtool.m4:	    output_verbose_link_cmd='templist=`$CC $CFLAGS -v conftest.$objext -o libconftest$shared_ext 2>&1 | $GREP "ld"`; rm -f libconftest$shared_ext; list=""; for z in $templist; do case $z in conftest.$objext) list="$list $z";; *.$objext);; *) list="$list $z";;esac; done; func_echo_all "$list"'
fftw-link.txt:work/fftw-3.3.4/m4/libtool.m4:	      _LT_TAGVAR(prelink_cmds, $1)='tpldir=Template.dir~
fftw-link.txt:work/fftw-3.3.4/m4/libtool.m4:		$CC --prelink_objects --instantiation_dir $tpldir $objs $libobjs $compile_deplibs~
fftw-link.txt:work/fftw-3.3.4/m4/libtool.m4:		$CC --prelink_objects --instantiation_dir $tpldir $oldobjs$old_deplibs~
fftw-link.txt:work/fftw-3.3.4/m4/libtool.m4:		$CC --prelink_objects --instantiation_dir $tpldir $predep_objects $libobjs $deplibs $convenience $postdep_objects~
fftw-link.txt:work/fftw-3.3.4/m4/libtool.m4:		$CC --prelink_objects --instantiation_dir $tpldir $predep_objects $libobjs $deplibs $convenience $postdep_objects~
fftw-link.txt:work/fftw-3.3.4/m4/libtool.m4:	    # linking a shared library.
fftw-link.txt:work/fftw-3.3.4/m4/libtool.m4:	    # explicitly linking system object files so we need to strip them
fftw-link.txt:work/fftw-3.3.4/m4/libtool.m4:	    output_verbose_link_cmd='templist=`$CC -shared $CFLAGS -v conftest.$objext 2>&1 | $GREP "ld"`; templist=`func_echo_all "$templist" | $SED "s/\(^.*ld.*\)\( .*ld .*$\)/\1/"`; list=""; for z in $templist; do case $z in conftest.$objext) list="$list $z";; *.$objext);; *) list="$list $z";;esac; done; func_echo_all "X$list" | $Xsed'
fftw-link.txt:work/fftw-3.3.4/m4/libtool.m4:	      output_verbose_link_cmd='func_echo_all'
fftw-link.txt:work/fftw-3.3.4/m4/libtool.m4:	  _LT_TAGVAR(archive_cmds, $1)='$LD -Bshareable  -o $lib $predep_objects $libobjs $deplibs $postdep_objects $linker_flags'
fftw-link.txt:work/fftw-3.3.4/m4/libtool.m4:	output_verbose_link_cmd='$CC -shared $CFLAGS -v conftest.$objext 2>&1 | $GREP conftest.$objext | $SED -e "s:-lgcc -lc -lgcc::"'
fftw-link.txt:work/fftw-3.3.4/m4/libtool.m4:	  output_verbose_link_cmd=func_echo_all
fftw-link.txt:work/fftw-3.3.4/m4/libtool.m4:	    # to its proper name (with version) after linking.
fftw-link.txt:work/fftw-3.3.4/m4/libtool.m4:	    # linking a shared library.
fftw-link.txt:work/fftw-3.3.4/m4/libtool.m4:	    # explicitly linking system object files so we need to strip them
fftw-link.txt:work/fftw-3.3.4/m4/libtool.m4:	    output_verbose_link_cmd='templist=`$CC -shared $CFLAGS -v conftest.$objext 2>&1 | $GREP "ld" | $GREP -v "ld:"`; templist=`func_echo_all "$templist" | $SED "s/\(^.*ld.*\)\( .*ld.*$\)/\1/"`; list=""; for z in $templist; do case $z in conftest.$objext) list="$list $z";; *.$objext);; *) list="$list $z";;esac; done; func_echo_all "$list"'
fftw-link.txt:work/fftw-3.3.4/m4/libtool.m4:	      # linking a shared library.
fftw-link.txt:work/fftw-3.3.4/m4/libtool.m4:	      output_verbose_link_cmd='$CC -shared $CFLAGS -v conftest.$objext 2>&1 | $GREP -v "^Configured with:" | $GREP "\-L"'
fftw-link.txt:work/fftw-3.3.4/m4/libtool.m4:		# The compiler driver will combine and reorder linker options,
fftw-link.txt:work/fftw-3.3.4/m4/libtool.m4:		# but understands `-z linker_flag'.
fftw-link.txt:work/fftw-3.3.4/m4/libtool.m4:	    _LT_TAGVAR(link_all_deplibs, $1)=yes
fftw-link.txt:work/fftw-3.3.4/m4/libtool.m4:	    output_verbose_link_cmd='func_echo_all'
fftw-link.txt:work/fftw-3.3.4/m4/libtool.m4:	    # GNU C++ compiler with Solaris linker
fftw-link.txt:work/fftw-3.3.4/m4/libtool.m4:	        # linking a shared library.
fftw-link.txt:work/fftw-3.3.4/m4/libtool.m4:	        output_verbose_link_cmd='$CC -shared $CFLAGS -v conftest.$objext 2>&1 | $GREP -v "^Configured with:" | $GREP "\-L"'
fftw-link.txt:work/fftw-3.3.4/m4/libtool.m4:	        # linking a shared library.
fftw-link.txt:work/fftw-3.3.4/m4/libtool.m4:	        output_verbose_link_cmd='$CC -G $CFLAGS -v conftest.$objext 2>&1 | $GREP -v "^Configured with:" | $GREP "\-L"'
fftw-link.txt:work/fftw-3.3.4/m4/libtool.m4:	# link with -lc, and that would cause any symbols used from libc to
fftw-link.txt:work/fftw-3.3.4/m4/libtool.m4:	# ever link correctly.  If we're not using GNU ld we use -z text
fftw-link.txt:work/fftw-3.3.4/m4/libtool.m4:	_LT_TAGVAR(link_all_deplibs, $1)=yes
fftw-link.txt:work/fftw-3.3.4/m4/libtool.m4:	    _LT_TAGVAR(old_archive_cmds, $1)='$CC -Tprelink_objects $oldobjs~
fftw-link.txt:work/fftw-3.3.4/m4/libtool.m4:	    _LT_TAGVAR(reload_cmds, $1)='$CC -Tprelink_objects $reload_objs~
fftw-link.txt:work/fftw-3.3.4/m4/libtool.m4:# compiler output when linking a shared library.
fftw-link.txt:work/fftw-3.3.4/m4/libtool.m4:# Dependencies to place before and after the object being linked:
fftw-link.txt:work/fftw-3.3.4/m4/libtool.m4:dnl tag define a new lt_????_link_test_code variable,
fftw-link.txt:work/fftw-3.3.4/m4/libtool.m4:*\ -fuse-linker-plugin*\ *) CFLAGS="$CFLAGS -fno-use-linker-plugin" ;;
fftw-link.txt:work/fftw-3.3.4/m4/libtool.m4:  for p in `eval "$output_verbose_link_cmd"`; do
fftw-link.txt:work/fftw-3.3.4/m4/libtool.m4:	 # linked, so don't bother handling this case.
fftw-link.txt:work/fftw-3.3.4/m4/libtool.m4:    # archive will be linked into the output, leading to subtle bugs.
fftw-link.txt:work/fftw-3.3.4/m4/libtool.m4:    [Dependencies to place before and after the objects being linked to
fftw-link.txt:work/fftw-3.3.4/m4/libtool.m4:    [The library search path used internally by the compiler when linking
fftw-link.txt:work/fftw-3.3.4/m4/libtool.m4:_LT_TAGVAR(link_all_deplibs, $1)=unknown
fftw-link.txt:work/fftw-3.3.4/m4/libtool.m4:  # Code to be used in simple link tests
fftw-link.txt:work/fftw-3.3.4/m4/libtool.m4:  lt_simple_link_test_code="\
fftw-link.txt:work/fftw-3.3.4/m4/libtool.m4:	if test "$host_cpu" != ia64 && test "$aix_use_runtimelinking" = no ; then
fftw-link.txt:work/fftw-3.3.4/m4/libtool.m4:_LT_TAGVAR(link_all_deplibs, $1)=unknown
fftw-link.txt:work/fftw-3.3.4/m4/libtool.m4:  # Code to be used in simple link tests
fftw-link.txt:work/fftw-3.3.4/m4/libtool.m4:  lt_simple_link_test_code="\
fftw-link.txt:work/fftw-3.3.4/m4/libtool.m4:	if test "$host_cpu" != ia64 && test "$aix_use_runtimelinking" = no ; then
fftw-link.txt:work/fftw-3.3.4/m4/libtool.m4:# Code to be used in simple link tests
fftw-link.txt:work/fftw-3.3.4/m4/libtool.m4:lt_simple_link_test_code='public class conftest { public static void main(String[[]] argv) {}; }'
fftw-link.txt:work/fftw-3.3.4/m4/libtool.m4:# GCJ did not exist at the time GCC didn't implicitly link libc in.
fftw-link.txt:work/fftw-3.3.4/m4/libtool.m4:# Code to be used in simple link tests
fftw-link.txt:work/fftw-3.3.4/m4/libtool.m4:lt_simple_link_test_code='package main; func main() { }'
fftw-link.txt:work/fftw-3.3.4/m4/libtool.m4:# Go did not exist at the time GCC didn't implicitly link libc in.
fftw-link.txt:work/fftw-3.3.4/m4/libtool.m4:# Code to be used in simple link tests
fftw-link.txt:work/fftw-3.3.4/m4/libtool.m4:lt_simple_link_test_code="$lt_simple_compile_test_code"
fftw-link.txt:work/fftw-3.3.4/mpi/Makefile.in:	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CCLD) \
fftw-link.txt:work/fftw-3.3.4/mpi/Makefile.in:	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(mpi_bench_CFLAGS) \
fftw-link.txt:work/fftw-3.3.4/mpi/Makefile.in:	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
fftw-link.txt:work/fftw-3.3.4/rdft/Makefile.in:	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
fftw-link.txt:work/fftw-3.3.4/rdft/dft-r2hc.c:   to link to the real codelets and not the complex ones.  It could
fftw-link.txt:work/fftw-3.3.4/rdft/scalar/Makefile.in:	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
fftw-link.txt:work/fftw-3.3.4/rdft/scalar/r2cb/Makefile.in:	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
fftw-link.txt:work/fftw-3.3.4/rdft/scalar/r2cf/Makefile.in:	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
fftw-link.txt:work/fftw-3.3.4/rdft/scalar/r2r/Makefile.in:	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
fftw-link.txt:work/fftw-3.3.4/rdft/simd/altivec/Makefile.in:	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
fftw-link.txt:work/fftw-3.3.4/rdft/simd/avx/Makefile.in:	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
fftw-link.txt:work/fftw-3.3.4/rdft/simd/neon/Makefile.in:	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
fftw-link.txt:work/fftw-3.3.4/rdft/simd/sse2/Makefile.in:	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
fftw-link.txt:work/fftw-3.3.4/reodft/Makefile.in:	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
fftw-link.txt:work/fftw-3.3.4/simd-support/Makefile.in:	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CCLD) \
fftw-link.txt:work/fftw-3.3.4/simd-support/Makefile.in:	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
fftw-link.txt:work/fftw-3.3.4/tests/Makefile.in:	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(bench_CFLAGS) $(CFLAGS) \
fftw-link.txt:work/fftw-3.3.4/tests/Makefile.in:	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
fftw-link.txt:work/fftw-3.3.4/tests/fftw-bench.c:     /* Regression test: check that fftw_malloc exists and links
fftw-link.txt:work/fftw-3.3.4/threads/Makefile.in:	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CCLD) \
fftw-link.txt:work/fftw-3.3.4/threads/Makefile.in:	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CCLD) \
fftw-link.txt:work/fftw-3.3.4/threads/Makefile.in:	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
fftw-link.txt:work/fftw-3.3.4/threads/f77api.c:   for the Fortran linker, and we must omit the f77 API. */
fftw-link.txt:work/fftw-3.3.4/tools/Makefile.in:	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CCLD) \
fftw-link.txt:work/fftw-3.3.4/tools/Makefile.in:	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
fftw-link.txt:work/fftw-3.3.4/tools/fftw-wisdom-to-conf.1:configuration routine is a C subroutine that you link into your
fftw-link.txt:work/fftw-3.3.4/tools/fftw-wisdom-to-conf.1:limited set of sizes and types, and if you are statically linking your
fftw-link.txt:work/fftw-3.3.4/tools/fftw-wisdom-to-conf.1:code must be linked into any program using FFTW.)
fftw-link.txt:work/fftw-3.3.4/tools/fftw-wisdom-to-conf.1:and then re-link your program with the resulting configuration routine.
work/.extract_makevars.mk:_WRAP_PATH=	/boot/home/pkgsrc/pkgsrc/math/fftw/work/.buildlink/bin:/boot/home/pkgsrc/pkgsrc/math/fftw/work/.gcc/bin:/boot/home/pkgsrc/pkgsrc/math/fftw/work/.tools/bin:/boot/home/pkg/bin:.:/boot/home/config/non-packaged/bin:/boot/home/config/bin:/boot/system/non-packaged/bin:/bin:/boot/system/apps:/boot/system/preferences:/boot/system/non-packaged/apps/X11R6.4/bin
work/.tools_makevars.mk:_WRAP_PATH=	/boot/home/pkgsrc/pkgsrc/math/fftw/work/.buildlink/bin:/boot/home/pkgsrc/pkgsrc/math/fftw/work/.gcc/bin:/boot/home/pkgsrc/pkgsrc/math/fftw/work/.tools/bin:/boot/home/pkg/bin:.:/boot/home/config/non-packaged/bin:/boot/home/config/bin:/boot/system/non-packaged/bin:/bin:/boot/system/apps:/boot/system/preferences:/boot/system/non-packaged/apps/X11R6.4/bin
work/fftw-3.3.4/COPYING:consider it more useful to permit linking proprietary applications with the
work/fftw-3.3.4/INSTALL:   Some systems require unusual options for compilation or linking that
work/fftw-3.3.4/Makefile.in:	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CCLD) \
work/fftw-3.3.4/Makefile.in:	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
work/fftw-3.3.4/Makefile.in:	  ! -type d ! -perm -444 -links 1 -exec chmod a+r {} \; -o \
work/fftw-3.3.4/NEWS:  linking to double/single multithreaded FFTW (thanks to Alessio Massaro).
work/fftw-3.3.4/NEWS:* Added missing static keyword that prevented simultaneous linkage
work/fftw-3.3.4/NEWS:* By popular demand, simultaneous linking to double precision (fftw),
work/fftw-3.3.4/NEWS:* Support for linking to just those parts of FFTW that you need,
work/fftw-3.3.4/NEWS:  greatly reducing the size of statically linked programs when
work/fftw-3.3.4/README:benchmarks, links, and other information can be found at the FFTW home
work/fftw-3.3.4/aclocal.m4:# symlink; some systems play weird games with the mod time of symlinks
work/fftw-3.3.4/aclocal.m4:# (eg FreeBSD returns the mod time of the symlink's containing
work/fftw-3.3.4/api/Makefile.in:	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
work/fftw-3.3.4/api/api.h:   linking bench.exe will fail.  This has the advantage of forcing
work/fftw-3.3.4/api/f77api.c:   for the Fortran linker, and we must omit the f77 API. */
work/fftw-3.3.4/bootstrap.sh:autoreconf --verbose --install --symlink --force
work/fftw-3.3.4/bootstrap.sh:autoreconf --verbose --install --symlink --force
work/fftw-3.3.4/bootstrap.sh:autoreconf --verbose --install --symlink --force
work/fftw-3.3.4/compile:# func_cl_dashL linkdir
work/fftw-3.3.4/compile:  linker_opts="$linker_opts -LIBPATH:$file"
work/fftw-3.3.4/compile:  linker_opts=
work/fftw-3.3.4/compile:	    linker_opts="$linker_opts $flag"
work/fftw-3.3.4/compile:	-Xlinker)
work/fftw-3.3.4/compile:	  linker_opts="$linker_opts $2"
work/fftw-3.3.4/compile:  if test -n "$linker_opts"; then
work/fftw-3.3.4/compile:    linker_opts="-link$linker_opts"
work/fftw-3.3.4/compile:  exec "$@" $linker_opts
work/fftw-3.3.4/compile:  # '.c' file was seen then we are probably linking.  That is also
work/fftw-3.3.4/config.guess:	if grep Novell /usr/include/link.h >/dev/null 2>/dev/null; then
work/fftw-3.3.4/config.h.in:/* Define to dummy `main' function (if any) required to link to the Fortran
work/fftw-3.3.4/config.h.in:   case), which must not contain underscores, for linking with Fortran. */
work/fftw-3.3.4/configure:    # 2) DJGPP < 2.04 has no symlinks; `ln -s' creates a wrapper executable.
work/fftw-3.3.4/configure:  LDFLAGS     linker flags, e.g. -L<lib dir> if you have libraries in a
work/fftw-3.3.4/configure:  LIBS        libraries to pass to the linker, e.g. -l<library>
work/fftw-3.3.4/configure:# ac_fn_c_try_link LINENO
work/fftw-3.3.4/configure:# Try to link conftest.$ac_ext, and return whether this succeeded.
work/fftw-3.3.4/configure:ac_fn_c_try_link ()
work/fftw-3.3.4/configure:  if { { ac_try="$ac_link"
work/fftw-3.3.4/configure:  (eval "$ac_link") 2>conftest.err
work/fftw-3.3.4/configure:  # interfere with the next link command; also delete a directory that is
work/fftw-3.3.4/configure:} # ac_fn_c_try_link
work/fftw-3.3.4/configure:# Try to link conftest.$ac_ext, and return whether this succeeded. Assumes
work/fftw-3.3.4/configure:  if { { ac_try="$ac_link"
work/fftw-3.3.4/configure:  (eval "$ac_link") 2>&5
work/fftw-3.3.4/configure:if ac_fn_c_try_link "$LINENO"; then :
work/fftw-3.3.4/configure:# ac_fn_f77_try_link LINENO
work/fftw-3.3.4/configure:# Try to link conftest.$ac_ext, and return whether this succeeded.
work/fftw-3.3.4/configure:ac_fn_f77_try_link ()
work/fftw-3.3.4/configure:  if { { ac_try="$ac_link"
work/fftw-3.3.4/configure:  (eval "$ac_link") 2>conftest.err
work/fftw-3.3.4/configure:  # interfere with the next link command; also delete a directory that is
work/fftw-3.3.4/configure:} # ac_fn_f77_try_link
work/fftw-3.3.4/configure:ac_link='$CC -o conftest$ac_exeext $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'
work/fftw-3.3.4/configure:# symlink; some systems play weird games with the mod time of symlinks
work/fftw-3.3.4/configure:# (eg FreeBSD returns the mod time of the symlink's containing
work/fftw-3.3.4/configure:ac_link='$CC -o conftest$ac_exeext $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'
work/fftw-3.3.4/configure:ac_link_default=`$as_echo "$ac_link" | sed 's/ -o *conftest[^ ]*//'`
work/fftw-3.3.4/configure:if { { ac_try="$ac_link_default"
work/fftw-3.3.4/configure:  (eval "$ac_link_default") 2>&5
work/fftw-3.3.4/configure:if { { ac_try="$ac_link"
work/fftw-3.3.4/configure:  (eval "$ac_link") 2>&5
work/fftw-3.3.4/configure:as_fn_error $? "cannot compute suffix of executables: cannot compile and link
work/fftw-3.3.4/configure:  { { ac_try="$ac_link"
work/fftw-3.3.4/configure:  (eval "$ac_link") 2>&5
work/fftw-3.3.4/configure:ac_link='$CC -o conftest$ac_exeext $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'
work/fftw-3.3.4/configure:ac_link='$CC -o conftest$ac_exeext $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'
work/fftw-3.3.4/configure:ac_link='$CC -o conftest$ac_exeext $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'
work/fftw-3.3.4/configure:{ $as_echo "$as_me:${as_lineno-$LINENO}: checking if the linker ($LD) is GNU ld" >&5
work/fftw-3.3.4/configure:$as_echo_n "checking if the linker ($LD) is GNU ld... " >&6; }
work/fftw-3.3.4/configure:  for ac_prog in dumpbin "link -dump"
work/fftw-3.3.4/configure:  for ac_prog in dumpbin "link -dump"
work/fftw-3.3.4/configure:      # linker.  It appears as though 1/2 is a usable value.
work/fftw-3.3.4/configure:{ $as_echo "$as_me:${as_lineno-$LINENO}: checking how to associate runtime and link libraries" >&5
work/fftw-3.3.4/configure:$as_echo_n "checking how to associate runtime and link libraries... " >&6; }
work/fftw-3.3.4/configure:if ${lt_cv_sharedlib_from_linklib_cmd+:} false; then :
work/fftw-3.3.4/configure:  lt_cv_sharedlib_from_linklib_cmd='unknown'
work/fftw-3.3.4/configure:    lt_cv_sharedlib_from_linklib_cmd=func_cygming_dll_for_implib
work/fftw-3.3.4/configure:    lt_cv_sharedlib_from_linklib_cmd=func_cygming_dll_for_implib_fallback
work/fftw-3.3.4/configure:  # fallback: assume linklib IS sharedlib
work/fftw-3.3.4/configure:  lt_cv_sharedlib_from_linklib_cmd="$ECHO"
work/fftw-3.3.4/configure:{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $lt_cv_sharedlib_from_linklib_cmd" >&5
work/fftw-3.3.4/configure:$as_echo "$lt_cv_sharedlib_from_linklib_cmd" >&6; }
work/fftw-3.3.4/configure:sharedlib_from_linklib_cmd=$lt_cv_sharedlib_from_linklib_cmd
work/fftw-3.3.4/configure:test -z "$sharedlib_from_linklib_cmd" && sharedlib_from_linklib_cmd=$ECHO
work/fftw-3.3.4/configure:# Some systems (esp. on ia64) link data and code symbols differently,
work/fftw-3.3.4/configure:/* This works around a problem in FreeBSD linker */
work/fftw-3.3.4/configure:	  # Now try linking the two files.
work/fftw-3.3.4/configure:	  if { { eval echo "\"\$as_me\":${as_lineno-$LINENO}: \"$ac_link\""; } >&5
work/fftw-3.3.4/configure:  (eval $ac_link) 2>&5
work/fftw-3.3.4/configure:# Some flags need to be propagated to the compiler or linker for good
work/fftw-3.3.4/configure:ac_link='$CC -o conftest$ac_exeext $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'
work/fftw-3.3.4/configure:if ac_fn_c_try_link "$LINENO"; then :
work/fftw-3.3.4/configure:ac_link='$CC -o conftest$ac_exeext $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'
work/fftw-3.3.4/configure:    { $as_echo "$as_me:${as_lineno-$LINENO}: checking for -single_module linker flag" >&5
work/fftw-3.3.4/configure:$as_echo_n "checking for -single_module linker flag... " >&6; }
work/fftw-3.3.4/configure:	# link flags.
work/fftw-3.3.4/configure:	# appears in it, assume the flag caused a linker warning
work/fftw-3.3.4/configure:    { $as_echo "$as_me:${as_lineno-$LINENO}: checking for -exported_symbols_list linker flag" >&5
work/fftw-3.3.4/configure:$as_echo_n "checking for -exported_symbols_list linker flag... " >&6; }
work/fftw-3.3.4/configure:if ac_fn_c_try_link "$LINENO"; then :
work/fftw-3.3.4/configure:    { $as_echo "$as_me:${as_lineno-$LINENO}: checking for -force_load linker flag" >&5
work/fftw-3.3.4/configure:$as_echo_n "checking for -force_load linker flag... " >&6; }
work/fftw-3.3.4/configure:ac_link='$CC -o conftest$ac_exeext $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'
work/fftw-3.3.4/configure:ac_link='$CC -o conftest$ac_exeext $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'
work/fftw-3.3.4/configure:# All known linkers require a `.a' archive for static linking (except MSVC,
work/fftw-3.3.4/configure:*** depend on shared libraries, but programs linked with such libtool
work/fftw-3.3.4/configure:*** depend on shared libraries, but programs linked with such libtool
work/fftw-3.3.4/configure:ac_link='$CC -o conftest$ac_exeext $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'
work/fftw-3.3.4/configure:# Code to be used in simple link tests
work/fftw-3.3.4/configure:lt_simple_link_test_code='int main(){return(0);}'
work/fftw-3.3.4/configure:echo "$lt_simple_link_test_code" >conftest.$ac_ext
work/fftw-3.3.4/configure:eval "$ac_link" 2>&1 >/dev/null | $SED '/^$/d; /^ *+/d' >conftest.err
work/fftw-3.3.4/configure:_lt_linker_boilerplate=`cat conftest.err`
work/fftw-3.3.4/configure:      lt_prog_compiler_wl='-Xlinker '
work/fftw-3.3.4/configure:    # PORTME Check for flag to pass linker flags through the system compiler.
work/fftw-3.3.4/configure:	lt_prog_compiler_static='-qstaticlink'
work/fftw-3.3.4/configure:	  # Sun Fortran 8.3 passes all unrecognized flags to the linker
work/fftw-3.3.4/configure:   echo "$lt_simple_link_test_code" > conftest.$ac_ext
work/fftw-3.3.4/configure:   if (eval $ac_link 2>conftest.err) && test -s conftest$ac_exeext; then
work/fftw-3.3.4/configure:     # The linker can only warn and ignore the option if not recognized
work/fftw-3.3.4/configure:       $ECHO "$_lt_linker_boilerplate" | $SED '/^$/d' > conftest.exp
work/fftw-3.3.4/configure:hard_links="nottested"
work/fftw-3.3.4/configure:  { $as_echo "$as_me:${as_lineno-$LINENO}: checking if we can lock with hard links" >&5
work/fftw-3.3.4/configure:$as_echo_n "checking if we can lock with hard links... " >&6; }
work/fftw-3.3.4/configure:  hard_links=yes
work/fftw-3.3.4/configure:  ln conftest.a conftest.b 2>/dev/null && hard_links=no
work/fftw-3.3.4/configure:  ln conftest.a conftest.b 2>&5 || hard_links=no
work/fftw-3.3.4/configure:  ln conftest.a conftest.b 2>/dev/null && hard_links=no
work/fftw-3.3.4/configure:  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $hard_links" >&5
work/fftw-3.3.4/configure:$as_echo "$hard_links" >&6; }
work/fftw-3.3.4/configure:  if test "$hard_links" = no; then
work/fftw-3.3.4/configure:  { $as_echo "$as_me:${as_lineno-$LINENO}: checking whether the $compiler linker ($LD) supports shared libraries" >&5
work/fftw-3.3.4/configure:$as_echo_n "checking whether the $compiler linker ($LD) supports shared libraries... " >&6; }
work/fftw-3.3.4/configure:  link_all_deplibs=unknown
work/fftw-3.3.4/configure:  # platforms (ab)use it in PIC code, but their linkers get confused if
work/fftw-3.3.4/configure:  # On some targets, GNU ld is compatible enough with the native linker
work/fftw-3.3.4/configure:	# with the native linker.  However, as the warning in the GNU ld
work/fftw-3.3.4/configure:      # On AIX/PPC, the GNU linker is very broken
work/fftw-3.3.4/configure:*** Warning: the GNU linker, at least up to release 2.19, is reported
work/fftw-3.3.4/configure:*** 2.20 or above, or modify your PATH so that a non-GNU linker is found.
work/fftw-3.3.4/configure:        archive_cmds='$CC -shared $libobjs $deplibs $compiler_flags -o $output_objdir/$soname ${wl}--enable-auto-image-base -Xlinker --out-implib -Xlinker $lib'
work/fftw-3.3.4/configure:	$CC -shared $output_objdir/$soname.def $libobjs $deplibs $compiler_flags -o $output_objdir/$soname ${wl}--enable-auto-image-base -Xlinker --out-implib -Xlinker $lib'
work/fftw-3.3.4/configure:      link_all_deplibs=yes
work/fftw-3.3.4/configure:      # 256 KiB-aligned image base between 0x50000000 and 0x6FFC0000 at link
work/fftw-3.3.4/configure:	  diet\ *) tmp_diet=yes;;	# linux-dietlibc with static linking (!diet-dyn)
work/fftw-3.3.4/configure:	  archive_cmds='$LD -shared $libobjs $deplibs $linker_flags -soname $soname -o $lib'
work/fftw-3.3.4/configure:	      $LD -shared $libobjs $deplibs $linker_flags -soname $soname -version-script $output_objdir/$libname.ver -o $lib'
work/fftw-3.3.4/configure:	archive_cmds='$LD -Bshareable $libobjs $deplibs $linker_flags -o $lib'
work/fftw-3.3.4/configure:*** Warning: The releases 2.8.* of the GNU linker cannot reliably
work/fftw-3.3.4/configure:*** your PATH or compiler configuration so that the native linker is
work/fftw-3.3.4/configure:*** Warning: Releases of the GNU linker prior to 2.16.91.0.3 can not
work/fftw-3.3.4/configure:*** your PATH or compiler configuration so that the native linker is
work/fftw-3.3.4/configure:      archive_cmds='$LD -assert pure-text -Bshareable -o $lib $libobjs $deplibs $linker_flags'
work/fftw-3.3.4/configure:    # PORTME fill in a description of your system's linker (not GNU ld)
work/fftw-3.3.4/configure:      archive_expsym_cmds='$LD -o $output_objdir/$soname $libobjs $deplibs $linker_flags -bE:$export_symbols -T512 -H512 -bM:SRE~$AR $AR_FLAGS $lib $output_objdir/$soname'
work/fftw-3.3.4/configure:      # Note: this linker hardcodes the directories in LIBPATH if there
work/fftw-3.3.4/configure:	# Neither direct hardcoding nor static linking is supported with a
work/fftw-3.3.4/configure:	# On IA64, the linker does run time linking by default, so we don't
work/fftw-3.3.4/configure:	aix_use_runtimelinking=no
work/fftw-3.3.4/configure:	aix_use_runtimelinking=no
work/fftw-3.3.4/configure:	# Test if we are trying to use run time linking or normal
work/fftw-3.3.4/configure:	# AIX style linking. If -brtl is somewhere in LDFLAGS, we
work/fftw-3.3.4/configure:	# need to do runtime linking.
work/fftw-3.3.4/configure:	    aix_use_runtimelinking=yes
work/fftw-3.3.4/configure:      # have problems creating the table of contents.  If linking a library
work/fftw-3.3.4/configure:      link_all_deplibs=yes
work/fftw-3.3.4/configure:	  # to unsupported forces relinking
work/fftw-3.3.4/configure:	if test "$aix_use_runtimelinking" = yes; then
work/fftw-3.3.4/configure:	  if test "$aix_use_runtimelinking" = yes; then
work/fftw-3.3.4/configure:      if test "$aix_use_runtimelinking" = yes; then
work/fftw-3.3.4/configure:	# -berok will link without error, but may produce a broken library.
work/fftw-3.3.4/configure:if ac_fn_c_try_link "$LINENO"; then :
work/fftw-3.3.4/configure:if ac_fn_c_try_link "$LINENO"; then :
work/fftw-3.3.4/configure:	  # -berok will link without error, but may produce a broken library.
work/fftw-3.3.4/configure:	# FIXME: Setting linknames here is a bad hack.
work/fftw-3.3.4/configure:	archive_cmds='$CC -o $output_objdir/$soname $libobjs $compiler_flags $deplibs -Wl,-dll~linknames='
work/fftw-3.3.4/configure:	    sed -n -e 's/\\\\\\\(.*\\\\\\\)/-link\\\ -EXPORT:\\\\\\\1/' -e '1\\\!p' < $export_symbols > $output_objdir/$soname.exp;
work/fftw-3.3.4/configure:	    sed -e 's/\\\\\\\(.*\\\\\\\)/-link\\\ -EXPORT:\\\\\\\1/' < $export_symbols > $output_objdir/$soname.exp;
work/fftw-3.3.4/configure:	  linknames='
work/fftw-3.3.4/configure:	# The linker will not automatically build a static lib if we build a DLL.
work/fftw-3.3.4/configure:	postlink_cmds='lt_outputfile="@OUTPUT@"~
work/fftw-3.3.4/configure:	# FIXME: Setting linknames here is a bad hack.
work/fftw-3.3.4/configure:	archive_cmds='$CC -o $lib $libobjs $compiler_flags `func_echo_all "$deplibs" | $SED '\''s/ -lc$//'\''` -link -dll~linknames='
work/fftw-3.3.4/configure:	# The linker will automatically build a .lib file if we build a DLL.
work/fftw-3.3.4/configure:  link_all_deplibs=yes
work/fftw-3.3.4/configure:    output_verbose_link_cmd=func_echo_all
work/fftw-3.3.4/configure:      archive_cmds='$LD -G -h $soname -o $lib $libobjs $deplibs $linker_flags'
work/fftw-3.3.4/configure:      archive_cmds='$LD -Bshareable -o $lib $libobjs $deplibs $linker_flags /usr/lib/c++rt0.o'
work/fftw-3.3.4/configure:      archive_cmds='$LD -Bshareable -o $lib $libobjs $deplibs $linker_flags'
work/fftw-3.3.4/configure:	archive_cmds='$RM $output_objdir/$soname~$LD -b +b $install_libdir -o $output_objdir/$soname $libobjs $deplibs $linker_flags~test $output_objdir/$soname = $lib || mv $output_objdir/$soname $lib'
work/fftw-3.3.4/configure:	archive_cmds='$LD -b +h $soname +b $install_libdir -o $lib $libobjs $deplibs $linker_flags'
work/fftw-3.3.4/configure:   echo "$lt_simple_link_test_code" > conftest.$ac_ext
work/fftw-3.3.4/configure:   if (eval $ac_link 2>conftest.err) && test -s conftest$ac_exeext; then
work/fftw-3.3.4/configure:     # The linker can only warn and ignore the option if not recognized
work/fftw-3.3.4/configure:       $ECHO "$_lt_linker_boilerplate" | $SED '/^$/d' > conftest.exp
work/fftw-3.3.4/configure:    archive_cmds='$LD -b +h $soname +b $install_libdir -o $lib $libobjs $deplibs $linker_flags'
work/fftw-3.3.4/configure:	{ $as_echo "$as_me:${as_lineno-$LINENO}: checking whether the $host_os linker accepts -exported_symbol" >&5
work/fftw-3.3.4/configure:$as_echo_n "checking whether the $host_os linker accepts -exported_symbol... " >&6; }
work/fftw-3.3.4/configure:if ac_fn_c_try_link "$LINENO"; then :
work/fftw-3.3.4/configure:      link_all_deplibs=yes
work/fftw-3.3.4/configure:	archive_cmds='$LD -Bshareable -o $lib $libobjs $deplibs $linker_flags'  # a.out
work/fftw-3.3.4/configure:	archive_cmds='$LD -shared -o $lib $libobjs $deplibs $linker_flags'      # ELF
work/fftw-3.3.4/configure:      archive_cmds='$LD -G -h $soname -o $lib $libobjs $deplibs $linker_flags'
work/fftw-3.3.4/configure:	     archive_cmds='$LD -Bshareable -o $lib $libobjs $deplibs $linker_flags'
work/fftw-3.3.4/configure:	  archive_cmds='$LD -G${allow_undefined_flag} -h $soname -o $lib $libobjs $deplibs $linker_flags'
work/fftw-3.3.4/configure:	  $LD -G${allow_undefined_flag} -M $lib.exp -h $soname -o $lib $libobjs $deplibs $linker_flags~$RM $lib.exp'
work/fftw-3.3.4/configure:	# The compiler driver will combine and reorder linker options,
work/fftw-3.3.4/configure:	# but understands `-z linker_flag'.  GCC discards it without `$wl',
work/fftw-3.3.4/configure:      link_all_deplibs=yes
work/fftw-3.3.4/configure:	# Use $CC to link under sequent, because it throws in some extra .o
work/fftw-3.3.4/configure:	archive_cmds='$LD -assert pure-text -Bstatic -o $lib $libobjs $deplibs $linker_flags'
work/fftw-3.3.4/configure:	  archive_cmds='$LD -G -h $soname -o $lib $libobjs $deplibs $linker_flags'
work/fftw-3.3.4/configure:	  archive_cmds='$LD -G -o $lib $libobjs $deplibs $linker_flags'
work/fftw-3.3.4/configure:	  archive_cmds='$LD -G -h $soname -o $lib $libobjs $deplibs $linker_flags'
work/fftw-3.3.4/configure:      archive_cmds='$LD -G -h $soname -o $lib $libobjs $deplibs $linker_flags'
work/fftw-3.3.4/configure:	archive_cmds='$LD -G -h $soname -o $lib $libobjs $deplibs $linker_flags'
work/fftw-3.3.4/configure:      # link with -lc, and that would cause any symbols used from libc to
work/fftw-3.3.4/configure:      # ever link correctly.  If we're not using GNU ld we use -z text
work/fftw-3.3.4/configure:      link_all_deplibs=yes
work/fftw-3.3.4/configure:      archive_cmds='$LD -G -h $soname -o $lib $libobjs $deplibs $linker_flags'
work/fftw-3.3.4/configure:# Do we need to explicitly link libc?
work/fftw-3.3.4/configure:      # Test whether the compiler implicitly links with -lc since on some
work/fftw-3.3.4/configure:      { $as_echo "$as_me:${as_lineno-$LINENO}: checking whether -lc should be explicitly linked in" >&5
work/fftw-3.3.4/configure:$as_echo_n "checking whether -lc should be explicitly linked in... " >&6; }
work/fftw-3.3.4/configure:	  linker_flags=-v
work/fftw-3.3.4/configure:  { $as_echo "$as_me:${as_lineno-$LINENO}: checking dynamic linker characteristics" >&5
work/fftw-3.3.4/configure:$as_echo_n "checking dynamic linker characteristics... " >&6; }
work/fftw-3.3.4/configure:dynamic_linker="$host_os ld.so"
work/fftw-3.3.4/configure:    # collect2, so additional links can be useful in future.
work/fftw-3.3.4/configure:    if test "$aix_use_runtimelinking" = yes; then
work/fftw-3.3.4/configure:      # If using run time linking (on AIX 4.2 or later) use lib<name>.so
work/fftw-3.3.4/configure:      # and later when we are not doing run time linking.
work/fftw-3.3.4/configure:  dynamic_linker="$host_os ld.so"
work/fftw-3.3.4/configure:  # /usr/X11R6/lib (/usr/X11 is a link to /usr/X11R6), but let us allow
work/fftw-3.3.4/configure:    dynamic_linker='Win32 ld.exe'
work/fftw-3.3.4/configure:    dynamic_linker='Win32 link.exe'
work/fftw-3.3.4/configure:    dynamic_linker='Win32 ld.exe'
work/fftw-3.3.4/configure:  dynamic_linker="$host_os dyld"
work/fftw-3.3.4/configure:  dynamic_linker="$host_os runtime_loader"
work/fftw-3.3.4/configure:  # link against other versions.
work/fftw-3.3.4/configure:    dynamic_linker="$host_os dld.so"
work/fftw-3.3.4/configure:    dynamic_linker="$host_os dld.sl"
work/fftw-3.3.4/configure:    dynamic_linker="$host_os dld.sl"
work/fftw-3.3.4/configure:  dynamic_linker='Interix 3.x ld.so.1 (PE, like ELF)'
work/fftw-3.3.4/configure:  dynamic_linker=no
work/fftw-3.3.4/configure:if ac_fn_c_try_link "$LINENO"; then :
work/fftw-3.3.4/configure:  # GNU dynamic linker.  Since this was broken with cross compilers,
work/fftw-3.3.4/configure:  # most powerpc-linux boxes support dynamic linking these days and
work/fftw-3.3.4/configure:  # assume the GNU/Linux dynamic linker is in use.
work/fftw-3.3.4/configure:  dynamic_linker='GNU/Linux ld.so'
work/fftw-3.3.4/configure:    dynamic_linker='NetBSD (a.out) ld.so'
work/fftw-3.3.4/configure:    dynamic_linker='NetBSD ld.elf_so'
work/fftw-3.3.4/configure:  dynamic_linker='ldqnx.so'
work/fftw-3.3.4/configure:  dynamic_linker='OS/2 ld.exe'
work/fftw-3.3.4/configure:  dynamic_linker=no
work/fftw-3.3.4/configure:  dynamic_linker=no
work/fftw-3.3.4/configure:{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $dynamic_linker" >&5
work/fftw-3.3.4/configure:$as_echo "$dynamic_linker" >&6; }
work/fftw-3.3.4/configure:test "$dynamic_linker" = no && can_build_shared=no
work/fftw-3.3.4/configure:variables_saved_for_relink="PATH $shlibpath_var $runpath_var"
work/fftw-3.3.4/configure:  variables_saved_for_relink="$variables_saved_for_relink GCC_EXEC_PREFIX COMPILER_PATH LIBRARY_PATH"
work/fftw-3.3.4/configure:     # have to relink, otherwise we might link with an installed library
work/fftw-3.3.4/configure:     # when we should be linking with a yet-to-be-installed one
work/fftw-3.3.4/configure:    hardcode_action=relink
work/fftw-3.3.4/configure:    # We can link without hardcoding, and we can hardcode nonexisting dirs.
work/fftw-3.3.4/configure:if test "$hardcode_action" = relink ||
work/fftw-3.3.4/configure:  # if libdl is installed we need to link against it
work/fftw-3.3.4/configure:if ac_fn_c_try_link "$LINENO"; then :
work/fftw-3.3.4/configure:if ac_fn_c_try_link "$LINENO"; then :
work/fftw-3.3.4/configure:if ac_fn_c_try_link "$LINENO"; then :
work/fftw-3.3.4/configure:if ac_fn_c_try_link "$LINENO"; then :
work/fftw-3.3.4/configure:  { $as_echo "$as_me:${as_lineno-$LINENO}: checking for dld_link in -ldld" >&5
work/fftw-3.3.4/configure:$as_echo_n "checking for dld_link in -ldld... " >&6; }
work/fftw-3.3.4/configure:if ${ac_cv_lib_dld_dld_link+:} false; then :
work/fftw-3.3.4/configure:char dld_link ();
work/fftw-3.3.4/configure:return dld_link ();
work/fftw-3.3.4/configure:if ac_fn_c_try_link "$LINENO"; then :
work/fftw-3.3.4/configure:  ac_cv_lib_dld_dld_link=yes
work/fftw-3.3.4/configure:  ac_cv_lib_dld_dld_link=no
work/fftw-3.3.4/configure:{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_cv_lib_dld_dld_link" >&5
work/fftw-3.3.4/configure:$as_echo "$ac_cv_lib_dld_dld_link" >&6; }
work/fftw-3.3.4/configure:if test "x$ac_cv_lib_dld_dld_link" = xyes; then :
work/fftw-3.3.4/configure:  lt_cv_dlopen="dld_link" lt_cv_dlopen_libs="-ldld"
work/fftw-3.3.4/configure:  if { { eval echo "\"\$as_me\":${as_lineno-$LINENO}: \"$ac_link\""; } >&5
work/fftw-3.3.4/configure:  (eval $ac_link) 2>&5
work/fftw-3.3.4/configure:      { $as_echo "$as_me:${as_lineno-$LINENO}: checking whether a statically linked program can dlopen itself" >&5
work/fftw-3.3.4/configure:$as_echo_n "checking whether a statically linked program can dlopen itself... " >&6; }
work/fftw-3.3.4/configure:  if { { eval echo "\"\$as_me\":${as_lineno-$LINENO}: \"$ac_link\""; } >&5
work/fftw-3.3.4/configure:  (eval $ac_link) 2>&5
work/fftw-3.3.4/configure:    if test "$host_cpu" != ia64 && test "$aix_use_runtimelinking" = no ; then
work/fftw-3.3.4/configure:ac_link='$CC -o conftest$ac_exeext $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'
work/fftw-3.3.4/configure:if ac_fn_c_try_link "$LINENO"; then :
work/fftw-3.3.4/configure:if ac_fn_c_try_link "$LINENO"; then :
work/fftw-3.3.4/configure:if ac_fn_c_try_link "$LINENO"; then :
work/fftw-3.3.4/configure:if ac_fn_c_try_link "$LINENO"; then :
work/fftw-3.3.4/configure:if ac_fn_c_try_link "$LINENO"; then :
work/fftw-3.3.4/configure:if ac_fn_c_try_link "$LINENO"; then :
work/fftw-3.3.4/configure:if ac_fn_c_try_link "$LINENO"; then :
work/fftw-3.3.4/configure:if ac_fn_c_try_link "$LINENO"; then :
work/fftw-3.3.4/configure:if ac_fn_c_try_link "$LINENO"; then :
work/fftw-3.3.4/configure:ac_link='$F77 -o conftest$ac_exeext $FFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'
work/fftw-3.3.4/configure:ac_link='$CC -o conftest$ac_exeext $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'
work/fftw-3.3.4/configure:ac_link='$F77 -o conftest$ac_exeext $FFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'
work/fftw-3.3.4/configure:link_all_deplibs_F77=unknown
work/fftw-3.3.4/configure:  # Code to be used in simple link tests
work/fftw-3.3.4/configure:  lt_simple_link_test_code="\
work/fftw-3.3.4/configure:echo "$lt_simple_link_test_code" >conftest.$ac_ext
work/fftw-3.3.4/configure:eval "$ac_link" 2>&1 >/dev/null | $SED '/^$/d; /^ *+/d' >conftest.err
work/fftw-3.3.4/configure:_lt_linker_boilerplate=`cat conftest.err`
work/fftw-3.3.4/configure:	if test "$host_cpu" != ia64 && test "$aix_use_runtimelinking" = no ; then
work/fftw-3.3.4/configure:      lt_prog_compiler_wl_F77='-Xlinker '
work/fftw-3.3.4/configure:    # PORTME Check for flag to pass linker flags through the system compiler.
work/fftw-3.3.4/configure:	lt_prog_compiler_static_F77='-qstaticlink'
work/fftw-3.3.4/configure:	  # Sun Fortran 8.3 passes all unrecognized flags to the linker
work/fftw-3.3.4/configure:   echo "$lt_simple_link_test_code" > conftest.$ac_ext
work/fftw-3.3.4/configure:   if (eval $ac_link 2>conftest.err) && test -s conftest$ac_exeext; then
work/fftw-3.3.4/configure:     # The linker can only warn and ignore the option if not recognized
work/fftw-3.3.4/configure:       $ECHO "$_lt_linker_boilerplate" | $SED '/^$/d' > conftest.exp
work/fftw-3.3.4/configure:hard_links="nottested"
work/fftw-3.3.4/configure:  { $as_echo "$as_me:${as_lineno-$LINENO}: checking if we can lock with hard links" >&5
work/fftw-3.3.4/configure:$as_echo_n "checking if we can lock with hard links... " >&6; }
work/fftw-3.3.4/configure:  hard_links=yes
work/fftw-3.3.4/configure:  ln conftest.a conftest.b 2>/dev/null && hard_links=no
work/fftw-3.3.4/configure:  ln conftest.a conftest.b 2>&5 || hard_links=no
work/fftw-3.3.4/configure:  ln conftest.a conftest.b 2>/dev/null && hard_links=no
work/fftw-3.3.4/configure:  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $hard_links" >&5
work/fftw-3.3.4/configure:$as_echo "$hard_links" >&6; }
work/fftw-3.3.4/configure:  if test "$hard_links" = no; then
work/fftw-3.3.4/configure:    { $as_echo "$as_me:${as_lineno-$LINENO}: checking whether the $compiler linker ($LD) supports shared libraries" >&5
work/fftw-3.3.4/configure:$as_echo_n "checking whether the $compiler linker ($LD) supports shared libraries... " >&6; }
work/fftw-3.3.4/configure:  link_all_deplibs_F77=unknown
work/fftw-3.3.4/configure:  # platforms (ab)use it in PIC code, but their linkers get confused if
work/fftw-3.3.4/configure:  # On some targets, GNU ld is compatible enough with the native linker
work/fftw-3.3.4/configure:	# with the native linker.  However, as the warning in the GNU ld
work/fftw-3.3.4/configure:      # On AIX/PPC, the GNU linker is very broken
work/fftw-3.3.4/configure:*** Warning: the GNU linker, at least up to release 2.19, is reported
work/fftw-3.3.4/configure:*** 2.20 or above, or modify your PATH so that a non-GNU linker is found.
work/fftw-3.3.4/configure:        archive_cmds_F77='$CC -shared $libobjs $deplibs $compiler_flags -o $output_objdir/$soname ${wl}--enable-auto-image-base -Xlinker --out-implib -Xlinker $lib'
work/fftw-3.3.4/configure:	$CC -shared $output_objdir/$soname.def $libobjs $deplibs $compiler_flags -o $output_objdir/$soname ${wl}--enable-auto-image-base -Xlinker --out-implib -Xlinker $lib'
work/fftw-3.3.4/configure:      link_all_deplibs_F77=yes
work/fftw-3.3.4/configure:      # 256 KiB-aligned image base between 0x50000000 and 0x6FFC0000 at link
work/fftw-3.3.4/configure:	  diet\ *) tmp_diet=yes;;	# linux-dietlibc with static linking (!diet-dyn)
work/fftw-3.3.4/configure:	  archive_cmds_F77='$LD -shared $libobjs $deplibs $linker_flags -soname $soname -o $lib'
work/fftw-3.3.4/configure:	      $LD -shared $libobjs $deplibs $linker_flags -soname $soname -version-script $output_objdir/$libname.ver -o $lib'
work/fftw-3.3.4/configure:	archive_cmds_F77='$LD -Bshareable $libobjs $deplibs $linker_flags -o $lib'
work/fftw-3.3.4/configure:*** Warning: The releases 2.8.* of the GNU linker cannot reliably
work/fftw-3.3.4/configure:*** your PATH or compiler configuration so that the native linker is
work/fftw-3.3.4/configure:*** Warning: Releases of the GNU linker prior to 2.16.91.0.3 can not
work/fftw-3.3.4/configure:*** your PATH or compiler configuration so that the native linker is
work/fftw-3.3.4/configure:      archive_cmds_F77='$LD -assert pure-text -Bshareable -o $lib $libobjs $deplibs $linker_flags'
work/fftw-3.3.4/configure:    # PORTME fill in a description of your system's linker (not GNU ld)
work/fftw-3.3.4/configure:      archive_expsym_cmds_F77='$LD -o $output_objdir/$soname $libobjs $deplibs $linker_flags -bE:$export_symbols -T512 -H512 -bM:SRE~$AR $AR_FLAGS $lib $output_objdir/$soname'
work/fftw-3.3.4/configure:      # Note: this linker hardcodes the directories in LIBPATH if there
work/fftw-3.3.4/configure:	# Neither direct hardcoding nor static linking is supported with a
work/fftw-3.3.4/configure:	# On IA64, the linker does run time linking by default, so we don't
work/fftw-3.3.4/configure:	aix_use_runtimelinking=no
work/fftw-3.3.4/configure:	aix_use_runtimelinking=no
work/fftw-3.3.4/configure:	# Test if we are trying to use run time linking or normal
work/fftw-3.3.4/configure:	# AIX style linking. If -brtl is somewhere in LDFLAGS, we
work/fftw-3.3.4/configure:	# need to do runtime linking.
work/fftw-3.3.4/configure:	    aix_use_runtimelinking=yes
work/fftw-3.3.4/configure:      # have problems creating the table of contents.  If linking a library
work/fftw-3.3.4/configure:      link_all_deplibs_F77=yes
work/fftw-3.3.4/configure:	  # to unsupported forces relinking
work/fftw-3.3.4/configure:	if test "$aix_use_runtimelinking" = yes; then
work/fftw-3.3.4/configure:	  if test "$aix_use_runtimelinking" = yes; then
work/fftw-3.3.4/configure:      if test "$aix_use_runtimelinking" = yes; then
work/fftw-3.3.4/configure:	# -berok will link without error, but may produce a broken library.
work/fftw-3.3.4/configure:if ac_fn_f77_try_link "$LINENO"; then :
work/fftw-3.3.4/configure:if ac_fn_f77_try_link "$LINENO"; then :
work/fftw-3.3.4/configure:	  # -berok will link without error, but may produce a broken library.
work/fftw-3.3.4/configure:	# FIXME: Setting linknames here is a bad hack.
work/fftw-3.3.4/configure:	archive_cmds_F77='$CC -o $output_objdir/$soname $libobjs $compiler_flags $deplibs -Wl,-dll~linknames='
work/fftw-3.3.4/configure:	    sed -n -e 's/\\\\\\\(.*\\\\\\\)/-link\\\ -EXPORT:\\\\\\\1/' -e '1\\\!p' < $export_symbols > $output_objdir/$soname.exp;
work/fftw-3.3.4/configure:	    sed -e 's/\\\\\\\(.*\\\\\\\)/-link\\\ -EXPORT:\\\\\\\1/' < $export_symbols > $output_objdir/$soname.exp;
work/fftw-3.3.4/configure:	  linknames='
work/fftw-3.3.4/configure:	# The linker will not automatically build a static lib if we build a DLL.
work/fftw-3.3.4/configure:	postlink_cmds_F77='lt_outputfile="@OUTPUT@"~
work/fftw-3.3.4/configure:	# FIXME: Setting linknames here is a bad hack.
work/fftw-3.3.4/configure:	archive_cmds_F77='$CC -o $lib $libobjs $compiler_flags `func_echo_all "$deplibs" | $SED '\''s/ -lc$//'\''` -link -dll~linknames='
work/fftw-3.3.4/configure:	# The linker will automatically build a .lib file if we build a DLL.
work/fftw-3.3.4/configure:  link_all_deplibs_F77=yes
work/fftw-3.3.4/configure:    output_verbose_link_cmd=func_echo_all
work/fftw-3.3.4/configure:      archive_cmds_F77='$LD -G -h $soname -o $lib $libobjs $deplibs $linker_flags'
work/fftw-3.3.4/configure:      archive_cmds_F77='$LD -Bshareable -o $lib $libobjs $deplibs $linker_flags /usr/lib/c++rt0.o'
work/fftw-3.3.4/configure:      archive_cmds_F77='$LD -Bshareable -o $lib $libobjs $deplibs $linker_flags'
work/fftw-3.3.4/configure:	archive_cmds_F77='$RM $output_objdir/$soname~$LD -b +b $install_libdir -o $output_objdir/$soname $libobjs $deplibs $linker_flags~test $output_objdir/$soname = $lib || mv $output_objdir/$soname $lib'
work/fftw-3.3.4/configure:	archive_cmds_F77='$LD -b +h $soname +b $install_libdir -o $lib $libobjs $deplibs $linker_flags'
work/fftw-3.3.4/configure:	{ $as_echo "$as_me:${as_lineno-$LINENO}: checking whether the $host_os linker accepts -exported_symbol" >&5
work/fftw-3.3.4/configure:$as_echo_n "checking whether the $host_os linker accepts -exported_symbol... " >&6; }
work/fftw-3.3.4/configure:if ac_fn_f77_try_link "$LINENO"; then :
work/fftw-3.3.4/configure:      link_all_deplibs_F77=yes
work/fftw-3.3.4/configure:	archive_cmds_F77='$LD -Bshareable -o $lib $libobjs $deplibs $linker_flags'  # a.out
work/fftw-3.3.4/configure:	archive_cmds_F77='$LD -shared -o $lib $libobjs $deplibs $linker_flags'      # ELF
work/fftw-3.3.4/configure:      archive_cmds_F77='$LD -G -h $soname -o $lib $libobjs $deplibs $linker_flags'
work/fftw-3.3.4/configure:	     archive_cmds_F77='$LD -Bshareable -o $lib $libobjs $deplibs $linker_flags'
work/fftw-3.3.4/configure:	  archive_cmds_F77='$LD -G${allow_undefined_flag} -h $soname -o $lib $libobjs $deplibs $linker_flags'
work/fftw-3.3.4/configure:	  $LD -G${allow_undefined_flag} -M $lib.exp -h $soname -o $lib $libobjs $deplibs $linker_flags~$RM $lib.exp'
work/fftw-3.3.4/configure:	# The compiler driver will combine and reorder linker options,
work/fftw-3.3.4/configure:	# but understands `-z linker_flag'.  GCC discards it without `$wl',
work/fftw-3.3.4/configure:      link_all_deplibs_F77=yes
work/fftw-3.3.4/configure:	# Use $CC to link under sequent, because it throws in some extra .o
work/fftw-3.3.4/configure:	archive_cmds_F77='$LD -assert pure-text -Bstatic -o $lib $libobjs $deplibs $linker_flags'
work/fftw-3.3.4/configure:	  archive_cmds_F77='$LD -G -h $soname -o $lib $libobjs $deplibs $linker_flags'
work/fftw-3.3.4/configure:	  archive_cmds_F77='$LD -G -o $lib $libobjs $deplibs $linker_flags'
work/fftw-3.3.4/configure:	  archive_cmds_F77='$LD -G -h $soname -o $lib $libobjs $deplibs $linker_flags'
work/fftw-3.3.4/configure:      archive_cmds_F77='$LD -G -h $soname -o $lib $libobjs $deplibs $linker_flags'
work/fftw-3.3.4/configure:	archive_cmds_F77='$LD -G -h $soname -o $lib $libobjs $deplibs $linker_flags'
work/fftw-3.3.4/configure:      # link with -lc, and that would cause any symbols used from libc to
work/fftw-3.3.4/configure:      # ever link correctly.  If we're not using GNU ld we use -z text
work/fftw-3.3.4/configure:      link_all_deplibs_F77=yes
work/fftw-3.3.4/configure:      archive_cmds_F77='$LD -G -h $soname -o $lib $libobjs $deplibs $linker_flags'
work/fftw-3.3.4/configure:# Do we need to explicitly link libc?
work/fftw-3.3.4/configure:      # Test whether the compiler implicitly links with -lc since on some
work/fftw-3.3.4/configure:      { $as_echo "$as_me:${as_lineno-$LINENO}: checking whether -lc should be explicitly linked in" >&5
work/fftw-3.3.4/configure:$as_echo_n "checking whether -lc should be explicitly linked in... " >&6; }
work/fftw-3.3.4/configure:	  linker_flags=-v
work/fftw-3.3.4/configure:    { $as_echo "$as_me:${as_lineno-$LINENO}: checking dynamic linker characteristics" >&5
work/fftw-3.3.4/configure:$as_echo_n "checking dynamic linker characteristics... " >&6; }
work/fftw-3.3.4/configure:dynamic_linker="$host_os ld.so"
work/fftw-3.3.4/configure:    # collect2, so additional links can be useful in future.
work/fftw-3.3.4/configure:    if test "$aix_use_runtimelinking" = yes; then
work/fftw-3.3.4/configure:      # If using run time linking (on AIX 4.2 or later) use lib<name>.so
work/fftw-3.3.4/configure:      # and later when we are not doing run time linking.
work/fftw-3.3.4/configure:  dynamic_linker="$host_os ld.so"
work/fftw-3.3.4/configure:  # /usr/X11R6/lib (/usr/X11 is a link to /usr/X11R6), but let us allow
work/fftw-3.3.4/configure:    dynamic_linker='Win32 ld.exe'
work/fftw-3.3.4/configure:    dynamic_linker='Win32 link.exe'
work/fftw-3.3.4/configure:    dynamic_linker='Win32 ld.exe'
work/fftw-3.3.4/configure:  dynamic_linker="$host_os dyld"
work/fftw-3.3.4/configure:  dynamic_linker="$host_os runtime_loader"
work/fftw-3.3.4/configure:  # link against other versions.
work/fftw-3.3.4/configure:    dynamic_linker="$host_os dld.so"
work/fftw-3.3.4/configure:    dynamic_linker="$host_os dld.sl"
work/fftw-3.3.4/configure:    dynamic_linker="$host_os dld.sl"
work/fftw-3.3.4/configure:  dynamic_linker='Interix 3.x ld.so.1 (PE, like ELF)'
work/fftw-3.3.4/configure:  dynamic_linker=no
work/fftw-3.3.4/configure:if ac_fn_f77_try_link "$LINENO"; then :
work/fftw-3.3.4/configure:  # GNU dynamic linker.  Since this was broken with cross compilers,
work/fftw-3.3.4/configure:  # most powerpc-linux boxes support dynamic linking these days and
work/fftw-3.3.4/configure:  # assume the GNU/Linux dynamic linker is in use.
work/fftw-3.3.4/configure:  dynamic_linker='GNU/Linux ld.so'
work/fftw-3.3.4/configure:    dynamic_linker='NetBSD (a.out) ld.so'
work/fftw-3.3.4/configure:    dynamic_linker='NetBSD ld.elf_so'
work/fftw-3.3.4/configure:  dynamic_linker='ldqnx.so'
work/fftw-3.3.4/configure:  dynamic_linker='OS/2 ld.exe'
work/fftw-3.3.4/configure:  dynamic_linker=no
work/fftw-3.3.4/configure:  dynamic_linker=no
work/fftw-3.3.4/configure:{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $dynamic_linker" >&5
work/fftw-3.3.4/configure:$as_echo "$dynamic_linker" >&6; }
work/fftw-3.3.4/configure:test "$dynamic_linker" = no && can_build_shared=no
work/fftw-3.3.4/configure:variables_saved_for_relink="PATH $shlibpath_var $runpath_var"
work/fftw-3.3.4/configure:  variables_saved_for_relink="$variables_saved_for_relink GCC_EXEC_PREFIX COMPILER_PATH LIBRARY_PATH"
work/fftw-3.3.4/configure:     # have to relink, otherwise we might link with an installed library
work/fftw-3.3.4/configure:     # when we should be linking with a yet-to-be-installed one
work/fftw-3.3.4/configure:    hardcode_action_F77=relink
work/fftw-3.3.4/configure:    # We can link without hardcoding, and we can hardcode nonexisting dirs.
work/fftw-3.3.4/configure:if test "$hardcode_action_F77" = relink ||
work/fftw-3.3.4/configure:ac_link='$CC -o conftest$ac_exeext $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'
work/fftw-3.3.4/configure:ac_link='$F77 -o conftest$ac_exeext $FFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'
work/fftw-3.3.4/configure:{ $as_echo "$as_me:${as_lineno-$LINENO}: checking how to get verbose linking output from $F77" >&5
work/fftw-3.3.4/configure:$as_echo_n "checking how to get verbose linking output from $F77... " >&6; }
work/fftw-3.3.4/configure:# Compile and link our simple test program by passing a flag (argument
work/fftw-3.3.4/configure:# "verbose" output that we can then parse for the Fortran linker
work/fftw-3.3.4/configure:eval "set x $ac_link"
work/fftw-3.3.4/configure:ac_f77_v_output=`eval $ac_link 5>&1 2>&1 |
work/fftw-3.3.4/configure:# /foo, /bar, and /baz are search directories for the Fortran linker.
work/fftw-3.3.4/configure:  # and remove "-link" and closing parenthesis.
work/fftw-3.3.4/configure:        s/ -link / /g
work/fftw-3.3.4/configure:   { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: cannot determine how to obtain linking information from $F77" >&5
work/fftw-3.3.4/configure:$as_echo "$as_me: WARNING: cannot determine how to obtain linking information from $F77" >&2;}
work/fftw-3.3.4/configure:# Compile and link our simple test program by passing a flag (argument
work/fftw-3.3.4/configure:# "verbose" output that we can then parse for the Fortran linker
work/fftw-3.3.4/configure:eval "set x $ac_link"
work/fftw-3.3.4/configure:ac_f77_v_output=`eval $ac_link 5>&1 2>&1 |
work/fftw-3.3.4/configure:# /foo, /bar, and /baz are search directories for the Fortran linker.
work/fftw-3.3.4/configure:  # and remove "-link" and closing parenthesis.
work/fftw-3.3.4/configure:        s/ -link / /g
work/fftw-3.3.4/configure:  for ac_link_opt in $ac_arg; do
work/fftw-3.3.4/configure:    ac_cv_f77_libs="$ac_cv_f77_libs -Xlinker $ac_link_opt"
work/fftw-3.3.4/configure:	  |-LANG:=* | -LIST:* | -LNO:* | -link)
work/fftw-3.3.4/configure:  for ac_link_opt in $ac_ld_run_path; do
work/fftw-3.3.4/configure:    ac_cv_f77_libs="$ac_cv_f77_libs -Xlinker $ac_link_opt"
work/fftw-3.3.4/configure:ac_link='$CC -o conftest$ac_exeext $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'
work/fftw-3.3.4/configure:ac_link='$F77 -o conftest$ac_exeext $FFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'
work/fftw-3.3.4/configure:{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for dummy main to link with Fortran 77 libraries" >&5
work/fftw-3.3.4/configure:$as_echo_n "checking for dummy main to link with Fortran 77 libraries... " >&6; }
work/fftw-3.3.4/configure:ac_link='$CC -o conftest$ac_exeext $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'
work/fftw-3.3.4/configure: # First, try linking without a dummy main:
work/fftw-3.3.4/configure:if ac_fn_c_try_link "$LINENO"; then :
work/fftw-3.3.4/configure:if ac_fn_c_try_link "$LINENO"; then :
work/fftw-3.3.4/configure:ac_link='$F77 -o conftest$ac_exeext $FFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'
work/fftw-3.3.4/configure:			{ $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: *** Couldn't figure out how to link C and Fortran; using default Fortran wrappers." >&5
work/fftw-3.3.4/configure:$as_echo "$as_me: WARNING: *** Couldn't figure out how to link C and Fortran; using default Fortran wrappers." >&2;}
work/fftw-3.3.4/configure:ac_link='$CC -o conftest$ac_exeext $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'
work/fftw-3.3.4/configure:ac_link='$F77 -o conftest$ac_exeext $FFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'
work/fftw-3.3.4/configure:ac_link='$CC -o conftest$ac_exeext $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'
work/fftw-3.3.4/configure:if ac_fn_c_try_link "$LINENO"; then :
work/fftw-3.3.4/configure:ac_link='$F77 -o conftest$ac_exeext $FFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'
work/fftw-3.3.4/configure:ac_link='$CC -o conftest$ac_exeext $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'
work/fftw-3.3.4/configure:if ac_fn_c_try_link "$LINENO"; then :
work/fftw-3.3.4/configure:ac_link='$F77 -o conftest$ac_exeext $FFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'
work/fftw-3.3.4/configure:ac_link='$CC -o conftest$ac_exeext $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'
work/fftw-3.3.4/configure:ac_link='$F77 -o conftest$ac_exeext $FFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'
work/fftw-3.3.4/configure:ac_link='$CC -o conftest$ac_exeext $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'
work/fftw-3.3.4/configure:ac_link='$F77 -o conftest$ac_exeext $FFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'
work/fftw-3.3.4/configure:ac_link='$CC -o conftest$ac_exeext $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'
work/fftw-3.3.4/configure:ac_link='$F77 -o conftest$ac_exeext $FFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'
work/fftw-3.3.4/configure:ac_link='$CC -o conftest$ac_exeext $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'
work/fftw-3.3.4/configure:if ac_fn_c_try_link "$LINENO"; then :
work/fftw-3.3.4/configure:if ac_fn_c_try_link "$LINENO"; then :
work/fftw-3.3.4/configure:ac_link='$CC -o conftest$ac_exeext $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'
work/fftw-3.3.4/configure:# It gets checked for in the link test anyway.
work/fftw-3.3.4/configure:# etcetera environment variables, and if threads linking works using
work/fftw-3.3.4/configure:if ac_fn_c_try_link "$LINENO"; then :
work/fftw-3.3.4/configure:# -mt: Sun Workshop C (may only link SunOS threads [-lthread], but it
work/fftw-3.3.4/configure:        # (non-functional) versions of the pthreads routines, so link-based
work/fftw-3.3.4/configure:        # tests will erroneously succeed.  (We need to link with -pthreads/-mt/
work/fftw-3.3.4/configure:if ac_fn_c_try_link "$LINENO"; then :
work/fftw-3.3.4/configure:if ac_fn_c_try_link "$LINENO"; then :
work/fftw-3.3.4/configure:ac_link='$CC -o conftest$ac_exeext $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'
work/fftw-3.3.4/configure:    # 2) DJGPP < 2.04 has no symlinks; `ln -s' creates a wrapper executable.
work/fftw-3.3.4/configure:sharedlib_from_linklib_cmd='`$ECHO "$sharedlib_from_linklib_cmd" | $SED "$delay_single_quote_subst"`'
work/fftw-3.3.4/configure:link_all_deplibs='`$ECHO "$link_all_deplibs" | $SED "$delay_single_quote_subst"`'
work/fftw-3.3.4/configure:prelink_cmds='`$ECHO "$prelink_cmds" | $SED "$delay_single_quote_subst"`'
work/fftw-3.3.4/configure:postlink_cmds='`$ECHO "$postlink_cmds" | $SED "$delay_single_quote_subst"`'
work/fftw-3.3.4/configure:variables_saved_for_relink='`$ECHO "$variables_saved_for_relink" | $SED "$delay_single_quote_subst"`'
work/fftw-3.3.4/configure:link_all_deplibs_F77='`$ECHO "$link_all_deplibs_F77" | $SED "$delay_single_quote_subst"`'
work/fftw-3.3.4/configure:prelink_cmds_F77='`$ECHO "$prelink_cmds_F77" | $SED "$delay_single_quote_subst"`'
work/fftw-3.3.4/configure:postlink_cmds_F77='`$ECHO "$postlink_cmds_F77" | $SED "$delay_single_quote_subst"`'
work/fftw-3.3.4/configure:sharedlib_from_linklib_cmd \
work/fftw-3.3.4/configure:variables_saved_for_relink \
work/fftw-3.3.4/configure:prelink_cmds \
work/fftw-3.3.4/configure:postlink_cmds \
work/fftw-3.3.4/configure:prelink_cmds_F77 \
work/fftw-3.3.4/configure:postlink_cmds_F77; do
work/fftw-3.3.4/configure:# Whether we need soft or hard links.
work/fftw-3.3.4/configure:# Command to associate shared and link libraries.
work/fftw-3.3.4/configure:sharedlib_from_linklib_cmd=$lt_sharedlib_from_linklib_cmd
work/fftw-3.3.4/configure:# restored at link time.
work/fftw-3.3.4/configure:variables_saved_for_relink=$lt_variables_saved_for_relink
work/fftw-3.3.4/configure:# List of archive names.  First name is the real one, the rest are links.
work/fftw-3.3.4/configure:# The last name is the one that the linker finds with -lNAME
work/fftw-3.3.4/configure:# Whether dlopen of statically linked programs is supported.
work/fftw-3.3.4/configure:# The linker used to build libraries.
work/fftw-3.3.4/configure:# How to pass a linker flag through the compiler.
work/fftw-3.3.4/configure:# Compiler flag to prevent dynamic linking.
work/fftw-3.3.4/configure:link_static_flag=$lt_lt_prog_compiler_static
work/fftw-3.3.4/configure:# Create a temporary old-style archive to link instead of a shared archive.
work/fftw-3.3.4/configure:# Flag to hardcode \$libdir into a binary during linking.
work/fftw-3.3.4/configure:# Set to "yes" if using DIR/libNAME\${shared_ext} during linking hardcodes
work/fftw-3.3.4/configure:# Set to "yes" if using DIR/libNAME\${shared_ext} during linking hardcodes
work/fftw-3.3.4/configure:# Set to "yes" if using the -LDIR flag during linking hardcodes DIR
work/fftw-3.3.4/configure:# Set to "yes" if using SHLIBPATH_VAR=DIR during linking hardcodes DIR
work/fftw-3.3.4/configure:# into the library and all subsequent libraries and executables linked
work/fftw-3.3.4/configure:# Set to yes if linker adds runtime paths of dependent libraries
work/fftw-3.3.4/configure:# Whether libtool must link a program against all its dependency libraries.
work/fftw-3.3.4/configure:link_all_deplibs=$link_all_deplibs
work/fftw-3.3.4/configure:# Commands necessary for linking programs (against libraries) with templates.
work/fftw-3.3.4/configure:prelink_cmds=$lt_prelink_cmds
work/fftw-3.3.4/configure:# Commands necessary for finishing linking programs.
work/fftw-3.3.4/configure:postlink_cmds=$lt_postlink_cmds
work/fftw-3.3.4/configure:# The linker used to build libraries.
work/fftw-3.3.4/configure:# How to pass a linker flag through the compiler.
work/fftw-3.3.4/configure:# Compiler flag to prevent dynamic linking.
work/fftw-3.3.4/configure:link_static_flag=$lt_lt_prog_compiler_static_F77
work/fftw-3.3.4/configure:# Create a temporary old-style archive to link instead of a shared archive.
work/fftw-3.3.4/configure:# Flag to hardcode \$libdir into a binary during linking.
work/fftw-3.3.4/configure:# Set to "yes" if using DIR/libNAME\${shared_ext} during linking hardcodes
work/fftw-3.3.4/configure:# Set to "yes" if using DIR/libNAME\${shared_ext} during linking hardcodes
work/fftw-3.3.4/configure:# Set to "yes" if using the -LDIR flag during linking hardcodes DIR
work/fftw-3.3.4/configure:# Set to "yes" if using SHLIBPATH_VAR=DIR during linking hardcodes DIR
work/fftw-3.3.4/configure:# into the library and all subsequent libraries and executables linked
work/fftw-3.3.4/configure:# Set to yes if linker adds runtime paths of dependent libraries
work/fftw-3.3.4/configure:# Whether libtool must link a program against all its dependency libraries.
work/fftw-3.3.4/configure:link_all_deplibs=$link_all_deplibs_F77
work/fftw-3.3.4/configure:# Commands necessary for linking programs (against libraries) with templates.
work/fftw-3.3.4/configure:prelink_cmds=$lt_prelink_cmds_F77
work/fftw-3.3.4/configure:# Commands necessary for finishing linking programs.
work/fftw-3.3.4/configure:postlink_cmds=$lt_postlink_cmds_F77
work/fftw-3.3.4/configure.ac:			AC_MSG_WARN([*** Couldn't figure out how to link C and Fortran; using default Fortran wrappers.])])
work/fftw-3.3.4/dft/Makefile.in:	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
work/fftw-3.3.4/dft/scalar/Makefile.in:	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
work/fftw-3.3.4/dft/scalar/codelets/Makefile.in:	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
work/fftw-3.3.4/dft/simd/altivec/Makefile.in:	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
work/fftw-3.3.4/dft/simd/avx/Makefile.in:	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
work/fftw-3.3.4/dft/simd/neon/Makefile.in:	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
work/fftw-3.3.4/dft/simd/sse2/Makefile.in:	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
work/fftw-3.3.4/doc/FAQ/fftw-faq.ascii: Q3.13       My program does not link (on Unix).
work/fftw-3.3.4/doc/FAQ/fftw-faq.ascii: Q3.14       I included your header, but linking still fails.
work/fftw-3.3.4/doc/FAQ/fftw-faq.ascii:libraries, causing a link failure when FFTW is compiled.  Since ranlib is
work/fftw-3.3.4/doc/FAQ/fftw-faq.ascii:and replacing it with a symbolic link to /bin/echo.
work/fftw-3.3.4/doc/FAQ/fftw-faq.ascii:Most definitely.  FFTW should compile and/or link under any C++ compiler.
work/fftw-3.3.4/doc/FAQ/fftw-faq.ascii: Q3.13       My program does not link (on Unix).
work/fftw-3.3.4/doc/FAQ/fftw-faq.ascii: Q3.14       I included your header, but linking still fails.
work/fftw-3.3.4/doc/FAQ/fftw-faq.ascii:Question 3.13.  My program does not link (on Unix).
work/fftw-3.3.4/doc/FAQ/fftw-faq.ascii:if *A* uses *B*, then *A* must be listed before *B* in the link command.).
work/fftw-3.3.4/doc/FAQ/fftw-faq.ascii:Question 3.14.  I included your header, but linking still fails.
work/fftw-3.3.4/doc/FAQ/fftw-faq.ascii:and link it into your program, not just #include <fftw3.h>.  (Yes, this is
work/fftw-3.3.4/doc/FAQ/fftw-faq.bfnn:observed to corrupt the FFTW libraries, causing a link failure when
work/fftw-3.3.4/doc/FAQ/fftw-faq.bfnn:a symbolic link to \courier{/bin/echo\}.
work/fftw-3.3.4/doc/FAQ/fftw-faq.bfnn:Most definitely.  FFTW should compile and/or link under any C++
work/fftw-3.3.4/doc/FAQ/fftw-faq.bfnn:\question 09apr:linkfails My program does not link (on Unix).
work/fftw-3.3.4/doc/FAQ/fftw-faq.bfnn:\italic{A\} must be listed before \italic{B\} in the link command.).
work/fftw-3.3.4/doc/FAQ/fftw-faq.bfnn:\question 15mar:linkheader I included your header, but linking still fails.
work/fftw-3.3.4/doc/FAQ/fftw-faq.bfnn:library and link it into your program, not just \courier{#include
work/fftw-3.3.4/doc/FAQ/fftw-faq.html/index.html:<link rev="made" href="mailto:fftw@fftw.org">
work/fftw-3.3.4/doc/FAQ/fftw-faq.html/index.html:<link rel="Contents" href="index.html">
work/fftw-3.3.4/doc/FAQ/fftw-faq.html/index.html:<link rel="Start" href="index.html">
work/fftw-3.3.4/doc/FAQ/fftw-faq.html/index.html:<link rel="Bookmark" title="FFTW FAQ" href="index.html">
work/fftw-3.3.4/doc/FAQ/fftw-faq.html/index.html:<li><a href="section3.html#linkfails" rel=subdocument>Q3.13. My program does not link (on Unix).</a>
work/fftw-3.3.4/doc/FAQ/fftw-faq.html/index.html:<li><a href="section3.html#linkheader" rel=subdocument>Q3.14. I included your header, but linking still
work/fftw-3.3.4/doc/FAQ/fftw-faq.html/section1.html:<link rev="made" href="mailto:fftw@fftw.org">
work/fftw-3.3.4/doc/FAQ/fftw-faq.html/section1.html:<link rel="Contents" href="index.html">
work/fftw-3.3.4/doc/FAQ/fftw-faq.html/section1.html:<link rel="Start" href="index.html">
work/fftw-3.3.4/doc/FAQ/fftw-faq.html/section1.html:<link rel="Next" href="section2.html"><link rel="Bookmark" title="FFTW FAQ" href="index.html">
work/fftw-3.3.4/doc/FAQ/fftw-faq.html/section2.html:<link rev="made" href="mailto:fftw@fftw.org">
work/fftw-3.3.4/doc/FAQ/fftw-faq.html/section2.html:<link rel="Contents" href="index.html">
work/fftw-3.3.4/doc/FAQ/fftw-faq.html/section2.html:<link rel="Start" href="index.html">
work/fftw-3.3.4/doc/FAQ/fftw-faq.html/section2.html:<link rel="Next" href="section3.html"><link rel="Previous" href="section1.html"><link rel="Bookmark" title="FFTW FAQ" href="index.html">
work/fftw-3.3.4/doc/FAQ/fftw-faq.html/section2.html:<code>ranlib</code> of GNU <code>binutils</code> 2.9.1 on Irix has been observed to corrupt the FFTW libraries, causing a link failure when
work/fftw-3.3.4/doc/FAQ/fftw-faq.html/section2.html:a symbolic link to <code>/bin/echo</code>.  
work/fftw-3.3.4/doc/FAQ/fftw-faq.html/section2.html:Most definitely.  FFTW should compile and/or link under any C++
work/fftw-3.3.4/doc/FAQ/fftw-faq.html/section3.html:<link rev="made" href="mailto:fftw@fftw.org">
work/fftw-3.3.4/doc/FAQ/fftw-faq.html/section3.html:<link rel="Contents" href="index.html">
work/fftw-3.3.4/doc/FAQ/fftw-faq.html/section3.html:<link rel="Start" href="index.html">
work/fftw-3.3.4/doc/FAQ/fftw-faq.html/section3.html:<link rel="Next" href="section4.html"><link rel="Previous" href="section2.html"><link rel="Bookmark" title="FFTW FAQ" href="index.html">
work/fftw-3.3.4/doc/FAQ/fftw-faq.html/section3.html:<li><a href="#linkfails" rel=subdocument>Q3.13. My program does not link (on Unix).</a>
work/fftw-3.3.4/doc/FAQ/fftw-faq.html/section3.html:<li><a href="#linkheader" rel=subdocument>Q3.14. I included your header, but linking still
work/fftw-3.3.4/doc/FAQ/fftw-faq.html/section3.html:<h2><A name="linkfails">
work/fftw-3.3.4/doc/FAQ/fftw-faq.html/section3.html:Question 3.13.  My program does not link (on
work/fftw-3.3.4/doc/FAQ/fftw-faq.html/section3.html:(<code>-lfftw3 -lm</code> for FFTW 3.x) and <i>after</i> your program sources/objects.  (The general rule is that if <i>A</i> uses <i>B</i>, then <i>A</i> must be listed before <i>B</i> in the link command.).  
work/fftw-3.3.4/doc/FAQ/fftw-faq.html/section3.html:<h2><A name="linkheader">
work/fftw-3.3.4/doc/FAQ/fftw-faq.html/section3.html:Question 3.14.  I included your header, but linking still
work/fftw-3.3.4/doc/FAQ/fftw-faq.html/section3.html:library and link it into your program, not just
work/fftw-3.3.4/doc/FAQ/fftw-faq.html/section4.html:<link rev="made" href="mailto:fftw@fftw.org">
work/fftw-3.3.4/doc/FAQ/fftw-faq.html/section4.html:<link rel="Contents" href="index.html">
work/fftw-3.3.4/doc/FAQ/fftw-faq.html/section4.html:<link rel="Start" href="index.html">
work/fftw-3.3.4/doc/FAQ/fftw-faq.html/section4.html:<link rel="Next" href="section5.html"><link rel="Previous" href="section3.html"><link rel="Bookmark" title="FFTW FAQ" href="index.html">
work/fftw-3.3.4/doc/FAQ/fftw-faq.html/section5.html:<link rev="made" href="mailto:fftw@fftw.org">
work/fftw-3.3.4/doc/FAQ/fftw-faq.html/section5.html:<link rel="Contents" href="index.html">
work/fftw-3.3.4/doc/FAQ/fftw-faq.html/section5.html:<link rel="Start" href="index.html">
work/fftw-3.3.4/doc/FAQ/fftw-faq.html/section5.html:<link rel="Previous" href="section4.html"><link rel="Bookmark" title="FFTW FAQ" href="index.html">
work/fftw-3.3.4/doc/FAQ/m-html.pl:<link rev="made" href="mailto:$user_authormail">
work/fftw-3.3.4/doc/FAQ/m-html.pl:<link rel="Contents" href="index.html">
work/fftw-3.3.4/doc/FAQ/m-html.pl:<link rel="Start" href="index.html">
work/fftw-3.3.4/doc/FAQ/m-html.pl:<link rel="Bookmark" title="FFTW FAQ" href="index.html">
work/fftw-3.3.4/doc/FAQ/m-html.pl:<link rev="made" href="mailto:$user_authormail">
work/fftw-3.3.4/doc/FAQ/m-html.pl:<link rel="Contents" href="index.html">
work/fftw-3.3.4/doc/FAQ/m-html.pl:<link rel="Start" href="index.html">
work/fftw-3.3.4/doc/FAQ/m-html.pl:        print HTML "<link rel=\"Next\" href=\"$next.html\">" if $next;
work/fftw-3.3.4/doc/FAQ/m-html.pl:	print HTML "<link rel=\"Previous\" href=\"$back.html\">" if $back;
work/fftw-3.3.4/doc/FAQ/m-html.pl:<link rel="Bookmark" title="FFTW FAQ" href="index.html">
work/fftw-3.3.4/doc/f77_wisdom.f:c     FFTW-calling programs be required to link to the Fortran I/O
work/fftw-3.3.4/doc/fftw3.info-1:(http://www.fftw.org) also has links to FFT-related information online.  
work/fftw-3.3.4/doc/fftw3.info-1:that links only the subset of FFTW needed by your application.
work/fftw-3.3.4/doc/fftw3.info-1:FFTW, the FAQ, benchmarks, and other links, are available at the FFTW
work/fftw-3.3.4/doc/fftw3.info-1:   You must link this code with the `fftw3' library.  On Unix systems,
work/fftw-3.3.4/doc/fftw3.info-1:link with `-lfftw3 -lm'.
work/fftw-3.3.4/doc/fftw3.info-1:`fftw_' prefix by `fftwf_' or `fftwl_' and link with `-lfftw3f' or
work/fftw-3.3.4/doc/fftw3.info-1:   A program linking to an FFTW library compiled with SIMD support can
work/fftw-3.3.4/doc/fftw3.info-1:your program is ever linked against a SIMD-using FFTW, we recommend
work/fftw-3.3.4/doc/fftw3.info-1:   You must also link to the FFTW library.  On Unix, this means adding
work/fftw-3.3.4/doc/fftw3.info-1:`-lfftw3 -lm' at the _end_ of the link command.
work/fftw-3.3.4/doc/fftw3.info-1:     link to the different-precision libraries simultaneously.)
work/fftw-3.3.4/doc/fftw3.info-1:use this type, link with `-lfftw3q -lquadmath -lm' (the `libquadmath'
work/fftw-3.3.4/doc/fftw3.info-1:latter is a C subroutine that you can compile and link into your
work/fftw-3.3.4/doc/fftw3.info-1:`fftw-wisdom-to-conf' produces a configuration routine that links to
work/fftw-3.3.4/doc/fftw3.info-1:greatly reducing the size of statically linked executables (which should
work/fftw-3.3.4/doc/fftw3.info-1:However, your programs may only link to _one_ of these two libraries at
work/fftw-3.3.4/doc/fftw3.info-1:linked with `-lfftw3_threads -lfftw3 -lm' on Unix, or `-lfftw3_omp
work/fftw-3.3.4/doc/fftw3.info-1:-lfftw3 -lm' if you compiled with OpenMP. You will also need to link
work/fftw-3.3.4/doc/fftw3.info-1:detect how to compile and link code using your MPI implementation.  In
work/fftw-3.3.4/doc/fftw3.info-1:   If, instead of a special compiler command, you need to link a certain
work/fftw-3.3.4/doc/fftw3.info-1:library, you can specify the link command via the `MPILIBS' variable,
work/fftw-3.3.4/doc/fftw3.info-1:Programs using the MPI FFTW routines should be linked with `-lfftw3_mpi
work/fftw-3.3.4/doc/fftw3.info-1:to link with whatever library is responsible for MPI on your system; in
work/fftw-3.3.4/doc/fftw3.info-1:`mpicc' to compile and link MPI code.  
work/fftw-3.3.4/doc/fftw3.info-1:   You must also link to _both_ the FFTW MPI library and to the serial
work/fftw-3.3.4/doc/fftw3.info-1:the end of the link command.
work/fftw-3.3.4/doc/fftw3.info-1:also link with `-lfftw3q -lquadmath -lm' as in C.
work/fftw-3.3.4/doc/fftw3.info-1:     `fftwl_' for the different precisions, and link to different
work/fftw-3.3.4/doc/fftw3.info-1:   as usual for Fortran modules.  (You still need to link to the FFTW
work/fftw-3.3.4/doc/fftw3.info-1:enforces this limitation doesn't deserve to link to FFTW.
work/fftw-3.3.4/doc/fftw3.info-1:itself, lest all FFTW-using programs be required to link with the
work/fftw-3.3.4/doc/fftw3.info-1:versions; codes written to use those versions will fail to link with
work/fftw-3.3.4/doc/fftw3.info-1:prototypes are in `<fftw3.h>'.  However, you still have to link to a
work/fftw-3.3.4/doc/fftw3.info-1:     must be linked in addition to the main FFTW library.  This is so
work/fftw-3.3.4/doc/fftw3.info-1:     that users of the serial library do not need to link the system
work/fftw-3.3.4/doc/fftw3.info-1:     included, the wrappers employ the linking conventions of the
work/fftw-3.3.4/doc/fftw3.info-1:          `-mabi=altivec' option when compiling any code that links to
work/fftw-3.3.4/doc/fftw3.info-1:          properly aligns the stack when compiling any code that links
work/fftw-3.3.4/doc/fftw3.info-1:   Once these files are all compiled, link them into a library, or a
work/fftw-3.3.4/doc/fftw3.info-1:the `libbench2/' directory, and link it into a library.  Then compile
work/fftw-3.3.4/doc/fftw3.info-1:the code in the `tests/' directory and link it to the `libbench2' and
work/fftw-3.3.4/doc/fftw3.info-1:(*note Wisdom Utilities::), compile `tools/fftw-wisdom.c' and link it
Binary file work/fftw-3.3.4/doc/fftw3.info-2 matches
work/fftw-3.3.4/doc/html/1d-Discrete-Hartley-Transforms-_0028DHTs_0029.html:<link title="Top" rel="start" href="index.html#Top">
work/fftw-3.3.4/doc/html/1d-Discrete-Hartley-Transforms-_0028DHTs_0029.html:<link rel="up" href="What-FFTW-Really-Computes.html#What-FFTW-Really-Computes" title="What FFTW Really Computes">
work/fftw-3.3.4/doc/html/1d-Discrete-Hartley-Transforms-_0028DHTs_0029.html:<link rel="prev" href="1d-Real_002dodd-DFTs-_0028DSTs_0029.html#g_t1d-Real_002dodd-DFTs-_0028DSTs_0029" title="1d Real-odd DFTs (DSTs)">
work/fftw-3.3.4/doc/html/1d-Discrete-Hartley-Transforms-_0028DHTs_0029.html:<link rel="next" href="Multi_002ddimensional-Transforms.html#Multi_002ddimensional-Transforms" title="Multi-dimensional Transforms">
work/fftw-3.3.4/doc/html/1d-Discrete-Hartley-Transforms-_0028DHTs_0029.html:<link href="http://www.gnu.org/software/texinfo/" rel="generator-home" title="Texinfo Homepage">
work/fftw-3.3.4/doc/html/1d-Real_002deven-DFTs-_0028DCTs_0029.html:<link title="Top" rel="start" href="index.html#Top">
work/fftw-3.3.4/doc/html/1d-Real_002deven-DFTs-_0028DCTs_0029.html:<link rel="up" href="What-FFTW-Really-Computes.html#What-FFTW-Really-Computes" title="What FFTW Really Computes">
work/fftw-3.3.4/doc/html/1d-Real_002deven-DFTs-_0028DCTs_0029.html:<link rel="prev" href="The-1d-Real_002ddata-DFT.html#The-1d-Real_002ddata-DFT" title="The 1d Real-data DFT">
work/fftw-3.3.4/doc/html/1d-Real_002deven-DFTs-_0028DCTs_0029.html:<link rel="next" href="1d-Real_002dodd-DFTs-_0028DSTs_0029.html#g_t1d-Real_002dodd-DFTs-_0028DSTs_0029" title="1d Real-odd DFTs (DSTs)">
work/fftw-3.3.4/doc/html/1d-Real_002deven-DFTs-_0028DCTs_0029.html:<link href="http://www.gnu.org/software/texinfo/" rel="generator-home" title="Texinfo Homepage">
work/fftw-3.3.4/doc/html/1d-Real_002dodd-DFTs-_0028DSTs_0029.html:<link title="Top" rel="start" href="index.html#Top">
work/fftw-3.3.4/doc/html/1d-Real_002dodd-DFTs-_0028DSTs_0029.html:<link rel="up" href="What-FFTW-Really-Computes.html#What-FFTW-Really-Computes" title="What FFTW Really Computes">
work/fftw-3.3.4/doc/html/1d-Real_002dodd-DFTs-_0028DSTs_0029.html:<link rel="prev" href="1d-Real_002deven-DFTs-_0028DCTs_0029.html#g_t1d-Real_002deven-DFTs-_0028DCTs_0029" title="1d Real-even DFTs (DCTs)">
work/fftw-3.3.4/doc/html/1d-Real_002dodd-DFTs-_0028DSTs_0029.html:<link rel="next" href="1d-Discrete-Hartley-Transforms-_0028DHTs_0029.html#g_t1d-Discrete-Hartley-Transforms-_0028DHTs_0029" title="1d Discrete Hartley Transforms (DHTs)">
work/fftw-3.3.4/doc/html/1d-Real_002dodd-DFTs-_0028DSTs_0029.html:<link href="http://www.gnu.org/software/texinfo/" rel="generator-home" title="Texinfo Homepage">
work/fftw-3.3.4/doc/html/2d-MPI-example.html:<link title="Top" rel="start" href="index.html#Top">
work/fftw-3.3.4/doc/html/2d-MPI-example.html:<link rel="up" href="Distributed_002dmemory-FFTW-with-MPI.html#Distributed_002dmemory-FFTW-with-MPI" title="Distributed-memory FFTW with MPI">
work/fftw-3.3.4/doc/html/2d-MPI-example.html:<link rel="prev" href="Linking-and-Initializing-MPI-FFTW.html#Linking-and-Initializing-MPI-FFTW" title="Linking and Initializing MPI FFTW">
work/fftw-3.3.4/doc/html/2d-MPI-example.html:<link rel="next" href="MPI-Data-Distribution.html#MPI-Data-Distribution" title="MPI Data Distribution">
work/fftw-3.3.4/doc/html/2d-MPI-example.html:<link href="http://www.gnu.org/software/texinfo/" rel="generator-home" title="Texinfo Homepage">
work/fftw-3.3.4/doc/html/64_002dbit-Guru-Interface.html:<link title="Top" rel="start" href="index.html#Top">
work/fftw-3.3.4/doc/html/64_002dbit-Guru-Interface.html:<link rel="up" href="Guru-Interface.html#Guru-Interface" title="Guru Interface">
work/fftw-3.3.4/doc/html/64_002dbit-Guru-Interface.html:<link rel="prev" href="Guru-Real_002dto_002dreal-Transforms.html#Guru-Real_002dto_002dreal-Transforms" title="Guru Real-to-real Transforms">
work/fftw-3.3.4/doc/html/64_002dbit-Guru-Interface.html:<link href="http://www.gnu.org/software/texinfo/" rel="generator-home" title="Texinfo Homepage">
work/fftw-3.3.4/doc/html/Accessing-the-wisdom-API-from-Fortran.html:<link title="Top" rel="start" href="index.html#Top">
work/fftw-3.3.4/doc/html/Accessing-the-wisdom-API-from-Fortran.html:<link rel="up" href="Calling-FFTW-from-Modern-Fortran.html#Calling-FFTW-from-Modern-Fortran" title="Calling FFTW from Modern Fortran">
work/fftw-3.3.4/doc/html/Accessing-the-wisdom-API-from-Fortran.html:<link rel="prev" href="Allocating-aligned-memory-in-Fortran.html#Allocating-aligned-memory-in-Fortran" title="Allocating aligned memory in Fortran">
work/fftw-3.3.4/doc/html/Accessing-the-wisdom-API-from-Fortran.html:<link rel="next" href="Defining-an-FFTW-module.html#Defining-an-FFTW-module" title="Defining an FFTW module">
work/fftw-3.3.4/doc/html/Accessing-the-wisdom-API-from-Fortran.html:<link href="http://www.gnu.org/software/texinfo/" rel="generator-home" title="Texinfo Homepage">
work/fftw-3.3.4/doc/html/Acknowledgments.html:<link title="Top" rel="start" href="index.html#Top">
work/fftw-3.3.4/doc/html/Acknowledgments.html:<link rel="prev" href="Installation-and-Customization.html#Installation-and-Customization" title="Installation and Customization">
work/fftw-3.3.4/doc/html/Acknowledgments.html:<link rel="next" href="License-and-Copyright.html#License-and-Copyright" title="License and Copyright">
work/fftw-3.3.4/doc/html/Acknowledgments.html:<link href="http://www.gnu.org/software/texinfo/" rel="generator-home" title="Texinfo Homepage">
work/fftw-3.3.4/doc/html/Advanced-Complex-DFTs.html:<link title="Top" rel="start" href="index.html#Top">
work/fftw-3.3.4/doc/html/Advanced-Complex-DFTs.html:<link rel="up" href="Advanced-Interface.html#Advanced-Interface" title="Advanced Interface">
work/fftw-3.3.4/doc/html/Advanced-Complex-DFTs.html:<link rel="prev" href="Advanced-Interface.html#Advanced-Interface" title="Advanced Interface">
work/fftw-3.3.4/doc/html/Advanced-Complex-DFTs.html:<link rel="next" href="Advanced-Real_002ddata-DFTs.html#Advanced-Real_002ddata-DFTs" title="Advanced Real-data DFTs">
work/fftw-3.3.4/doc/html/Advanced-Complex-DFTs.html:<link href="http://www.gnu.org/software/texinfo/" rel="generator-home" title="Texinfo Homepage">
work/fftw-3.3.4/doc/html/Advanced-Interface.html:<link title="Top" rel="start" href="index.html#Top">
work/fftw-3.3.4/doc/html/Advanced-Interface.html:<link rel="up" href="FFTW-Reference.html#FFTW-Reference" title="FFTW Reference">
work/fftw-3.3.4/doc/html/Advanced-Interface.html:<link rel="prev" href="Basic-Interface.html#Basic-Interface" title="Basic Interface">
work/fftw-3.3.4/doc/html/Advanced-Interface.html:<link rel="next" href="Guru-Interface.html#Guru-Interface" title="Guru Interface">
work/fftw-3.3.4/doc/html/Advanced-Interface.html:<link href="http://www.gnu.org/software/texinfo/" rel="generator-home" title="Texinfo Homepage">
work/fftw-3.3.4/doc/html/Advanced-Real_002ddata-DFTs.html:<link title="Top" rel="start" href="index.html#Top">
work/fftw-3.3.4/doc/html/Advanced-Real_002ddata-DFTs.html:<link rel="up" href="Advanced-Interface.html#Advanced-Interface" title="Advanced Interface">
work/fftw-3.3.4/doc/html/Advanced-Real_002ddata-DFTs.html:<link rel="prev" href="Advanced-Complex-DFTs.html#Advanced-Complex-DFTs" title="Advanced Complex DFTs">
work/fftw-3.3.4/doc/html/Advanced-Real_002ddata-DFTs.html:<link rel="next" href="Advanced-Real_002dto_002dreal-Transforms.html#Advanced-Real_002dto_002dreal-Transforms" title="Advanced Real-to-real Transforms">
work/fftw-3.3.4/doc/html/Advanced-Real_002ddata-DFTs.html:<link href="http://www.gnu.org/software/texinfo/" rel="generator-home" title="Texinfo Homepage">
work/fftw-3.3.4/doc/html/Advanced-Real_002dto_002dreal-Transforms.html:<link title="Top" rel="start" href="index.html#Top">
work/fftw-3.3.4/doc/html/Advanced-Real_002dto_002dreal-Transforms.html:<link rel="up" href="Advanced-Interface.html#Advanced-Interface" title="Advanced Interface">
work/fftw-3.3.4/doc/html/Advanced-Real_002dto_002dreal-Transforms.html:<link rel="prev" href="Advanced-Real_002ddata-DFTs.html#Advanced-Real_002ddata-DFTs" title="Advanced Real-data DFTs">
work/fftw-3.3.4/doc/html/Advanced-Real_002dto_002dreal-Transforms.html:<link href="http://www.gnu.org/software/texinfo/" rel="generator-home" title="Texinfo Homepage">
work/fftw-3.3.4/doc/html/Advanced-distributed_002dtranspose-interface.html:<link title="Top" rel="start" href="index.html#Top">
work/fftw-3.3.4/doc/html/Advanced-distributed_002dtranspose-interface.html:<link rel="up" href="FFTW-MPI-Transposes.html#FFTW-MPI-Transposes" title="FFTW MPI Transposes">
work/fftw-3.3.4/doc/html/Advanced-distributed_002dtranspose-interface.html:<link rel="prev" href="Basic-distributed_002dtranspose-interface.html#Basic-distributed_002dtranspose-interface" title="Basic distributed-transpose interface">
work/fftw-3.3.4/doc/html/Advanced-distributed_002dtranspose-interface.html:<link rel="next" href="An-improved-replacement-for-MPI_005fAlltoall.html#An-improved-replacement-for-MPI_005fAlltoall" title="An improved replacement for MPI_Alltoall">
work/fftw-3.3.4/doc/html/Advanced-distributed_002dtranspose-interface.html:<link href="http://www.gnu.org/software/texinfo/" rel="generator-home" title="Texinfo Homepage">
work/fftw-3.3.4/doc/html/Allocating-aligned-memory-in-Fortran.html:<link title="Top" rel="start" href="index.html#Top">
work/fftw-3.3.4/doc/html/Allocating-aligned-memory-in-Fortran.html:<link rel="up" href="Calling-FFTW-from-Modern-Fortran.html#Calling-FFTW-from-Modern-Fortran" title="Calling FFTW from Modern Fortran">
work/fftw-3.3.4/doc/html/Allocating-aligned-memory-in-Fortran.html:<link rel="prev" href="Plan-execution-in-Fortran.html#Plan-execution-in-Fortran" title="Plan execution in Fortran">
work/fftw-3.3.4/doc/html/Allocating-aligned-memory-in-Fortran.html:<link rel="next" href="Accessing-the-wisdom-API-from-Fortran.html#Accessing-the-wisdom-API-from-Fortran" title="Accessing the wisdom API from Fortran">
work/fftw-3.3.4/doc/html/Allocating-aligned-memory-in-Fortran.html:<link href="http://www.gnu.org/software/texinfo/" rel="generator-home" title="Texinfo Homepage">
work/fftw-3.3.4/doc/html/An-improved-replacement-for-MPI_005fAlltoall.html:<link title="Top" rel="start" href="index.html#Top">
work/fftw-3.3.4/doc/html/An-improved-replacement-for-MPI_005fAlltoall.html:<link rel="up" href="FFTW-MPI-Transposes.html#FFTW-MPI-Transposes" title="FFTW MPI Transposes">
work/fftw-3.3.4/doc/html/An-improved-replacement-for-MPI_005fAlltoall.html:<link rel="prev" href="Advanced-distributed_002dtranspose-interface.html#Advanced-distributed_002dtranspose-interface" title="Advanced distributed-transpose interface">
work/fftw-3.3.4/doc/html/An-improved-replacement-for-MPI_005fAlltoall.html:<link href="http://www.gnu.org/software/texinfo/" rel="generator-home" title="Texinfo Homepage">
work/fftw-3.3.4/doc/html/Avoiding-MPI-Deadlocks.html:<link title="Top" rel="start" href="index.html#Top">
work/fftw-3.3.4/doc/html/Avoiding-MPI-Deadlocks.html:<link rel="up" href="Distributed_002dmemory-FFTW-with-MPI.html#Distributed_002dmemory-FFTW-with-MPI" title="Distributed-memory FFTW with MPI">
work/fftw-3.3.4/doc/html/Avoiding-MPI-Deadlocks.html:<link rel="prev" href="FFTW-MPI-Wisdom.html#FFTW-MPI-Wisdom" title="FFTW MPI Wisdom">
work/fftw-3.3.4/doc/html/Avoiding-MPI-Deadlocks.html:<link rel="next" href="FFTW-MPI-Performance-Tips.html#FFTW-MPI-Performance-Tips" title="FFTW MPI Performance Tips">
work/fftw-3.3.4/doc/html/Avoiding-MPI-Deadlocks.html:<link href="http://www.gnu.org/software/texinfo/" rel="generator-home" title="Texinfo Homepage">
work/fftw-3.3.4/doc/html/Basic-Interface.html:<link title="Top" rel="start" href="index.html#Top">
work/fftw-3.3.4/doc/html/Basic-Interface.html:<link rel="up" href="FFTW-Reference.html#FFTW-Reference" title="FFTW Reference">
work/fftw-3.3.4/doc/html/Basic-Interface.html:<link rel="prev" href="Using-Plans.html#Using-Plans" title="Using Plans">
work/fftw-3.3.4/doc/html/Basic-Interface.html:<link rel="next" href="Advanced-Interface.html#Advanced-Interface" title="Advanced Interface">
work/fftw-3.3.4/doc/html/Basic-Interface.html:<link href="http://www.gnu.org/software/texinfo/" rel="generator-home" title="Texinfo Homepage">
work/fftw-3.3.4/doc/html/Basic-and-advanced-distribution-interfaces.html:<link title="Top" rel="start" href="index.html#Top">
work/fftw-3.3.4/doc/html/Basic-and-advanced-distribution-interfaces.html:<link rel="up" href="MPI-Data-Distribution.html#MPI-Data-Distribution" title="MPI Data Distribution">
work/fftw-3.3.4/doc/html/Basic-and-advanced-distribution-interfaces.html:<link rel="prev" href="MPI-Data-Distribution.html#MPI-Data-Distribution" title="MPI Data Distribution">
work/fftw-3.3.4/doc/html/Basic-and-advanced-distribution-interfaces.html:<link rel="next" href="Load-balancing.html#Load-balancing" title="Load balancing">
work/fftw-3.3.4/doc/html/Basic-and-advanced-distribution-interfaces.html:<link href="http://www.gnu.org/software/texinfo/" rel="generator-home" title="Texinfo Homepage">
work/fftw-3.3.4/doc/html/Basic-distributed_002dtranspose-interface.html:<link title="Top" rel="start" href="index.html#Top">
work/fftw-3.3.4/doc/html/Basic-distributed_002dtranspose-interface.html:<link rel="up" href="FFTW-MPI-Transposes.html#FFTW-MPI-Transposes" title="FFTW MPI Transposes">
work/fftw-3.3.4/doc/html/Basic-distributed_002dtranspose-interface.html:<link rel="prev" href="FFTW-MPI-Transposes.html#FFTW-MPI-Transposes" title="FFTW MPI Transposes">
work/fftw-3.3.4/doc/html/Basic-distributed_002dtranspose-interface.html:<link rel="next" href="Advanced-distributed_002dtranspose-interface.html#Advanced-distributed_002dtranspose-interface" title="Advanced distributed-transpose interface">
work/fftw-3.3.4/doc/html/Basic-distributed_002dtranspose-interface.html:<link href="http://www.gnu.org/software/texinfo/" rel="generator-home" title="Texinfo Homepage">
work/fftw-3.3.4/doc/html/Calling-FFTW-from-Legacy-Fortran.html:<link title="Top" rel="start" href="index.html#Top">
work/fftw-3.3.4/doc/html/Calling-FFTW-from-Legacy-Fortran.html:<link rel="prev" href="Calling-FFTW-from-Modern-Fortran.html#Calling-FFTW-from-Modern-Fortran" title="Calling FFTW from Modern Fortran">
work/fftw-3.3.4/doc/html/Calling-FFTW-from-Legacy-Fortran.html:<link rel="next" href="Upgrading-from-FFTW-version-2.html#Upgrading-from-FFTW-version-2" title="Upgrading from FFTW version 2">
work/fftw-3.3.4/doc/html/Calling-FFTW-from-Legacy-Fortran.html:<link href="http://www.gnu.org/software/texinfo/" rel="generator-home" title="Texinfo Homepage">
work/fftw-3.3.4/doc/html/Calling-FFTW-from-Modern-Fortran.html:<link title="Top" rel="start" href="index.html#Top">
work/fftw-3.3.4/doc/html/Calling-FFTW-from-Modern-Fortran.html:<link rel="prev" href="Distributed_002dmemory-FFTW-with-MPI.html#Distributed_002dmemory-FFTW-with-MPI" title="Distributed-memory FFTW with MPI">
work/fftw-3.3.4/doc/html/Calling-FFTW-from-Modern-Fortran.html:<link rel="next" href="Calling-FFTW-from-Legacy-Fortran.html#Calling-FFTW-from-Legacy-Fortran" title="Calling FFTW from Legacy Fortran">
work/fftw-3.3.4/doc/html/Calling-FFTW-from-Modern-Fortran.html:<link href="http://www.gnu.org/software/texinfo/" rel="generator-home" title="Texinfo Homepage">
work/fftw-3.3.4/doc/html/Caveats-in-Using-Wisdom.html:<link title="Top" rel="start" href="index.html#Top">
work/fftw-3.3.4/doc/html/Caveats-in-Using-Wisdom.html:<link rel="up" href="Other-Important-Topics.html#Other-Important-Topics" title="Other Important Topics">
work/fftw-3.3.4/doc/html/Caveats-in-Using-Wisdom.html:<link rel="prev" href="Words-of-Wisdom_002dSaving-Plans.html#Words-of-Wisdom_002dSaving-Plans" title="Words of Wisdom-Saving Plans">
work/fftw-3.3.4/doc/html/Caveats-in-Using-Wisdom.html:<link href="http://www.gnu.org/software/texinfo/" rel="generator-home" title="Texinfo Homepage">
work/fftw-3.3.4/doc/html/Column_002dmajor-Format.html:<link title="Top" rel="start" href="index.html#Top">
work/fftw-3.3.4/doc/html/Column_002dmajor-Format.html:<link rel="up" href="Multi_002ddimensional-Array-Format.html#Multi_002ddimensional-Array-Format" title="Multi-dimensional Array Format">
work/fftw-3.3.4/doc/html/Column_002dmajor-Format.html:<link rel="prev" href="Row_002dmajor-Format.html#Row_002dmajor-Format" title="Row-major Format">
work/fftw-3.3.4/doc/html/Column_002dmajor-Format.html:<link rel="next" href="Fixed_002dsize-Arrays-in-C.html#Fixed_002dsize-Arrays-in-C" title="Fixed-size Arrays in C">
work/fftw-3.3.4/doc/html/Column_002dmajor-Format.html:<link href="http://www.gnu.org/software/texinfo/" rel="generator-home" title="Texinfo Homepage">
work/fftw-3.3.4/doc/html/Combining-MPI-and-Threads.html:<link title="Top" rel="start" href="index.html#Top">
work/fftw-3.3.4/doc/html/Combining-MPI-and-Threads.html:<link rel="up" href="Distributed_002dmemory-FFTW-with-MPI.html#Distributed_002dmemory-FFTW-with-MPI" title="Distributed-memory FFTW with MPI">
work/fftw-3.3.4/doc/html/Combining-MPI-and-Threads.html:<link rel="prev" href="FFTW-MPI-Performance-Tips.html#FFTW-MPI-Performance-Tips" title="FFTW MPI Performance Tips">
work/fftw-3.3.4/doc/html/Combining-MPI-and-Threads.html:<link rel="next" href="FFTW-MPI-Reference.html#FFTW-MPI-Reference" title="FFTW MPI Reference">
work/fftw-3.3.4/doc/html/Combining-MPI-and-Threads.html:<link href="http://www.gnu.org/software/texinfo/" rel="generator-home" title="Texinfo Homepage">
work/fftw-3.3.4/doc/html/Complex-DFTs.html:<link title="Top" rel="start" href="index.html#Top">
work/fftw-3.3.4/doc/html/Complex-DFTs.html:<link rel="up" href="Basic-Interface.html#Basic-Interface" title="Basic Interface">
work/fftw-3.3.4/doc/html/Complex-DFTs.html:<link rel="prev" href="Basic-Interface.html#Basic-Interface" title="Basic Interface">
work/fftw-3.3.4/doc/html/Complex-DFTs.html:<link rel="next" href="Planner-Flags.html#Planner-Flags" title="Planner Flags">
work/fftw-3.3.4/doc/html/Complex-DFTs.html:<link href="http://www.gnu.org/software/texinfo/" rel="generator-home" title="Texinfo Homepage">
work/fftw-3.3.4/doc/html/Complex-Multi_002dDimensional-DFTs.html:<link title="Top" rel="start" href="index.html#Top">
work/fftw-3.3.4/doc/html/Complex-Multi_002dDimensional-DFTs.html:<link rel="up" href="Tutorial.html#Tutorial" title="Tutorial">
work/fftw-3.3.4/doc/html/Complex-Multi_002dDimensional-DFTs.html:<link rel="prev" href="Complex-One_002dDimensional-DFTs.html#Complex-One_002dDimensional-DFTs" title="Complex One-Dimensional DFTs">
work/fftw-3.3.4/doc/html/Complex-Multi_002dDimensional-DFTs.html:<link rel="next" href="One_002dDimensional-DFTs-of-Real-Data.html#One_002dDimensional-DFTs-of-Real-Data" title="One-Dimensional DFTs of Real Data">
work/fftw-3.3.4/doc/html/Complex-Multi_002dDimensional-DFTs.html:<link href="http://www.gnu.org/software/texinfo/" rel="generator-home" title="Texinfo Homepage">
work/fftw-3.3.4/doc/html/Complex-One_002dDimensional-DFTs.html:<link title="Top" rel="start" href="index.html#Top">
work/fftw-3.3.4/doc/html/Complex-One_002dDimensional-DFTs.html:<link rel="up" href="Tutorial.html#Tutorial" title="Tutorial">
work/fftw-3.3.4/doc/html/Complex-One_002dDimensional-DFTs.html:<link rel="prev" href="Tutorial.html#Tutorial" title="Tutorial">
work/fftw-3.3.4/doc/html/Complex-One_002dDimensional-DFTs.html:<link rel="next" href="Complex-Multi_002dDimensional-DFTs.html#Complex-Multi_002dDimensional-DFTs" title="Complex Multi-Dimensional DFTs">
work/fftw-3.3.4/doc/html/Complex-One_002dDimensional-DFTs.html:<link href="http://www.gnu.org/software/texinfo/" rel="generator-home" title="Texinfo Homepage">
work/fftw-3.3.4/doc/html/Complex-One_002dDimensional-DFTs.html:   <p>You must link this code with the <code>fftw3</code> library.  On Unix systems,
work/fftw-3.3.4/doc/html/Complex-One_002dDimensional-DFTs.html:link with <code>-lfftw3 -lm</code>.
work/fftw-3.3.4/doc/html/Complex-One_002dDimensional-DFTs.html:<code>fftw_</code> prefix by <code>fftwf_</code> or <code>fftwl_</code> and link with
work/fftw-3.3.4/doc/html/Complex-numbers.html:<link title="Top" rel="start" href="index.html#Top">
work/fftw-3.3.4/doc/html/Complex-numbers.html:<link rel="up" href="Data-Types-and-Files.html#Data-Types-and-Files" title="Data Types and Files">
work/fftw-3.3.4/doc/html/Complex-numbers.html:<link rel="prev" href="Data-Types-and-Files.html#Data-Types-and-Files" title="Data Types and Files">
work/fftw-3.3.4/doc/html/Complex-numbers.html:<link rel="next" href="Precision.html#Precision" title="Precision">
work/fftw-3.3.4/doc/html/Complex-numbers.html:<link href="http://www.gnu.org/software/texinfo/" rel="generator-home" title="Texinfo Homepage">
work/fftw-3.3.4/doc/html/Concept-Index.html:<link title="Top" rel="start" href="index.html#Top">
work/fftw-3.3.4/doc/html/Concept-Index.html:<link rel="prev" href="License-and-Copyright.html#License-and-Copyright" title="License and Copyright">
work/fftw-3.3.4/doc/html/Concept-Index.html:<link rel="next" href="Library-Index.html#Library-Index" title="Library Index">
work/fftw-3.3.4/doc/html/Concept-Index.html:<link href="http://www.gnu.org/software/texinfo/" rel="generator-home" title="Texinfo Homepage">
work/fftw-3.3.4/doc/html/Concept-Index.html:<li><a href="Linking-and-Initializing-MPI-FFTW.html#index-linking-on-Unix-355">linking on Unix</a>: <a href="Linking-and-Initializing-MPI-FFTW.html#Linking-and-Initializing-MPI-FFTW">Linking and Initializing MPI FFTW</a></li>
work/fftw-3.3.4/doc/html/Concept-Index.html:<li><a href="Usage-of-Multi_002dthreaded-FFTW.html#index-linking-on-Unix-336">linking on Unix</a>: <a href="Usage-of-Multi_002dthreaded-FFTW.html#Usage-of-Multi_002dthreaded-FFTW">Usage of Multi-threaded FFTW</a></li>
work/fftw-3.3.4/doc/html/Cycle-Counters.html:<link title="Top" rel="start" href="index.html#Top">
work/fftw-3.3.4/doc/html/Cycle-Counters.html:<link rel="up" href="Installation-and-Customization.html#Installation-and-Customization" title="Installation and Customization">
work/fftw-3.3.4/doc/html/Cycle-Counters.html:<link rel="prev" href="Installation-on-non_002dUnix-systems.html#Installation-on-non_002dUnix-systems" title="Installation on non-Unix systems">
work/fftw-3.3.4/doc/html/Cycle-Counters.html:<link rel="next" href="Generating-your-own-code.html#Generating-your-own-code" title="Generating your own code">
work/fftw-3.3.4/doc/html/Cycle-Counters.html:<link href="http://www.gnu.org/software/texinfo/" rel="generator-home" title="Texinfo Homepage">
work/fftw-3.3.4/doc/html/Data-Types-and-Files.html:<link title="Top" rel="start" href="index.html#Top">
work/fftw-3.3.4/doc/html/Data-Types-and-Files.html:<link rel="up" href="FFTW-Reference.html#FFTW-Reference" title="FFTW Reference">
work/fftw-3.3.4/doc/html/Data-Types-and-Files.html:<link rel="prev" href="FFTW-Reference.html#FFTW-Reference" title="FFTW Reference">
work/fftw-3.3.4/doc/html/Data-Types-and-Files.html:<link rel="next" href="Using-Plans.html#Using-Plans" title="Using Plans">
work/fftw-3.3.4/doc/html/Data-Types-and-Files.html:<link href="http://www.gnu.org/software/texinfo/" rel="generator-home" title="Texinfo Homepage">
work/fftw-3.3.4/doc/html/Data-Types-and-Files.html:   <p>You must also link to the FFTW library.  On Unix, this
work/fftw-3.3.4/doc/html/Data-Types-and-Files.html:means adding <code>-lfftw3 -lm</code> at the <em>end</em> of the link command.
work/fftw-3.3.4/doc/html/Defining-an-FFTW-module.html:<link title="Top" rel="start" href="index.html#Top">
work/fftw-3.3.4/doc/html/Defining-an-FFTW-module.html:<link rel="up" href="Calling-FFTW-from-Modern-Fortran.html#Calling-FFTW-from-Modern-Fortran" title="Calling FFTW from Modern Fortran">
work/fftw-3.3.4/doc/html/Defining-an-FFTW-module.html:<link rel="prev" href="Accessing-the-wisdom-API-from-Fortran.html#Accessing-the-wisdom-API-from-Fortran" title="Accessing the wisdom API from Fortran">
work/fftw-3.3.4/doc/html/Defining-an-FFTW-module.html:<link href="http://www.gnu.org/software/texinfo/" rel="generator-home" title="Texinfo Homepage">
work/fftw-3.3.4/doc/html/Defining-an-FFTW-module.html:   <p>as usual for Fortran modules.  (You still need to link to the FFTW
work/fftw-3.3.4/doc/html/Distributed_002dmemory-FFTW-with-MPI.html:<link title="Top" rel="start" href="index.html#Top">
work/fftw-3.3.4/doc/html/Distributed_002dmemory-FFTW-with-MPI.html:<link rel="prev" href="Multi_002dthreaded-FFTW.html#Multi_002dthreaded-FFTW" title="Multi-threaded FFTW">
work/fftw-3.3.4/doc/html/Distributed_002dmemory-FFTW-with-MPI.html:<link rel="next" href="Calling-FFTW-from-Modern-Fortran.html#Calling-FFTW-from-Modern-Fortran" title="Calling FFTW from Modern Fortran">
work/fftw-3.3.4/doc/html/Distributed_002dmemory-FFTW-with-MPI.html:<link href="http://www.gnu.org/software/texinfo/" rel="generator-home" title="Texinfo Homepage">
work/fftw-3.3.4/doc/html/Dynamic-Arrays-in-C.html:<link title="Top" rel="start" href="index.html#Top">
work/fftw-3.3.4/doc/html/Dynamic-Arrays-in-C.html:<link rel="up" href="Multi_002ddimensional-Array-Format.html#Multi_002ddimensional-Array-Format" title="Multi-dimensional Array Format">
work/fftw-3.3.4/doc/html/Dynamic-Arrays-in-C.html:<link rel="prev" href="Fixed_002dsize-Arrays-in-C.html#Fixed_002dsize-Arrays-in-C" title="Fixed-size Arrays in C">
work/fftw-3.3.4/doc/html/Dynamic-Arrays-in-C.html:<link rel="next" href="Dynamic-Arrays-in-C_002dThe-Wrong-Way.html#Dynamic-Arrays-in-C_002dThe-Wrong-Way" title="Dynamic Arrays in C-The Wrong Way">
work/fftw-3.3.4/doc/html/Dynamic-Arrays-in-C.html:<link href="http://www.gnu.org/software/texinfo/" rel="generator-home" title="Texinfo Homepage">
work/fftw-3.3.4/doc/html/Dynamic-Arrays-in-C_002dThe-Wrong-Way.html:<link title="Top" rel="start" href="index.html#Top">
work/fftw-3.3.4/doc/html/Dynamic-Arrays-in-C_002dThe-Wrong-Way.html:<link rel="up" href="Multi_002ddimensional-Array-Format.html#Multi_002ddimensional-Array-Format" title="Multi-dimensional Array Format">
work/fftw-3.3.4/doc/html/Dynamic-Arrays-in-C_002dThe-Wrong-Way.html:<link rel="prev" href="Dynamic-Arrays-in-C.html#Dynamic-Arrays-in-C" title="Dynamic Arrays in C">
work/fftw-3.3.4/doc/html/Dynamic-Arrays-in-C_002dThe-Wrong-Way.html:<link href="http://www.gnu.org/software/texinfo/" rel="generator-home" title="Texinfo Homepage">
work/fftw-3.3.4/doc/html/Extended-and-quadruple-precision-in-Fortran.html:<link title="Top" rel="start" href="index.html#Top">
work/fftw-3.3.4/doc/html/Extended-and-quadruple-precision-in-Fortran.html:<link rel="up" href="Overview-of-Fortran-interface.html#Overview-of-Fortran-interface" title="Overview of Fortran interface">
work/fftw-3.3.4/doc/html/Extended-and-quadruple-precision-in-Fortran.html:<link rel="prev" href="Overview-of-Fortran-interface.html#Overview-of-Fortran-interface" title="Overview of Fortran interface">
work/fftw-3.3.4/doc/html/Extended-and-quadruple-precision-in-Fortran.html:<link href="http://www.gnu.org/software/texinfo/" rel="generator-home" title="Texinfo Homepage">
work/fftw-3.3.4/doc/html/Extended-and-quadruple-precision-in-Fortran.html:<code>fftw3l.f03</code>, as above.  You should also link with
work/fftw-3.3.4/doc/html/FFTW-Constants-in-Fortran.html:<link title="Top" rel="start" href="index.html#Top">
work/fftw-3.3.4/doc/html/FFTW-Constants-in-Fortran.html:<link rel="up" href="Calling-FFTW-from-Legacy-Fortran.html#Calling-FFTW-from-Legacy-Fortran" title="Calling FFTW from Legacy Fortran">
work/fftw-3.3.4/doc/html/FFTW-Constants-in-Fortran.html:<link rel="prev" href="Fortran_002dinterface-routines.html#Fortran_002dinterface-routines" title="Fortran-interface routines">
work/fftw-3.3.4/doc/html/FFTW-Constants-in-Fortran.html:<link rel="next" href="FFTW-Execution-in-Fortran.html#FFTW-Execution-in-Fortran" title="FFTW Execution in Fortran">
work/fftw-3.3.4/doc/html/FFTW-Constants-in-Fortran.html:<link href="http://www.gnu.org/software/texinfo/" rel="generator-home" title="Texinfo Homepage">
work/fftw-3.3.4/doc/html/FFTW-Execution-in-Fortran.html:<link title="Top" rel="start" href="index.html#Top">
work/fftw-3.3.4/doc/html/FFTW-Execution-in-Fortran.html:<link rel="up" href="Calling-FFTW-from-Legacy-Fortran.html#Calling-FFTW-from-Legacy-Fortran" title="Calling FFTW from Legacy Fortran">
work/fftw-3.3.4/doc/html/FFTW-Execution-in-Fortran.html:<link rel="prev" href="FFTW-Constants-in-Fortran.html#FFTW-Constants-in-Fortran" title="FFTW Constants in Fortran">
work/fftw-3.3.4/doc/html/FFTW-Execution-in-Fortran.html:<link rel="next" href="Fortran-Examples.html#Fortran-Examples" title="Fortran Examples">
work/fftw-3.3.4/doc/html/FFTW-Execution-in-Fortran.html:<link href="http://www.gnu.org/software/texinfo/" rel="generator-home" title="Texinfo Homepage">
work/fftw-3.3.4/doc/html/FFTW-Fortran-type-reference.html:<link title="Top" rel="start" href="index.html#Top">
work/fftw-3.3.4/doc/html/FFTW-Fortran-type-reference.html:<link rel="up" href="Calling-FFTW-from-Modern-Fortran.html#Calling-FFTW-from-Modern-Fortran" title="Calling FFTW from Modern Fortran">
work/fftw-3.3.4/doc/html/FFTW-Fortran-type-reference.html:<link rel="prev" href="Reversing-array-dimensions.html#Reversing-array-dimensions" title="Reversing array dimensions">
work/fftw-3.3.4/doc/html/FFTW-Fortran-type-reference.html:<link rel="next" href="Plan-execution-in-Fortran.html#Plan-execution-in-Fortran" title="Plan execution in Fortran">
work/fftw-3.3.4/doc/html/FFTW-Fortran-type-reference.html:<link href="http://www.gnu.org/software/texinfo/" rel="generator-home" title="Texinfo Homepage">
work/fftw-3.3.4/doc/html/FFTW-Fortran-type-reference.html:&lsquo;<samp><span class="samp">fftw_</span></samp>&rsquo;, <code>fftwf_</code>, and <code>fftwl_</code> for the different precisions, and link to different libraries (<code>-lfftw3</code>, <code>-lfftw3f</code>, and <code>-lfftw3l</code> on Unix), but use the <em>same</em> include file <code>fftw3.f03</code> and the <em>same</em> constants (all of which begin with &lsquo;<samp><span class="samp">FFTW_</span></samp>&rsquo;).  The exception is <code>long double</code> precision, for which you should <em>also</em> include <code>fftw3l.f03</code> (see <a href="Extended-and-quadruple-precision-in-Fortran.html#Extended-and-quadruple-precision-in-Fortran">Extended and quadruple precision in Fortran</a>).
work/fftw-3.3.4/doc/html/FFTW-MPI-Fortran-Interface.html:<link title="Top" rel="start" href="index.html#Top">
work/fftw-3.3.4/doc/html/FFTW-MPI-Fortran-Interface.html:<link rel="up" href="Distributed_002dmemory-FFTW-with-MPI.html#Distributed_002dmemory-FFTW-with-MPI" title="Distributed-memory FFTW with MPI">
work/fftw-3.3.4/doc/html/FFTW-MPI-Fortran-Interface.html:<link rel="prev" href="FFTW-MPI-Reference.html#FFTW-MPI-Reference" title="FFTW MPI Reference">
work/fftw-3.3.4/doc/html/FFTW-MPI-Fortran-Interface.html:<link href="http://www.gnu.org/software/texinfo/" rel="generator-home" title="Texinfo Homepage">
work/fftw-3.3.4/doc/html/FFTW-MPI-Installation.html:<link title="Top" rel="start" href="index.html#Top">
work/fftw-3.3.4/doc/html/FFTW-MPI-Installation.html:<link rel="up" href="Distributed_002dmemory-FFTW-with-MPI.html#Distributed_002dmemory-FFTW-with-MPI" title="Distributed-memory FFTW with MPI">
work/fftw-3.3.4/doc/html/FFTW-MPI-Installation.html:<link rel="prev" href="Distributed_002dmemory-FFTW-with-MPI.html#Distributed_002dmemory-FFTW-with-MPI" title="Distributed-memory FFTW with MPI">
work/fftw-3.3.4/doc/html/FFTW-MPI-Installation.html:<link rel="next" href="Linking-and-Initializing-MPI-FFTW.html#Linking-and-Initializing-MPI-FFTW" title="Linking and Initializing MPI FFTW">
work/fftw-3.3.4/doc/html/FFTW-MPI-Installation.html:<link href="http://www.gnu.org/software/texinfo/" rel="generator-home" title="Texinfo Homepage">
work/fftw-3.3.4/doc/html/FFTW-MPI-Installation.html:automatically detect how to compile and link code using your MPI
work/fftw-3.3.4/doc/html/FFTW-MPI-Installation.html:   <p>If, instead of a special compiler command, you need to link a certain
work/fftw-3.3.4/doc/html/FFTW-MPI-Installation.html:library, you can specify the link command via the <code>MPILIBS</code>
work/fftw-3.3.4/doc/html/FFTW-MPI-Performance-Tips.html:<link title="Top" rel="start" href="index.html#Top">
work/fftw-3.3.4/doc/html/FFTW-MPI-Performance-Tips.html:<link rel="up" href="Distributed_002dmemory-FFTW-with-MPI.html#Distributed_002dmemory-FFTW-with-MPI" title="Distributed-memory FFTW with MPI">
work/fftw-3.3.4/doc/html/FFTW-MPI-Performance-Tips.html:<link rel="prev" href="Avoiding-MPI-Deadlocks.html#Avoiding-MPI-Deadlocks" title="Avoiding MPI Deadlocks">
work/fftw-3.3.4/doc/html/FFTW-MPI-Performance-Tips.html:<link rel="next" href="Combining-MPI-and-Threads.html#Combining-MPI-and-Threads" title="Combining MPI and Threads">
work/fftw-3.3.4/doc/html/FFTW-MPI-Performance-Tips.html:<link href="http://www.gnu.org/software/texinfo/" rel="generator-home" title="Texinfo Homepage">
work/fftw-3.3.4/doc/html/FFTW-MPI-Reference.html:<link title="Top" rel="start" href="index.html#Top">
work/fftw-3.3.4/doc/html/FFTW-MPI-Reference.html:<link rel="up" href="Distributed_002dmemory-FFTW-with-MPI.html#Distributed_002dmemory-FFTW-with-MPI" title="Distributed-memory FFTW with MPI">
work/fftw-3.3.4/doc/html/FFTW-MPI-Reference.html:<link rel="prev" href="Combining-MPI-and-Threads.html#Combining-MPI-and-Threads" title="Combining MPI and Threads">
work/fftw-3.3.4/doc/html/FFTW-MPI-Reference.html:<link rel="next" href="FFTW-MPI-Fortran-Interface.html#FFTW-MPI-Fortran-Interface" title="FFTW MPI Fortran Interface">
work/fftw-3.3.4/doc/html/FFTW-MPI-Reference.html:<link href="http://www.gnu.org/software/texinfo/" rel="generator-home" title="Texinfo Homepage">
work/fftw-3.3.4/doc/html/FFTW-MPI-Transposes.html:<link title="Top" rel="start" href="index.html#Top">
work/fftw-3.3.4/doc/html/FFTW-MPI-Transposes.html:<link rel="up" href="Distributed_002dmemory-FFTW-with-MPI.html#Distributed_002dmemory-FFTW-with-MPI" title="Distributed-memory FFTW with MPI">
work/fftw-3.3.4/doc/html/FFTW-MPI-Transposes.html:<link rel="prev" href="Other-Multi_002ddimensional-Real_002ddata-MPI-Transforms.html#Other-Multi_002ddimensional-Real_002ddata-MPI-Transforms" title="Other Multi-dimensional Real-data MPI Transforms">
work/fftw-3.3.4/doc/html/FFTW-MPI-Transposes.html:<link rel="next" href="FFTW-MPI-Wisdom.html#FFTW-MPI-Wisdom" title="FFTW MPI Wisdom">
work/fftw-3.3.4/doc/html/FFTW-MPI-Transposes.html:<link href="http://www.gnu.org/software/texinfo/" rel="generator-home" title="Texinfo Homepage">
work/fftw-3.3.4/doc/html/FFTW-MPI-Wisdom.html:<link title="Top" rel="start" href="index.html#Top">
work/fftw-3.3.4/doc/html/FFTW-MPI-Wisdom.html:<link rel="up" href="Distributed_002dmemory-FFTW-with-MPI.html#Distributed_002dmemory-FFTW-with-MPI" title="Distributed-memory FFTW with MPI">
work/fftw-3.3.4/doc/html/FFTW-MPI-Wisdom.html:<link rel="prev" href="FFTW-MPI-Transposes.html#FFTW-MPI-Transposes" title="FFTW MPI Transposes">
work/fftw-3.3.4/doc/html/FFTW-MPI-Wisdom.html:<link rel="next" href="Avoiding-MPI-Deadlocks.html#Avoiding-MPI-Deadlocks" title="Avoiding MPI Deadlocks">
work/fftw-3.3.4/doc/html/FFTW-MPI-Wisdom.html:<link href="http://www.gnu.org/software/texinfo/" rel="generator-home" title="Texinfo Homepage">
work/fftw-3.3.4/doc/html/FFTW-Reference.html:<link title="Top" rel="start" href="index.html#Top">
work/fftw-3.3.4/doc/html/FFTW-Reference.html:<link rel="prev" href="Other-Important-Topics.html#Other-Important-Topics" title="Other Important Topics">
work/fftw-3.3.4/doc/html/FFTW-Reference.html:<link rel="next" href="Multi_002dthreaded-FFTW.html#Multi_002dthreaded-FFTW" title="Multi-threaded FFTW">
work/fftw-3.3.4/doc/html/FFTW-Reference.html:<link href="http://www.gnu.org/software/texinfo/" rel="generator-home" title="Texinfo Homepage">
work/fftw-3.3.4/doc/html/Fixed_002dsize-Arrays-in-C.html:<link title="Top" rel="start" href="index.html#Top">
work/fftw-3.3.4/doc/html/Fixed_002dsize-Arrays-in-C.html:<link rel="up" href="Multi_002ddimensional-Array-Format.html#Multi_002ddimensional-Array-Format" title="Multi-dimensional Array Format">
work/fftw-3.3.4/doc/html/Fixed_002dsize-Arrays-in-C.html:<link rel="prev" href="Column_002dmajor-Format.html#Column_002dmajor-Format" title="Column-major Format">
work/fftw-3.3.4/doc/html/Fixed_002dsize-Arrays-in-C.html:<link rel="next" href="Dynamic-Arrays-in-C.html#Dynamic-Arrays-in-C" title="Dynamic Arrays in C">
work/fftw-3.3.4/doc/html/Fixed_002dsize-Arrays-in-C.html:<link href="http://www.gnu.org/software/texinfo/" rel="generator-home" title="Texinfo Homepage">
work/fftw-3.3.4/doc/html/Forgetting-Wisdom.html:<link title="Top" rel="start" href="index.html#Top">
work/fftw-3.3.4/doc/html/Forgetting-Wisdom.html:<link rel="up" href="Wisdom.html#Wisdom" title="Wisdom">
work/fftw-3.3.4/doc/html/Forgetting-Wisdom.html:<link rel="prev" href="Wisdom-Import.html#Wisdom-Import" title="Wisdom Import">
work/fftw-3.3.4/doc/html/Forgetting-Wisdom.html:<link rel="next" href="Wisdom-Utilities.html#Wisdom-Utilities" title="Wisdom Utilities">
work/fftw-3.3.4/doc/html/Forgetting-Wisdom.html:<link href="http://www.gnu.org/software/texinfo/" rel="generator-home" title="Texinfo Homepage">
work/fftw-3.3.4/doc/html/Fortran-Examples.html:<link title="Top" rel="start" href="index.html#Top">
work/fftw-3.3.4/doc/html/Fortran-Examples.html:<link rel="up" href="Calling-FFTW-from-Legacy-Fortran.html#Calling-FFTW-from-Legacy-Fortran" title="Calling FFTW from Legacy Fortran">
work/fftw-3.3.4/doc/html/Fortran-Examples.html:<link rel="prev" href="FFTW-Execution-in-Fortran.html#FFTW-Execution-in-Fortran" title="FFTW Execution in Fortran">
work/fftw-3.3.4/doc/html/Fortran-Examples.html:<link rel="next" href="Wisdom-of-Fortran_003f.html#Wisdom-of-Fortran_003f" title="Wisdom of Fortran?">
work/fftw-3.3.4/doc/html/Fortran-Examples.html:<link href="http://www.gnu.org/software/texinfo/" rel="generator-home" title="Texinfo Homepage">
work/fftw-3.3.4/doc/html/Fortran_002dinterface-routines.html:<link title="Top" rel="start" href="index.html#Top">
work/fftw-3.3.4/doc/html/Fortran_002dinterface-routines.html:<link rel="up" href="Calling-FFTW-from-Legacy-Fortran.html#Calling-FFTW-from-Legacy-Fortran" title="Calling FFTW from Legacy Fortran">
work/fftw-3.3.4/doc/html/Fortran_002dinterface-routines.html:<link rel="prev" href="Calling-FFTW-from-Legacy-Fortran.html#Calling-FFTW-from-Legacy-Fortran" title="Calling FFTW from Legacy Fortran">
work/fftw-3.3.4/doc/html/Fortran_002dinterface-routines.html:<link rel="next" href="FFTW-Constants-in-Fortran.html#FFTW-Constants-in-Fortran" title="FFTW Constants in Fortran">
work/fftw-3.3.4/doc/html/Fortran_002dinterface-routines.html:<link href="http://www.gnu.org/software/texinfo/" rel="generator-home" title="Texinfo Homepage">
work/fftw-3.3.4/doc/html/Fortran_002dinterface-routines.html:deserve to link to FFTW.</p>
work/fftw-3.3.4/doc/html/Generating-your-own-code.html:<link title="Top" rel="start" href="index.html#Top">
work/fftw-3.3.4/doc/html/Generating-your-own-code.html:<link rel="up" href="Installation-and-Customization.html#Installation-and-Customization" title="Installation and Customization">
work/fftw-3.3.4/doc/html/Generating-your-own-code.html:<link rel="prev" href="Cycle-Counters.html#Cycle-Counters" title="Cycle Counters">
work/fftw-3.3.4/doc/html/Generating-your-own-code.html:<link href="http://www.gnu.org/software/texinfo/" rel="generator-home" title="Texinfo Homepage">
work/fftw-3.3.4/doc/html/Guru-Complex-DFTs.html:<link title="Top" rel="start" href="index.html#Top">
work/fftw-3.3.4/doc/html/Guru-Complex-DFTs.html:<link rel="up" href="Guru-Interface.html#Guru-Interface" title="Guru Interface">
work/fftw-3.3.4/doc/html/Guru-Complex-DFTs.html:<link rel="prev" href="Guru-vector-and-transform-sizes.html#Guru-vector-and-transform-sizes" title="Guru vector and transform sizes">
work/fftw-3.3.4/doc/html/Guru-Complex-DFTs.html:<link rel="next" href="Guru-Real_002ddata-DFTs.html#Guru-Real_002ddata-DFTs" title="Guru Real-data DFTs">
work/fftw-3.3.4/doc/html/Guru-Complex-DFTs.html:<link href="http://www.gnu.org/software/texinfo/" rel="generator-home" title="Texinfo Homepage">
work/fftw-3.3.4/doc/html/Guru-Interface.html:<link title="Top" rel="start" href="index.html#Top">
work/fftw-3.3.4/doc/html/Guru-Interface.html:<link rel="up" href="FFTW-Reference.html#FFTW-Reference" title="FFTW Reference">
work/fftw-3.3.4/doc/html/Guru-Interface.html:<link rel="prev" href="Advanced-Interface.html#Advanced-Interface" title="Advanced Interface">
work/fftw-3.3.4/doc/html/Guru-Interface.html:<link rel="next" href="New_002darray-Execute-Functions.html#New_002darray-Execute-Functions" title="New-array Execute Functions">
work/fftw-3.3.4/doc/html/Guru-Interface.html:<link href="http://www.gnu.org/software/texinfo/" rel="generator-home" title="Texinfo Homepage">
work/fftw-3.3.4/doc/html/Guru-Real_002ddata-DFTs.html:<link title="Top" rel="start" href="index.html#Top">
work/fftw-3.3.4/doc/html/Guru-Real_002ddata-DFTs.html:<link rel="up" href="Guru-Interface.html#Guru-Interface" title="Guru Interface">
work/fftw-3.3.4/doc/html/Guru-Real_002ddata-DFTs.html:<link rel="prev" href="Guru-Complex-DFTs.html#Guru-Complex-DFTs" title="Guru Complex DFTs">
work/fftw-3.3.4/doc/html/Guru-Real_002ddata-DFTs.html:<link rel="next" href="Guru-Real_002dto_002dreal-Transforms.html#Guru-Real_002dto_002dreal-Transforms" title="Guru Real-to-real Transforms">
work/fftw-3.3.4/doc/html/Guru-Real_002ddata-DFTs.html:<link href="http://www.gnu.org/software/texinfo/" rel="generator-home" title="Texinfo Homepage">
work/fftw-3.3.4/doc/html/Guru-Real_002dto_002dreal-Transforms.html:<link title="Top" rel="start" href="index.html#Top">
work/fftw-3.3.4/doc/html/Guru-Real_002dto_002dreal-Transforms.html:<link rel="up" href="Guru-Interface.html#Guru-Interface" title="Guru Interface">
work/fftw-3.3.4/doc/html/Guru-Real_002dto_002dreal-Transforms.html:<link rel="prev" href="Guru-Real_002ddata-DFTs.html#Guru-Real_002ddata-DFTs" title="Guru Real-data DFTs">
work/fftw-3.3.4/doc/html/Guru-Real_002dto_002dreal-Transforms.html:<link rel="next" href="64_002dbit-Guru-Interface.html#g_t64_002dbit-Guru-Interface" title="64-bit Guru Interface">
work/fftw-3.3.4/doc/html/Guru-Real_002dto_002dreal-Transforms.html:<link href="http://www.gnu.org/software/texinfo/" rel="generator-home" title="Texinfo Homepage">
work/fftw-3.3.4/doc/html/Guru-vector-and-transform-sizes.html:<link title="Top" rel="start" href="index.html#Top">
work/fftw-3.3.4/doc/html/Guru-vector-and-transform-sizes.html:<link rel="up" href="Guru-Interface.html#Guru-Interface" title="Guru Interface">
work/fftw-3.3.4/doc/html/Guru-vector-and-transform-sizes.html:<link rel="prev" href="Interleaved-and-split-arrays.html#Interleaved-and-split-arrays" title="Interleaved and split arrays">
work/fftw-3.3.4/doc/html/Guru-vector-and-transform-sizes.html:<link rel="next" href="Guru-Complex-DFTs.html#Guru-Complex-DFTs" title="Guru Complex DFTs">
work/fftw-3.3.4/doc/html/Guru-vector-and-transform-sizes.html:<link href="http://www.gnu.org/software/texinfo/" rel="generator-home" title="Texinfo Homepage">
work/fftw-3.3.4/doc/html/How-Many-Threads-to-Use_003f.html:<link title="Top" rel="start" href="index.html#Top">
work/fftw-3.3.4/doc/html/How-Many-Threads-to-Use_003f.html:<link rel="up" href="Multi_002dthreaded-FFTW.html#Multi_002dthreaded-FFTW" title="Multi-threaded FFTW">
work/fftw-3.3.4/doc/html/How-Many-Threads-to-Use_003f.html:<link rel="prev" href="Usage-of-Multi_002dthreaded-FFTW.html#Usage-of-Multi_002dthreaded-FFTW" title="Usage of Multi-threaded FFTW">
work/fftw-3.3.4/doc/html/How-Many-Threads-to-Use_003f.html:<link rel="next" href="Thread-safety.html#Thread-safety" title="Thread safety">
work/fftw-3.3.4/doc/html/How-Many-Threads-to-Use_003f.html:<link href="http://www.gnu.org/software/texinfo/" rel="generator-home" title="Texinfo Homepage">
work/fftw-3.3.4/doc/html/Installation-and-Customization.html:<link title="Top" rel="start" href="index.html#Top">
work/fftw-3.3.4/doc/html/Installation-and-Customization.html:<link rel="prev" href="Upgrading-from-FFTW-version-2.html#Upgrading-from-FFTW-version-2" title="Upgrading from FFTW version 2">
work/fftw-3.3.4/doc/html/Installation-and-Customization.html:<link rel="next" href="Acknowledgments.html#Acknowledgments" title="Acknowledgments">
work/fftw-3.3.4/doc/html/Installation-and-Customization.html:<link href="http://www.gnu.org/software/texinfo/" rel="generator-home" title="Texinfo Homepage">
work/fftw-3.3.4/doc/html/Installation-and-Supported-Hardware_002fSoftware.html:<link title="Top" rel="start" href="index.html#Top">
work/fftw-3.3.4/doc/html/Installation-and-Supported-Hardware_002fSoftware.html:<link rel="up" href="Multi_002dthreaded-FFTW.html#Multi_002dthreaded-FFTW" title="Multi-threaded FFTW">
work/fftw-3.3.4/doc/html/Installation-and-Supported-Hardware_002fSoftware.html:<link rel="prev" href="Multi_002dthreaded-FFTW.html#Multi_002dthreaded-FFTW" title="Multi-threaded FFTW">
work/fftw-3.3.4/doc/html/Installation-and-Supported-Hardware_002fSoftware.html:<link rel="next" href="Usage-of-Multi_002dthreaded-FFTW.html#Usage-of-Multi_002dthreaded-FFTW" title="Usage of Multi-threaded FFTW">
work/fftw-3.3.4/doc/html/Installation-and-Supported-Hardware_002fSoftware.html:<link href="http://www.gnu.org/software/texinfo/" rel="generator-home" title="Texinfo Homepage">
work/fftw-3.3.4/doc/html/Installation-and-Supported-Hardware_002fSoftware.html:described below).  However, your programs may only link to <em>one</em>
work/fftw-3.3.4/doc/html/Installation-on-Unix.html:<link title="Top" rel="start" href="index.html#Top">
work/fftw-3.3.4/doc/html/Installation-on-Unix.html:<link rel="up" href="Installation-and-Customization.html#Installation-and-Customization" title="Installation and Customization">
work/fftw-3.3.4/doc/html/Installation-on-Unix.html:<link rel="prev" href="Installation-and-Customization.html#Installation-and-Customization" title="Installation and Customization">
work/fftw-3.3.4/doc/html/Installation-on-Unix.html:<link rel="next" href="Installation-on-non_002dUnix-systems.html#Installation-on-non_002dUnix-systems" title="Installation on non-Unix systems">
work/fftw-3.3.4/doc/html/Installation-on-Unix.html:<link href="http://www.gnu.org/software/texinfo/" rel="generator-home" title="Texinfo Homepage">
work/fftw-3.3.4/doc/html/Installation-on-Unix.html:must be linked in addition to the main FFTW library.  This is so that
work/fftw-3.3.4/doc/html/Installation-on-Unix.html:users of the serial library do not need to link the system threads
work/fftw-3.3.4/doc/html/Installation-on-Unix.html:included, the wrappers employ the linking conventions of the Fortran
work/fftw-3.3.4/doc/html/Installation-on-Unix.html:<code>-mabi=altivec</code> option when compiling any code that links to FFTW,
work/fftw-3.3.4/doc/html/Installation-on-Unix.html:properly aligns the stack when compiling any code that links to FFTW. 
work/fftw-3.3.4/doc/html/Installation-on-non_002dUnix-systems.html:<link title="Top" rel="start" href="index.html#Top">
work/fftw-3.3.4/doc/html/Installation-on-non_002dUnix-systems.html:<link rel="up" href="Installation-and-Customization.html#Installation-and-Customization" title="Installation and Customization">
work/fftw-3.3.4/doc/html/Installation-on-non_002dUnix-systems.html:<link rel="prev" href="Installation-on-Unix.html#Installation-on-Unix" title="Installation on Unix">
work/fftw-3.3.4/doc/html/Installation-on-non_002dUnix-systems.html:<link rel="next" href="Cycle-Counters.html#Cycle-Counters" title="Cycle Counters">
work/fftw-3.3.4/doc/html/Installation-on-non_002dUnix-systems.html:<link href="http://www.gnu.org/software/texinfo/" rel="generator-home" title="Texinfo Homepage">
work/fftw-3.3.4/doc/html/Installation-on-non_002dUnix-systems.html:   <p>Once these files are all compiled, link them into a library, or a shared
work/fftw-3.3.4/doc/html/Installation-on-non_002dUnix-systems.html:<code>libbench2/</code> directory, and link it into a library.  Then compile
work/fftw-3.3.4/doc/html/Installation-on-non_002dUnix-systems.html:the code in the <code>tests/</code> directory and link it to the
work/fftw-3.3.4/doc/html/Installation-on-non_002dUnix-systems.html:<code>tools/fftw-wisdom.c</code> and link it to the <code>libbench2</code> and FFTW
work/fftw-3.3.4/doc/html/Interleaved-and-split-arrays.html:<link title="Top" rel="start" href="index.html#Top">
work/fftw-3.3.4/doc/html/Interleaved-and-split-arrays.html:<link rel="up" href="Guru-Interface.html#Guru-Interface" title="Guru Interface">
work/fftw-3.3.4/doc/html/Interleaved-and-split-arrays.html:<link rel="prev" href="Guru-Interface.html#Guru-Interface" title="Guru Interface">
work/fftw-3.3.4/doc/html/Interleaved-and-split-arrays.html:<link rel="next" href="Guru-vector-and-transform-sizes.html#Guru-vector-and-transform-sizes" title="Guru vector and transform sizes">
work/fftw-3.3.4/doc/html/Interleaved-and-split-arrays.html:<link href="http://www.gnu.org/software/texinfo/" rel="generator-home" title="Texinfo Homepage">
work/fftw-3.3.4/doc/html/Introduction.html:<link title="Top" rel="start" href="index.html#Top">
work/fftw-3.3.4/doc/html/Introduction.html:<link rel="prev" href="index.html#Top" title="Top">
work/fftw-3.3.4/doc/html/Introduction.html:<link rel="next" href="Tutorial.html#Tutorial" title="Tutorial">
work/fftw-3.3.4/doc/html/Introduction.html:<link href="http://www.gnu.org/software/texinfo/" rel="generator-home" title="Texinfo Homepage">
work/fftw-3.3.4/doc/html/Introduction.html:<a href="http://www.fftw.org">Our web page</a> also has links to FFT-related
work/fftw-3.3.4/doc/html/Introduction.html:example, if code space is a concern, we provide a tool that links only
work/fftw-3.3.4/doc/html/Introduction.html:FFTW, the FAQ, benchmarks, and other links, are available at
work/fftw-3.3.4/doc/html/Library-Index.html:<link title="Top" rel="start" href="index.html#Top">
work/fftw-3.3.4/doc/html/Library-Index.html:<link rel="prev" href="Concept-Index.html#Concept-Index" title="Concept Index">
work/fftw-3.3.4/doc/html/Library-Index.html:<link href="http://www.gnu.org/software/texinfo/" rel="generator-home" title="Texinfo Homepage">
work/fftw-3.3.4/doc/html/License-and-Copyright.html:<link title="Top" rel="start" href="index.html#Top">
work/fftw-3.3.4/doc/html/License-and-Copyright.html:<link rel="prev" href="Acknowledgments.html#Acknowledgments" title="Acknowledgments">
work/fftw-3.3.4/doc/html/License-and-Copyright.html:<link rel="next" href="Concept-Index.html#Concept-Index" title="Concept Index">
work/fftw-3.3.4/doc/html/License-and-Copyright.html:<link href="http://www.gnu.org/software/texinfo/" rel="generator-home" title="Texinfo Homepage">
work/fftw-3.3.4/doc/html/Linking-and-Initializing-MPI-FFTW.html:<link title="Top" rel="start" href="index.html#Top">
work/fftw-3.3.4/doc/html/Linking-and-Initializing-MPI-FFTW.html:<link rel="up" href="Distributed_002dmemory-FFTW-with-MPI.html#Distributed_002dmemory-FFTW-with-MPI" title="Distributed-memory FFTW with MPI">
work/fftw-3.3.4/doc/html/Linking-and-Initializing-MPI-FFTW.html:<link rel="prev" href="FFTW-MPI-Installation.html#FFTW-MPI-Installation" title="FFTW MPI Installation">
work/fftw-3.3.4/doc/html/Linking-and-Initializing-MPI-FFTW.html:<link rel="next" href="2d-MPI-example.html#g_t2d-MPI-example" title="2d MPI example">
work/fftw-3.3.4/doc/html/Linking-and-Initializing-MPI-FFTW.html:<link href="http://www.gnu.org/software/texinfo/" rel="generator-home" title="Texinfo Homepage">
work/fftw-3.3.4/doc/html/Linking-and-Initializing-MPI-FFTW.html:<p>Programs using the MPI FFTW routines should be linked with
work/fftw-3.3.4/doc/html/Linking-and-Initializing-MPI-FFTW.html:(see <a href="Precision.html#Precision">Precision</a>). You will also need to link with whatever library
work/fftw-3.3.4/doc/html/Linking-and-Initializing-MPI-FFTW.html:link MPI code. 
work/fftw-3.3.4/doc/html/Linking-and-Initializing-MPI-FFTW.html:<a name="index-mpicc-354"></a><a name="index-linking-on-Unix-355"></a><a name="index-precision-356"></a>
work/fftw-3.3.4/doc/html/Load-balancing.html:<link title="Top" rel="start" href="index.html#Top">
work/fftw-3.3.4/doc/html/Load-balancing.html:<link rel="up" href="MPI-Data-Distribution.html#MPI-Data-Distribution" title="MPI Data Distribution">
work/fftw-3.3.4/doc/html/Load-balancing.html:<link rel="prev" href="Basic-and-advanced-distribution-interfaces.html#Basic-and-advanced-distribution-interfaces" title="Basic and advanced distribution interfaces">
work/fftw-3.3.4/doc/html/Load-balancing.html:<link rel="next" href="Transposed-distributions.html#Transposed-distributions" title="Transposed distributions">
work/fftw-3.3.4/doc/html/Load-balancing.html:<link href="http://www.gnu.org/software/texinfo/" rel="generator-home" title="Texinfo Homepage">
work/fftw-3.3.4/doc/html/MPI-Data-Distribution-Functions.html:<link title="Top" rel="start" href="index.html#Top">
work/fftw-3.3.4/doc/html/MPI-Data-Distribution-Functions.html:<link rel="up" href="FFTW-MPI-Reference.html#FFTW-MPI-Reference" title="FFTW MPI Reference">
work/fftw-3.3.4/doc/html/MPI-Data-Distribution-Functions.html:<link rel="prev" href="Using-MPI-Plans.html#Using-MPI-Plans" title="Using MPI Plans">
work/fftw-3.3.4/doc/html/MPI-Data-Distribution-Functions.html:<link rel="next" href="MPI-Plan-Creation.html#MPI-Plan-Creation" title="MPI Plan Creation">
work/fftw-3.3.4/doc/html/MPI-Data-Distribution-Functions.html:<link href="http://www.gnu.org/software/texinfo/" rel="generator-home" title="Texinfo Homepage">
work/fftw-3.3.4/doc/html/MPI-Data-Distribution.html:<link title="Top" rel="start" href="index.html#Top">
work/fftw-3.3.4/doc/html/MPI-Data-Distribution.html:<link rel="up" href="Distributed_002dmemory-FFTW-with-MPI.html#Distributed_002dmemory-FFTW-with-MPI" title="Distributed-memory FFTW with MPI">
work/fftw-3.3.4/doc/html/MPI-Data-Distribution.html:<link rel="prev" href="2d-MPI-example.html#g_t2d-MPI-example" title="2d MPI example">
work/fftw-3.3.4/doc/html/MPI-Data-Distribution.html:<link rel="next" href="Multi_002ddimensional-MPI-DFTs-of-Real-Data.html#Multi_002ddimensional-MPI-DFTs-of-Real-Data" title="Multi-dimensional MPI DFTs of Real Data">
work/fftw-3.3.4/doc/html/MPI-Data-Distribution.html:<link href="http://www.gnu.org/software/texinfo/" rel="generator-home" title="Texinfo Homepage">
work/fftw-3.3.4/doc/html/MPI-Files-and-Data-Types.html:<link title="Top" rel="start" href="index.html#Top">
work/fftw-3.3.4/doc/html/MPI-Files-and-Data-Types.html:<link rel="up" href="FFTW-MPI-Reference.html#FFTW-MPI-Reference" title="FFTW MPI Reference">
work/fftw-3.3.4/doc/html/MPI-Files-and-Data-Types.html:<link rel="prev" href="FFTW-MPI-Reference.html#FFTW-MPI-Reference" title="FFTW MPI Reference">
work/fftw-3.3.4/doc/html/MPI-Files-and-Data-Types.html:<link rel="next" href="MPI-Initialization.html#MPI-Initialization" title="MPI Initialization">
work/fftw-3.3.4/doc/html/MPI-Files-and-Data-Types.html:<link href="http://www.gnu.org/software/texinfo/" rel="generator-home" title="Texinfo Homepage">
work/fftw-3.3.4/doc/html/MPI-Files-and-Data-Types.html:   <p>You must also link to <em>both</em> the FFTW MPI library and to the
work/fftw-3.3.4/doc/html/MPI-Files-and-Data-Types.html:-lfftw3 -lm</code> at the end of the link command.
work/fftw-3.3.4/doc/html/MPI-Initialization.html:<link title="Top" rel="start" href="index.html#Top">
work/fftw-3.3.4/doc/html/MPI-Initialization.html:<link rel="up" href="FFTW-MPI-Reference.html#FFTW-MPI-Reference" title="FFTW MPI Reference">
work/fftw-3.3.4/doc/html/MPI-Initialization.html:<link rel="prev" href="MPI-Files-and-Data-Types.html#MPI-Files-and-Data-Types" title="MPI Files and Data Types">
work/fftw-3.3.4/doc/html/MPI-Initialization.html:<link rel="next" href="Using-MPI-Plans.html#Using-MPI-Plans" title="Using MPI Plans">
work/fftw-3.3.4/doc/html/MPI-Initialization.html:<link href="http://www.gnu.org/software/texinfo/" rel="generator-home" title="Texinfo Homepage">
work/fftw-3.3.4/doc/html/MPI-Plan-Creation.html:<link title="Top" rel="start" href="index.html#Top">
work/fftw-3.3.4/doc/html/MPI-Plan-Creation.html:<link rel="up" href="FFTW-MPI-Reference.html#FFTW-MPI-Reference" title="FFTW MPI Reference">
work/fftw-3.3.4/doc/html/MPI-Plan-Creation.html:<link rel="prev" href="MPI-Data-Distribution-Functions.html#MPI-Data-Distribution-Functions" title="MPI Data Distribution Functions">
work/fftw-3.3.4/doc/html/MPI-Plan-Creation.html:<link rel="next" href="MPI-Wisdom-Communication.html#MPI-Wisdom-Communication" title="MPI Wisdom Communication">
work/fftw-3.3.4/doc/html/MPI-Plan-Creation.html:<link href="http://www.gnu.org/software/texinfo/" rel="generator-home" title="Texinfo Homepage">
work/fftw-3.3.4/doc/html/MPI-Wisdom-Communication.html:<link title="Top" rel="start" href="index.html#Top">
work/fftw-3.3.4/doc/html/MPI-Wisdom-Communication.html:<link rel="up" href="FFTW-MPI-Reference.html#FFTW-MPI-Reference" title="FFTW MPI Reference">
work/fftw-3.3.4/doc/html/MPI-Wisdom-Communication.html:<link rel="prev" href="MPI-Plan-Creation.html#MPI-Plan-Creation" title="MPI Plan Creation">
work/fftw-3.3.4/doc/html/MPI-Wisdom-Communication.html:<link href="http://www.gnu.org/software/texinfo/" rel="generator-home" title="Texinfo Homepage">
work/fftw-3.3.4/doc/html/Memory-Allocation.html:<link title="Top" rel="start" href="index.html#Top">
work/fftw-3.3.4/doc/html/Memory-Allocation.html:<link rel="up" href="Data-Types-and-Files.html#Data-Types-and-Files" title="Data Types and Files">
work/fftw-3.3.4/doc/html/Memory-Allocation.html:<link rel="prev" href="Precision.html#Precision" title="Precision">
work/fftw-3.3.4/doc/html/Memory-Allocation.html:<link href="http://www.gnu.org/software/texinfo/" rel="generator-home" title="Texinfo Homepage">
work/fftw-3.3.4/doc/html/More-DFTs-of-Real-Data.html:<link title="Top" rel="start" href="index.html#Top">
work/fftw-3.3.4/doc/html/More-DFTs-of-Real-Data.html:<link rel="up" href="Tutorial.html#Tutorial" title="Tutorial">
work/fftw-3.3.4/doc/html/More-DFTs-of-Real-Data.html:<link rel="prev" href="Multi_002dDimensional-DFTs-of-Real-Data.html#Multi_002dDimensional-DFTs-of-Real-Data" title="Multi-Dimensional DFTs of Real Data">
work/fftw-3.3.4/doc/html/More-DFTs-of-Real-Data.html:<link href="http://www.gnu.org/software/texinfo/" rel="generator-home" title="Texinfo Homepage">
work/fftw-3.3.4/doc/html/Multi_002dDimensional-DFTs-of-Real-Data.html:<link title="Top" rel="start" href="index.html#Top">
work/fftw-3.3.4/doc/html/Multi_002dDimensional-DFTs-of-Real-Data.html:<link rel="up" href="Tutorial.html#Tutorial" title="Tutorial">
work/fftw-3.3.4/doc/html/Multi_002dDimensional-DFTs-of-Real-Data.html:<link rel="prev" href="One_002dDimensional-DFTs-of-Real-Data.html#One_002dDimensional-DFTs-of-Real-Data" title="One-Dimensional DFTs of Real Data">
work/fftw-3.3.4/doc/html/Multi_002dDimensional-DFTs-of-Real-Data.html:<link rel="next" href="More-DFTs-of-Real-Data.html#More-DFTs-of-Real-Data" title="More DFTs of Real Data">
work/fftw-3.3.4/doc/html/Multi_002dDimensional-DFTs-of-Real-Data.html:<link href="http://www.gnu.org/software/texinfo/" rel="generator-home" title="Texinfo Homepage">
work/fftw-3.3.4/doc/html/Multi_002ddimensional-Array-Format.html:<link title="Top" rel="start" href="index.html#Top">
work/fftw-3.3.4/doc/html/Multi_002ddimensional-Array-Format.html:<link rel="up" href="Other-Important-Topics.html#Other-Important-Topics" title="Other Important Topics">
work/fftw-3.3.4/doc/html/Multi_002ddimensional-Array-Format.html:<link rel="prev" href="SIMD-alignment-and-fftw_005fmalloc.html#SIMD-alignment-and-fftw_005fmalloc" title="SIMD alignment and fftw_malloc">
work/fftw-3.3.4/doc/html/Multi_002ddimensional-Array-Format.html:<link rel="next" href="Words-of-Wisdom_002dSaving-Plans.html#Words-of-Wisdom_002dSaving-Plans" title="Words of Wisdom-Saving Plans">
work/fftw-3.3.4/doc/html/Multi_002ddimensional-Array-Format.html:<link href="http://www.gnu.org/software/texinfo/" rel="generator-home" title="Texinfo Homepage">
work/fftw-3.3.4/doc/html/Multi_002ddimensional-MPI-DFTs-of-Real-Data.html:<link title="Top" rel="start" href="index.html#Top">
work/fftw-3.3.4/doc/html/Multi_002ddimensional-MPI-DFTs-of-Real-Data.html:<link rel="up" href="Distributed_002dmemory-FFTW-with-MPI.html#Distributed_002dmemory-FFTW-with-MPI" title="Distributed-memory FFTW with MPI">
work/fftw-3.3.4/doc/html/Multi_002ddimensional-MPI-DFTs-of-Real-Data.html:<link rel="prev" href="MPI-Data-Distribution.html#MPI-Data-Distribution" title="MPI Data Distribution">
work/fftw-3.3.4/doc/html/Multi_002ddimensional-MPI-DFTs-of-Real-Data.html:<link rel="next" href="Other-Multi_002ddimensional-Real_002ddata-MPI-Transforms.html#Other-Multi_002ddimensional-Real_002ddata-MPI-Transforms" title="Other Multi-dimensional Real-data MPI Transforms">
work/fftw-3.3.4/doc/html/Multi_002ddimensional-MPI-DFTs-of-Real-Data.html:<link href="http://www.gnu.org/software/texinfo/" rel="generator-home" title="Texinfo Homepage">
work/fftw-3.3.4/doc/html/Multi_002ddimensional-Transforms.html:<link title="Top" rel="start" href="index.html#Top">
work/fftw-3.3.4/doc/html/Multi_002ddimensional-Transforms.html:<link rel="up" href="What-FFTW-Really-Computes.html#What-FFTW-Really-Computes" title="What FFTW Really Computes">
work/fftw-3.3.4/doc/html/Multi_002ddimensional-Transforms.html:<link rel="prev" href="1d-Discrete-Hartley-Transforms-_0028DHTs_0029.html#g_t1d-Discrete-Hartley-Transforms-_0028DHTs_0029" title="1d Discrete Hartley Transforms (DHTs)">
work/fftw-3.3.4/doc/html/Multi_002ddimensional-Transforms.html:<link href="http://www.gnu.org/software/texinfo/" rel="generator-home" title="Texinfo Homepage">
work/fftw-3.3.4/doc/html/Multi_002dthreaded-FFTW.html:<link title="Top" rel="start" href="index.html#Top">
work/fftw-3.3.4/doc/html/Multi_002dthreaded-FFTW.html:<link rel="prev" href="FFTW-Reference.html#FFTW-Reference" title="FFTW Reference">
work/fftw-3.3.4/doc/html/Multi_002dthreaded-FFTW.html:<link rel="next" href="Distributed_002dmemory-FFTW-with-MPI.html#Distributed_002dmemory-FFTW-with-MPI" title="Distributed-memory FFTW with MPI">
work/fftw-3.3.4/doc/html/Multi_002dthreaded-FFTW.html:<link href="http://www.gnu.org/software/texinfo/" rel="generator-home" title="Texinfo Homepage">
work/fftw-3.3.4/doc/html/New_002darray-Execute-Functions.html:<link title="Top" rel="start" href="index.html#Top">
work/fftw-3.3.4/doc/html/New_002darray-Execute-Functions.html:<link rel="up" href="FFTW-Reference.html#FFTW-Reference" title="FFTW Reference">
work/fftw-3.3.4/doc/html/New_002darray-Execute-Functions.html:<link rel="prev" href="Guru-Interface.html#Guru-Interface" title="Guru Interface">
work/fftw-3.3.4/doc/html/New_002darray-Execute-Functions.html:<link rel="next" href="Wisdom.html#Wisdom" title="Wisdom">
work/fftw-3.3.4/doc/html/New_002darray-Execute-Functions.html:<link href="http://www.gnu.org/software/texinfo/" rel="generator-home" title="Texinfo Homepage">
work/fftw-3.3.4/doc/html/One_002dDimensional-DFTs-of-Real-Data.html:<link title="Top" rel="start" href="index.html#Top">
work/fftw-3.3.4/doc/html/One_002dDimensional-DFTs-of-Real-Data.html:<link rel="up" href="Tutorial.html#Tutorial" title="Tutorial">
work/fftw-3.3.4/doc/html/One_002dDimensional-DFTs-of-Real-Data.html:<link rel="prev" href="Complex-Multi_002dDimensional-DFTs.html#Complex-Multi_002dDimensional-DFTs" title="Complex Multi-Dimensional DFTs">
work/fftw-3.3.4/doc/html/One_002dDimensional-DFTs-of-Real-Data.html:<link rel="next" href="Multi_002dDimensional-DFTs-of-Real-Data.html#Multi_002dDimensional-DFTs-of-Real-Data" title="Multi-Dimensional DFTs of Real Data">
work/fftw-3.3.4/doc/html/One_002dDimensional-DFTs-of-Real-Data.html:<link href="http://www.gnu.org/software/texinfo/" rel="generator-home" title="Texinfo Homepage">
work/fftw-3.3.4/doc/html/One_002ddimensional-distributions.html:<link title="Top" rel="start" href="index.html#Top">
work/fftw-3.3.4/doc/html/One_002ddimensional-distributions.html:<link rel="up" href="MPI-Data-Distribution.html#MPI-Data-Distribution" title="MPI Data Distribution">
work/fftw-3.3.4/doc/html/One_002ddimensional-distributions.html:<link rel="prev" href="Transposed-distributions.html#Transposed-distributions" title="Transposed distributions">
work/fftw-3.3.4/doc/html/One_002ddimensional-distributions.html:<link href="http://www.gnu.org/software/texinfo/" rel="generator-home" title="Texinfo Homepage">
work/fftw-3.3.4/doc/html/Other-Important-Topics.html:<link title="Top" rel="start" href="index.html#Top">
work/fftw-3.3.4/doc/html/Other-Important-Topics.html:<link rel="prev" href="Tutorial.html#Tutorial" title="Tutorial">
work/fftw-3.3.4/doc/html/Other-Important-Topics.html:<link rel="next" href="FFTW-Reference.html#FFTW-Reference" title="FFTW Reference">
work/fftw-3.3.4/doc/html/Other-Important-Topics.html:<link href="http://www.gnu.org/software/texinfo/" rel="generator-home" title="Texinfo Homepage">
work/fftw-3.3.4/doc/html/Other-Multi_002ddimensional-Real_002ddata-MPI-Transforms.html:<link title="Top" rel="start" href="index.html#Top">
work/fftw-3.3.4/doc/html/Other-Multi_002ddimensional-Real_002ddata-MPI-Transforms.html:<link rel="up" href="Distributed_002dmemory-FFTW-with-MPI.html#Distributed_002dmemory-FFTW-with-MPI" title="Distributed-memory FFTW with MPI">
work/fftw-3.3.4/doc/html/Other-Multi_002ddimensional-Real_002ddata-MPI-Transforms.html:<link rel="prev" href="Multi_002ddimensional-MPI-DFTs-of-Real-Data.html#Multi_002ddimensional-MPI-DFTs-of-Real-Data" title="Multi-dimensional MPI DFTs of Real Data">
work/fftw-3.3.4/doc/html/Other-Multi_002ddimensional-Real_002ddata-MPI-Transforms.html:<link rel="next" href="FFTW-MPI-Transposes.html#FFTW-MPI-Transposes" title="FFTW MPI Transposes">
work/fftw-3.3.4/doc/html/Other-Multi_002ddimensional-Real_002ddata-MPI-Transforms.html:<link href="http://www.gnu.org/software/texinfo/" rel="generator-home" title="Texinfo Homepage">
work/fftw-3.3.4/doc/html/Overview-of-Fortran-interface.html:<link title="Top" rel="start" href="index.html#Top">
work/fftw-3.3.4/doc/html/Overview-of-Fortran-interface.html:<link rel="up" href="Calling-FFTW-from-Modern-Fortran.html#Calling-FFTW-from-Modern-Fortran" title="Calling FFTW from Modern Fortran">
work/fftw-3.3.4/doc/html/Overview-of-Fortran-interface.html:<link rel="prev" href="Calling-FFTW-from-Modern-Fortran.html#Calling-FFTW-from-Modern-Fortran" title="Calling FFTW from Modern Fortran">
work/fftw-3.3.4/doc/html/Overview-of-Fortran-interface.html:<link rel="next" href="Reversing-array-dimensions.html#Reversing-array-dimensions" title="Reversing array dimensions">
work/fftw-3.3.4/doc/html/Overview-of-Fortran-interface.html:<link href="http://www.gnu.org/software/texinfo/" rel="generator-home" title="Texinfo Homepage">
work/fftw-3.3.4/doc/html/Plan-execution-in-Fortran.html:<link title="Top" rel="start" href="index.html#Top">
work/fftw-3.3.4/doc/html/Plan-execution-in-Fortran.html:<link rel="up" href="Calling-FFTW-from-Modern-Fortran.html#Calling-FFTW-from-Modern-Fortran" title="Calling FFTW from Modern Fortran">
work/fftw-3.3.4/doc/html/Plan-execution-in-Fortran.html:<link rel="prev" href="FFTW-Fortran-type-reference.html#FFTW-Fortran-type-reference" title="FFTW Fortran type reference">
work/fftw-3.3.4/doc/html/Plan-execution-in-Fortran.html:<link rel="next" href="Allocating-aligned-memory-in-Fortran.html#Allocating-aligned-memory-in-Fortran" title="Allocating aligned memory in Fortran">
work/fftw-3.3.4/doc/html/Plan-execution-in-Fortran.html:<link href="http://www.gnu.org/software/texinfo/" rel="generator-home" title="Texinfo Homepage">
work/fftw-3.3.4/doc/html/Planner-Flags.html:<link title="Top" rel="start" href="index.html#Top">
work/fftw-3.3.4/doc/html/Planner-Flags.html:<link rel="up" href="Basic-Interface.html#Basic-Interface" title="Basic Interface">
work/fftw-3.3.4/doc/html/Planner-Flags.html:<link rel="prev" href="Complex-DFTs.html#Complex-DFTs" title="Complex DFTs">
work/fftw-3.3.4/doc/html/Planner-Flags.html:<link rel="next" href="Real_002ddata-DFTs.html#Real_002ddata-DFTs" title="Real-data DFTs">
work/fftw-3.3.4/doc/html/Planner-Flags.html:<link href="http://www.gnu.org/software/texinfo/" rel="generator-home" title="Texinfo Homepage">
work/fftw-3.3.4/doc/html/Precision.html:<link title="Top" rel="start" href="index.html#Top">
work/fftw-3.3.4/doc/html/Precision.html:<link rel="up" href="Data-Types-and-Files.html#Data-Types-and-Files" title="Data Types and Files">
work/fftw-3.3.4/doc/html/Precision.html:<link rel="prev" href="Complex-numbers.html#Complex-numbers" title="Complex numbers">
work/fftw-3.3.4/doc/html/Precision.html:<link rel="next" href="Memory-Allocation.html#Memory-Allocation" title="Memory Allocation">
work/fftw-3.3.4/doc/html/Precision.html:<link href="http://www.gnu.org/software/texinfo/" rel="generator-home" title="Texinfo Homepage">
work/fftw-3.3.4/doc/html/Precision.html:can link to the different-precision libraries simultaneously.)
work/fftw-3.3.4/doc/html/Precision.html:To use this type, link with <code>-lfftw3q -lquadmath -lm</code> (the
work/fftw-3.3.4/doc/html/Real-even_002fodd-DFTs-_0028cosine_002fsine-transforms_0029.html:<link title="Top" rel="start" href="index.html#Top">
work/fftw-3.3.4/doc/html/Real-even_002fodd-DFTs-_0028cosine_002fsine-transforms_0029.html:<link rel="up" href="More-DFTs-of-Real-Data.html#More-DFTs-of-Real-Data" title="More DFTs of Real Data">
work/fftw-3.3.4/doc/html/Real-even_002fodd-DFTs-_0028cosine_002fsine-transforms_0029.html:<link rel="prev" href="The-Halfcomplex_002dformat-DFT.html#The-Halfcomplex_002dformat-DFT" title="The Halfcomplex-format DFT">
work/fftw-3.3.4/doc/html/Real-even_002fodd-DFTs-_0028cosine_002fsine-transforms_0029.html:<link rel="next" href="The-Discrete-Hartley-Transform.html#The-Discrete-Hartley-Transform" title="The Discrete Hartley Transform">
work/fftw-3.3.4/doc/html/Real-even_002fodd-DFTs-_0028cosine_002fsine-transforms_0029.html:<link href="http://www.gnu.org/software/texinfo/" rel="generator-home" title="Texinfo Homepage">
work/fftw-3.3.4/doc/html/Real_002ddata-DFT-Array-Format.html:<link title="Top" rel="start" href="index.html#Top">
work/fftw-3.3.4/doc/html/Real_002ddata-DFT-Array-Format.html:<link rel="up" href="Basic-Interface.html#Basic-Interface" title="Basic Interface">
work/fftw-3.3.4/doc/html/Real_002ddata-DFT-Array-Format.html:<link rel="prev" href="Real_002ddata-DFTs.html#Real_002ddata-DFTs" title="Real-data DFTs">
work/fftw-3.3.4/doc/html/Real_002ddata-DFT-Array-Format.html:<link rel="next" href="Real_002dto_002dReal-Transforms.html#Real_002dto_002dReal-Transforms" title="Real-to-Real Transforms">
work/fftw-3.3.4/doc/html/Real_002ddata-DFT-Array-Format.html:<link href="http://www.gnu.org/software/texinfo/" rel="generator-home" title="Texinfo Homepage">
work/fftw-3.3.4/doc/html/Real_002ddata-DFTs.html:<link title="Top" rel="start" href="index.html#Top">
work/fftw-3.3.4/doc/html/Real_002ddata-DFTs.html:<link rel="up" href="Basic-Interface.html#Basic-Interface" title="Basic Interface">
work/fftw-3.3.4/doc/html/Real_002ddata-DFTs.html:<link rel="prev" href="Planner-Flags.html#Planner-Flags" title="Planner Flags">
work/fftw-3.3.4/doc/html/Real_002ddata-DFTs.html:<link rel="next" href="Real_002ddata-DFT-Array-Format.html#Real_002ddata-DFT-Array-Format" title="Real-data DFT Array Format">
work/fftw-3.3.4/doc/html/Real_002ddata-DFTs.html:<link href="http://www.gnu.org/software/texinfo/" rel="generator-home" title="Texinfo Homepage">
work/fftw-3.3.4/doc/html/Real_002dto_002dReal-Transform-Kinds.html:<link title="Top" rel="start" href="index.html#Top">
work/fftw-3.3.4/doc/html/Real_002dto_002dReal-Transform-Kinds.html:<link rel="up" href="Basic-Interface.html#Basic-Interface" title="Basic Interface">
work/fftw-3.3.4/doc/html/Real_002dto_002dReal-Transform-Kinds.html:<link rel="prev" href="Real_002dto_002dReal-Transforms.html#Real_002dto_002dReal-Transforms" title="Real-to-Real Transforms">
work/fftw-3.3.4/doc/html/Real_002dto_002dReal-Transform-Kinds.html:<link href="http://www.gnu.org/software/texinfo/" rel="generator-home" title="Texinfo Homepage">
work/fftw-3.3.4/doc/html/Real_002dto_002dReal-Transforms.html:<link title="Top" rel="start" href="index.html#Top">
work/fftw-3.3.4/doc/html/Real_002dto_002dReal-Transforms.html:<link rel="up" href="Basic-Interface.html#Basic-Interface" title="Basic Interface">
work/fftw-3.3.4/doc/html/Real_002dto_002dReal-Transforms.html:<link rel="prev" href="Real_002ddata-DFT-Array-Format.html#Real_002ddata-DFT-Array-Format" title="Real-data DFT Array Format">
work/fftw-3.3.4/doc/html/Real_002dto_002dReal-Transforms.html:<link rel="next" href="Real_002dto_002dReal-Transform-Kinds.html#Real_002dto_002dReal-Transform-Kinds" title="Real-to-Real Transform Kinds">
work/fftw-3.3.4/doc/html/Real_002dto_002dReal-Transforms.html:<link href="http://www.gnu.org/software/texinfo/" rel="generator-home" title="Texinfo Homepage">
work/fftw-3.3.4/doc/html/Reversing-array-dimensions.html:<link title="Top" rel="start" href="index.html#Top">
work/fftw-3.3.4/doc/html/Reversing-array-dimensions.html:<link rel="up" href="Calling-FFTW-from-Modern-Fortran.html#Calling-FFTW-from-Modern-Fortran" title="Calling FFTW from Modern Fortran">
work/fftw-3.3.4/doc/html/Reversing-array-dimensions.html:<link rel="prev" href="Overview-of-Fortran-interface.html#Overview-of-Fortran-interface" title="Overview of Fortran interface">
work/fftw-3.3.4/doc/html/Reversing-array-dimensions.html:<link rel="next" href="FFTW-Fortran-type-reference.html#FFTW-Fortran-type-reference" title="FFTW Fortran type reference">
work/fftw-3.3.4/doc/html/Reversing-array-dimensions.html:<link href="http://www.gnu.org/software/texinfo/" rel="generator-home" title="Texinfo Homepage">
work/fftw-3.3.4/doc/html/Row_002dmajor-Format.html:<link title="Top" rel="start" href="index.html#Top">
work/fftw-3.3.4/doc/html/Row_002dmajor-Format.html:<link rel="up" href="Multi_002ddimensional-Array-Format.html#Multi_002ddimensional-Array-Format" title="Multi-dimensional Array Format">
work/fftw-3.3.4/doc/html/Row_002dmajor-Format.html:<link rel="prev" href="Multi_002ddimensional-Array-Format.html#Multi_002ddimensional-Array-Format" title="Multi-dimensional Array Format">
work/fftw-3.3.4/doc/html/Row_002dmajor-Format.html:<link rel="next" href="Column_002dmajor-Format.html#Column_002dmajor-Format" title="Column-major Format">
work/fftw-3.3.4/doc/html/Row_002dmajor-Format.html:<link href="http://www.gnu.org/software/texinfo/" rel="generator-home" title="Texinfo Homepage">
work/fftw-3.3.4/doc/html/SIMD-alignment-and-fftw_005fmalloc.html:<link title="Top" rel="start" href="index.html#Top">
work/fftw-3.3.4/doc/html/SIMD-alignment-and-fftw_005fmalloc.html:<link rel="up" href="Other-Important-Topics.html#Other-Important-Topics" title="Other Important Topics">
work/fftw-3.3.4/doc/html/SIMD-alignment-and-fftw_005fmalloc.html:<link rel="prev" href="Other-Important-Topics.html#Other-Important-Topics" title="Other Important Topics">
work/fftw-3.3.4/doc/html/SIMD-alignment-and-fftw_005fmalloc.html:<link rel="next" href="Multi_002ddimensional-Array-Format.html#Multi_002ddimensional-Array-Format" title="Multi-dimensional Array Format">
work/fftw-3.3.4/doc/html/SIMD-alignment-and-fftw_005fmalloc.html:<link href="http://www.gnu.org/software/texinfo/" rel="generator-home" title="Texinfo Homepage">
work/fftw-3.3.4/doc/html/SIMD-alignment-and-fftw_005fmalloc.html:   <p>A program linking to an FFTW library compiled with SIMD support can
work/fftw-3.3.4/doc/html/SIMD-alignment-and-fftw_005fmalloc.html:your program is ever linked against a SIMD-using FFTW, we recommend
work/fftw-3.3.4/doc/html/The-1d-Discrete-Fourier-Transform-_0028DFT_0029.html:<link title="Top" rel="start" href="index.html#Top">
work/fftw-3.3.4/doc/html/The-1d-Discrete-Fourier-Transform-_0028DFT_0029.html:<link rel="up" href="What-FFTW-Really-Computes.html#What-FFTW-Really-Computes" title="What FFTW Really Computes">
work/fftw-3.3.4/doc/html/The-1d-Discrete-Fourier-Transform-_0028DFT_0029.html:<link rel="prev" href="What-FFTW-Really-Computes.html#What-FFTW-Really-Computes" title="What FFTW Really Computes">
work/fftw-3.3.4/doc/html/The-1d-Discrete-Fourier-Transform-_0028DFT_0029.html:<link rel="next" href="The-1d-Real_002ddata-DFT.html#The-1d-Real_002ddata-DFT" title="The 1d Real-data DFT">
work/fftw-3.3.4/doc/html/The-1d-Discrete-Fourier-Transform-_0028DFT_0029.html:<link href="http://www.gnu.org/software/texinfo/" rel="generator-home" title="Texinfo Homepage">
work/fftw-3.3.4/doc/html/The-1d-Real_002ddata-DFT.html:<link title="Top" rel="start" href="index.html#Top">
work/fftw-3.3.4/doc/html/The-1d-Real_002ddata-DFT.html:<link rel="up" href="What-FFTW-Really-Computes.html#What-FFTW-Really-Computes" title="What FFTW Really Computes">
work/fftw-3.3.4/doc/html/The-1d-Real_002ddata-DFT.html:<link rel="prev" href="The-1d-Discrete-Fourier-Transform-_0028DFT_0029.html#The-1d-Discrete-Fourier-Transform-_0028DFT_0029" title="The 1d Discrete Fourier Transform (DFT)">
work/fftw-3.3.4/doc/html/The-1d-Real_002ddata-DFT.html:<link rel="next" href="1d-Real_002deven-DFTs-_0028DCTs_0029.html#g_t1d-Real_002deven-DFTs-_0028DCTs_0029" title="1d Real-even DFTs (DCTs)">
work/fftw-3.3.4/doc/html/The-1d-Real_002ddata-DFT.html:<link href="http://www.gnu.org/software/texinfo/" rel="generator-home" title="Texinfo Homepage">
work/fftw-3.3.4/doc/html/The-Discrete-Hartley-Transform.html:<link title="Top" rel="start" href="index.html#Top">
work/fftw-3.3.4/doc/html/The-Discrete-Hartley-Transform.html:<link rel="up" href="More-DFTs-of-Real-Data.html#More-DFTs-of-Real-Data" title="More DFTs of Real Data">
work/fftw-3.3.4/doc/html/The-Discrete-Hartley-Transform.html:<link rel="prev" href="Real-even_002fodd-DFTs-_0028cosine_002fsine-transforms_0029.html#Real-even_002fodd-DFTs-_0028cosine_002fsine-transforms_0029" title="Real even/odd DFTs (cosine/sine transforms)">
work/fftw-3.3.4/doc/html/The-Discrete-Hartley-Transform.html:<link href="http://www.gnu.org/software/texinfo/" rel="generator-home" title="Texinfo Homepage">
work/fftw-3.3.4/doc/html/The-Halfcomplex_002dformat-DFT.html:<link title="Top" rel="start" href="index.html#Top">
work/fftw-3.3.4/doc/html/The-Halfcomplex_002dformat-DFT.html:<link rel="up" href="More-DFTs-of-Real-Data.html#More-DFTs-of-Real-Data" title="More DFTs of Real Data">
work/fftw-3.3.4/doc/html/The-Halfcomplex_002dformat-DFT.html:<link rel="prev" href="More-DFTs-of-Real-Data.html#More-DFTs-of-Real-Data" title="More DFTs of Real Data">
work/fftw-3.3.4/doc/html/The-Halfcomplex_002dformat-DFT.html:<link rel="next" href="Real-even_002fodd-DFTs-_0028cosine_002fsine-transforms_0029.html#Real-even_002fodd-DFTs-_0028cosine_002fsine-transforms_0029" title="Real even/odd DFTs (cosine/sine transforms)">
work/fftw-3.3.4/doc/html/The-Halfcomplex_002dformat-DFT.html:<link href="http://www.gnu.org/software/texinfo/" rel="generator-home" title="Texinfo Homepage">
work/fftw-3.3.4/doc/html/Thread-safety.html:<link title="Top" rel="start" href="index.html#Top">
work/fftw-3.3.4/doc/html/Thread-safety.html:<link rel="up" href="Multi_002dthreaded-FFTW.html#Multi_002dthreaded-FFTW" title="Multi-threaded FFTW">
work/fftw-3.3.4/doc/html/Thread-safety.html:<link rel="prev" href="How-Many-Threads-to-Use_003f.html#How-Many-Threads-to-Use_003f" title="How Many Threads to Use?">
work/fftw-3.3.4/doc/html/Thread-safety.html:<link href="http://www.gnu.org/software/texinfo/" rel="generator-home" title="Texinfo Homepage">
work/fftw-3.3.4/doc/html/Transposed-distributions.html:<link title="Top" rel="start" href="index.html#Top">
work/fftw-3.3.4/doc/html/Transposed-distributions.html:<link rel="up" href="MPI-Data-Distribution.html#MPI-Data-Distribution" title="MPI Data Distribution">
work/fftw-3.3.4/doc/html/Transposed-distributions.html:<link rel="prev" href="Load-balancing.html#Load-balancing" title="Load balancing">
work/fftw-3.3.4/doc/html/Transposed-distributions.html:<link rel="next" href="One_002ddimensional-distributions.html#One_002ddimensional-distributions" title="One-dimensional distributions">
work/fftw-3.3.4/doc/html/Transposed-distributions.html:<link href="http://www.gnu.org/software/texinfo/" rel="generator-home" title="Texinfo Homepage">
work/fftw-3.3.4/doc/html/Tutorial.html:<link title="Top" rel="start" href="index.html#Top">
work/fftw-3.3.4/doc/html/Tutorial.html:<link rel="prev" href="Introduction.html#Introduction" title="Introduction">
work/fftw-3.3.4/doc/html/Tutorial.html:<link rel="next" href="Other-Important-Topics.html#Other-Important-Topics" title="Other Important Topics">
work/fftw-3.3.4/doc/html/Tutorial.html:<link href="http://www.gnu.org/software/texinfo/" rel="generator-home" title="Texinfo Homepage">
work/fftw-3.3.4/doc/html/Upgrading-from-FFTW-version-2.html:<link title="Top" rel="start" href="index.html#Top">
work/fftw-3.3.4/doc/html/Upgrading-from-FFTW-version-2.html:<link rel="prev" href="Calling-FFTW-from-Legacy-Fortran.html#Calling-FFTW-from-Legacy-Fortran" title="Calling FFTW from Legacy Fortran">
work/fftw-3.3.4/doc/html/Upgrading-from-FFTW-version-2.html:<link rel="next" href="Installation-and-Customization.html#Installation-and-Customization" title="Installation and Customization">
work/fftw-3.3.4/doc/html/Upgrading-from-FFTW-version-2.html:<link href="http://www.gnu.org/software/texinfo/" rel="generator-home" title="Texinfo Homepage">
work/fftw-3.3.4/doc/html/Upgrading-from-FFTW-version-2.html:versions; codes written to use those versions will fail to link with
work/fftw-3.3.4/doc/html/Upgrading-from-FFTW-version-2.html:prototypes are in <code>&lt;fftw3.h&gt;</code>.  However, you still have to link to
work/fftw-3.3.4/doc/html/Usage-of-Multi_002dthreaded-FFTW.html:<link title="Top" rel="start" href="index.html#Top">
work/fftw-3.3.4/doc/html/Usage-of-Multi_002dthreaded-FFTW.html:<link rel="up" href="Multi_002dthreaded-FFTW.html#Multi_002dthreaded-FFTW" title="Multi-threaded FFTW">
work/fftw-3.3.4/doc/html/Usage-of-Multi_002dthreaded-FFTW.html:<link rel="prev" href="Installation-and-Supported-Hardware_002fSoftware.html#Installation-and-Supported-Hardware_002fSoftware" title="Installation and Supported Hardware/Software">
work/fftw-3.3.4/doc/html/Usage-of-Multi_002dthreaded-FFTW.html:<link rel="next" href="How-Many-Threads-to-Use_003f.html#How-Many-Threads-to-Use_003f" title="How Many Threads to Use?">
work/fftw-3.3.4/doc/html/Usage-of-Multi_002dthreaded-FFTW.html:<link href="http://www.gnu.org/software/texinfo/" rel="generator-home" title="Texinfo Homepage">
work/fftw-3.3.4/doc/html/Usage-of-Multi_002dthreaded-FFTW.html:   <p><a name="index-OpenMP-335"></a>First, programs using the parallel complex transforms should be linked
work/fftw-3.3.4/doc/html/Usage-of-Multi_002dthreaded-FFTW.html:-lfftw3 -lm</code> if you compiled with OpenMP. You will also need to link
work/fftw-3.3.4/doc/html/Usage-of-Multi_002dthreaded-FFTW.html:<a name="index-linking-on-Unix-336"></a>
work/fftw-3.3.4/doc/html/Using-MPI-Plans.html:<link title="Top" rel="start" href="index.html#Top">
work/fftw-3.3.4/doc/html/Using-MPI-Plans.html:<link rel="up" href="FFTW-MPI-Reference.html#FFTW-MPI-Reference" title="FFTW MPI Reference">
work/fftw-3.3.4/doc/html/Using-MPI-Plans.html:<link rel="prev" href="MPI-Initialization.html#MPI-Initialization" title="MPI Initialization">
work/fftw-3.3.4/doc/html/Using-MPI-Plans.html:<link rel="next" href="MPI-Data-Distribution-Functions.html#MPI-Data-Distribution-Functions" title="MPI Data Distribution Functions">
work/fftw-3.3.4/doc/html/Using-MPI-Plans.html:<link href="http://www.gnu.org/software/texinfo/" rel="generator-home" title="Texinfo Homepage">
work/fftw-3.3.4/doc/html/Using-Plans.html:<link title="Top" rel="start" href="index.html#Top">
work/fftw-3.3.4/doc/html/Using-Plans.html:<link rel="up" href="FFTW-Reference.html#FFTW-Reference" title="FFTW Reference">
work/fftw-3.3.4/doc/html/Using-Plans.html:<link rel="prev" href="Data-Types-and-Files.html#Data-Types-and-Files" title="Data Types and Files">
work/fftw-3.3.4/doc/html/Using-Plans.html:<link rel="next" href="Basic-Interface.html#Basic-Interface" title="Basic Interface">
work/fftw-3.3.4/doc/html/Using-Plans.html:<link href="http://www.gnu.org/software/texinfo/" rel="generator-home" title="Texinfo Homepage">
work/fftw-3.3.4/doc/html/What-FFTW-Really-Computes.html:<link title="Top" rel="start" href="index.html#Top">
work/fftw-3.3.4/doc/html/What-FFTW-Really-Computes.html:<link rel="up" href="FFTW-Reference.html#FFTW-Reference" title="FFTW Reference">
work/fftw-3.3.4/doc/html/What-FFTW-Really-Computes.html:<link rel="prev" href="Wisdom.html#Wisdom" title="Wisdom">
work/fftw-3.3.4/doc/html/What-FFTW-Really-Computes.html:<link href="http://www.gnu.org/software/texinfo/" rel="generator-home" title="Texinfo Homepage">
work/fftw-3.3.4/doc/html/Wisdom-Export.html:<link title="Top" rel="start" href="index.html#Top">
work/fftw-3.3.4/doc/html/Wisdom-Export.html:<link rel="up" href="Wisdom.html#Wisdom" title="Wisdom">
work/fftw-3.3.4/doc/html/Wisdom-Export.html:<link rel="prev" href="Wisdom.html#Wisdom" title="Wisdom">
work/fftw-3.3.4/doc/html/Wisdom-Export.html:<link rel="next" href="Wisdom-Import.html#Wisdom-Import" title="Wisdom Import">
work/fftw-3.3.4/doc/html/Wisdom-Export.html:<link href="http://www.gnu.org/software/texinfo/" rel="generator-home" title="Texinfo Homepage">
work/fftw-3.3.4/doc/html/Wisdom-File-Export_002fImport-from-Fortran.html:<link title="Top" rel="start" href="index.html#Top">
work/fftw-3.3.4/doc/html/Wisdom-File-Export_002fImport-from-Fortran.html:<link rel="up" href="Accessing-the-wisdom-API-from-Fortran.html#Accessing-the-wisdom-API-from-Fortran" title="Accessing the wisdom API from Fortran">
work/fftw-3.3.4/doc/html/Wisdom-File-Export_002fImport-from-Fortran.html:<link rel="prev" href="Accessing-the-wisdom-API-from-Fortran.html#Accessing-the-wisdom-API-from-Fortran" title="Accessing the wisdom API from Fortran">
work/fftw-3.3.4/doc/html/Wisdom-File-Export_002fImport-from-Fortran.html:<link rel="next" href="Wisdom-String-Export_002fImport-from-Fortran.html#Wisdom-String-Export_002fImport-from-Fortran" title="Wisdom String Export/Import from Fortran">
work/fftw-3.3.4/doc/html/Wisdom-File-Export_002fImport-from-Fortran.html:<link href="http://www.gnu.org/software/texinfo/" rel="generator-home" title="Texinfo Homepage">
work/fftw-3.3.4/doc/html/Wisdom-Generic-Export_002fImport-from-Fortran.html:<link title="Top" rel="start" href="index.html#Top">
work/fftw-3.3.4/doc/html/Wisdom-Generic-Export_002fImport-from-Fortran.html:<link rel="up" href="Accessing-the-wisdom-API-from-Fortran.html#Accessing-the-wisdom-API-from-Fortran" title="Accessing the wisdom API from Fortran">
work/fftw-3.3.4/doc/html/Wisdom-Generic-Export_002fImport-from-Fortran.html:<link rel="prev" href="Wisdom-String-Export_002fImport-from-Fortran.html#Wisdom-String-Export_002fImport-from-Fortran" title="Wisdom String Export/Import from Fortran">
work/fftw-3.3.4/doc/html/Wisdom-Generic-Export_002fImport-from-Fortran.html:<link href="http://www.gnu.org/software/texinfo/" rel="generator-home" title="Texinfo Homepage">
work/fftw-3.3.4/doc/html/Wisdom-Import.html:<link title="Top" rel="start" href="index.html#Top">
work/fftw-3.3.4/doc/html/Wisdom-Import.html:<link rel="up" href="Wisdom.html#Wisdom" title="Wisdom">
work/fftw-3.3.4/doc/html/Wisdom-Import.html:<link rel="prev" href="Wisdom-Export.html#Wisdom-Export" title="Wisdom Export">
work/fftw-3.3.4/doc/html/Wisdom-Import.html:<link rel="next" href="Forgetting-Wisdom.html#Forgetting-Wisdom" title="Forgetting Wisdom">
work/fftw-3.3.4/doc/html/Wisdom-Import.html:<link href="http://www.gnu.org/software/texinfo/" rel="generator-home" title="Texinfo Homepage">
work/fftw-3.3.4/doc/html/Wisdom-String-Export_002fImport-from-Fortran.html:<link title="Top" rel="start" href="index.html#Top">
work/fftw-3.3.4/doc/html/Wisdom-String-Export_002fImport-from-Fortran.html:<link rel="up" href="Accessing-the-wisdom-API-from-Fortran.html#Accessing-the-wisdom-API-from-Fortran" title="Accessing the wisdom API from Fortran">
work/fftw-3.3.4/doc/html/Wisdom-String-Export_002fImport-from-Fortran.html:<link rel="prev" href="Wisdom-File-Export_002fImport-from-Fortran.html#Wisdom-File-Export_002fImport-from-Fortran" title="Wisdom File Export/Import from Fortran">
work/fftw-3.3.4/doc/html/Wisdom-String-Export_002fImport-from-Fortran.html:<link rel="next" href="Wisdom-Generic-Export_002fImport-from-Fortran.html#Wisdom-Generic-Export_002fImport-from-Fortran" title="Wisdom Generic Export/Import from Fortran">
work/fftw-3.3.4/doc/html/Wisdom-String-Export_002fImport-from-Fortran.html:<link href="http://www.gnu.org/software/texinfo/" rel="generator-home" title="Texinfo Homepage">
work/fftw-3.3.4/doc/html/Wisdom-Utilities.html:<link title="Top" rel="start" href="index.html#Top">
work/fftw-3.3.4/doc/html/Wisdom-Utilities.html:<link rel="up" href="Wisdom.html#Wisdom" title="Wisdom">
work/fftw-3.3.4/doc/html/Wisdom-Utilities.html:<link rel="prev" href="Forgetting-Wisdom.html#Forgetting-Wisdom" title="Forgetting Wisdom">
work/fftw-3.3.4/doc/html/Wisdom-Utilities.html:<link href="http://www.gnu.org/software/texinfo/" rel="generator-home" title="Texinfo Homepage">
work/fftw-3.3.4/doc/html/Wisdom-Utilities.html:latter is a C subroutine that you can compile and link into your
work/fftw-3.3.4/doc/html/Wisdom-Utilities.html:<code>fftw-wisdom-to-conf</code> produces a configuration routine that links
work/fftw-3.3.4/doc/html/Wisdom-Utilities.html:greatly reducing the size of statically linked executables (which should
work/fftw-3.3.4/doc/html/Wisdom-of-Fortran_003f.html:<link title="Top" rel="start" href="index.html#Top">
work/fftw-3.3.4/doc/html/Wisdom-of-Fortran_003f.html:<link rel="up" href="Calling-FFTW-from-Legacy-Fortran.html#Calling-FFTW-from-Legacy-Fortran" title="Calling FFTW from Legacy Fortran">
work/fftw-3.3.4/doc/html/Wisdom-of-Fortran_003f.html:<link rel="prev" href="Fortran-Examples.html#Fortran-Examples" title="Fortran Examples">
work/fftw-3.3.4/doc/html/Wisdom-of-Fortran_003f.html:<link href="http://www.gnu.org/software/texinfo/" rel="generator-home" title="Texinfo Homepage">
work/fftw-3.3.4/doc/html/Wisdom-of-Fortran_003f.html:programs be required to link with the Fortran I/O library.)
work/fftw-3.3.4/doc/html/Wisdom.html:<link title="Top" rel="start" href="index.html#Top">
work/fftw-3.3.4/doc/html/Wisdom.html:<link rel="up" href="FFTW-Reference.html#FFTW-Reference" title="FFTW Reference">
work/fftw-3.3.4/doc/html/Wisdom.html:<link rel="prev" href="New_002darray-Execute-Functions.html#New_002darray-Execute-Functions" title="New-array Execute Functions">
work/fftw-3.3.4/doc/html/Wisdom.html:<link rel="next" href="What-FFTW-Really-Computes.html#What-FFTW-Really-Computes" title="What FFTW Really Computes">
work/fftw-3.3.4/doc/html/Wisdom.html:<link href="http://www.gnu.org/software/texinfo/" rel="generator-home" title="Texinfo Homepage">
work/fftw-3.3.4/doc/html/Words-of-Wisdom_002dSaving-Plans.html:<link title="Top" rel="start" href="index.html#Top">
work/fftw-3.3.4/doc/html/Words-of-Wisdom_002dSaving-Plans.html:<link rel="up" href="Other-Important-Topics.html#Other-Important-Topics" title="Other Important Topics">
work/fftw-3.3.4/doc/html/Words-of-Wisdom_002dSaving-Plans.html:<link rel="prev" href="Multi_002ddimensional-Array-Format.html#Multi_002ddimensional-Array-Format" title="Multi-dimensional Array Format">
work/fftw-3.3.4/doc/html/Words-of-Wisdom_002dSaving-Plans.html:<link rel="next" href="Caveats-in-Using-Wisdom.html#Caveats-in-Using-Wisdom" title="Caveats in Using Wisdom">
work/fftw-3.3.4/doc/html/Words-of-Wisdom_002dSaving-Plans.html:<link href="http://www.gnu.org/software/texinfo/" rel="generator-home" title="Texinfo Homepage">
work/fftw-3.3.4/doc/html/index.html:<link title="Top" rel="start" href="#Top">
work/fftw-3.3.4/doc/html/index.html:<link href="http://www.gnu.org/software/texinfo/" rel="generator-home" title="Texinfo Homepage">
work/fftw-3.3.4/doc/install.texi:must be linked in addition to the main FFTW library.  This is so that
work/fftw-3.3.4/doc/install.texi:users of the serial library do not need to link the system threads
work/fftw-3.3.4/doc/install.texi:included, the wrappers employ the linking conventions of the Fortran
work/fftw-3.3.4/doc/install.texi:@code{-mabi=altivec} option when compiling any code that links to FFTW,
work/fftw-3.3.4/doc/install.texi:properly aligns the stack when compiling any code that links to FFTW.
work/fftw-3.3.4/doc/install.texi:Once these files are all compiled, link them into a library, or a shared
work/fftw-3.3.4/doc/install.texi:@code{libbench2/} directory, and link it into a library.  Then compile
work/fftw-3.3.4/doc/install.texi:the code in the @code{tests/} directory and link it to the
work/fftw-3.3.4/doc/install.texi:@code{tools/fftw-wisdom.c} and link it to the @code{libbench2} and FFTW
work/fftw-3.3.4/doc/intro.texi:@uref{http://www.fftw.org, Our web page} also has links to FFT-related
work/fftw-3.3.4/doc/intro.texi:example, if code space is a concern, we provide a tool that links only
work/fftw-3.3.4/doc/intro.texi:FFTW, the FAQ, benchmarks, and other links, are available at
work/fftw-3.3.4/doc/legacy-fortran.texi:deserve to link to FFTW.}  The single and long-double precision
work/fftw-3.3.4/doc/legacy-fortran.texi:programs be required to link with the Fortran I/O library.)
work/fftw-3.3.4/doc/modern-fortran.texi:@code{fftw3l.f03}, as above.  You should also link with
work/fftw-3.3.4/doc/modern-fortran.texi:@samp{fftw_}, @code{fftwf_}, and @code{fftwl_} for the different precisions, and link to different libraries (@code{-lfftw3}, @code{-lfftw3f}, and @code{-lfftw3l} on Unix), but use the @emph{same} include file @code{fftw3.f03} and the @emph{same} constants (all of which begin with @samp{FFTW_}).  The exception is @code{long double} precision, for which you should @emph{also} include @code{fftw3l.f03} (@pxref{Extended and quadruple precision in Fortran}).
work/fftw-3.3.4/doc/modern-fortran.texi:as usual for Fortran modules.  (You still need to link to the FFTW
work/fftw-3.3.4/doc/mpi.texi:automatically detect how to compile and link code using your MPI
work/fftw-3.3.4/doc/mpi.texi:If, instead of a special compiler command, you need to link a certain
work/fftw-3.3.4/doc/mpi.texi:library, you can specify the link command via the @code{MPILIBS}
work/fftw-3.3.4/doc/mpi.texi:Programs using the MPI FFTW routines should be linked with
work/fftw-3.3.4/doc/mpi.texi:(@pxref{Precision}). You will also need to link with whatever library
work/fftw-3.3.4/doc/mpi.texi:link MPI code.
work/fftw-3.3.4/doc/mpi.texi:@cindex linking on Unix
work/fftw-3.3.4/doc/mpi.texi:You must also link to @emph{both} the FFTW MPI library and to the
work/fftw-3.3.4/doc/mpi.texi:-lfftw3 -lm} at the end of the link command.
work/fftw-3.3.4/doc/other.texi:A program linking to an FFTW library compiled with SIMD support can
work/fftw-3.3.4/doc/other.texi:your program is ever linked against a SIMD-using FFTW, we recommend
work/fftw-3.3.4/doc/reference.texi:You must also link to the FFTW library.  On Unix, this
work/fftw-3.3.4/doc/reference.texi:means adding @code{-lfftw3 -lm} at the @emph{end} of the link command.
work/fftw-3.3.4/doc/reference.texi:can link to the different-precision libraries simultaneously.)
work/fftw-3.3.4/doc/reference.texi:To use this type, link with @code{-lfftw3q -lquadmath -lm} (the
work/fftw-3.3.4/doc/reference.texi:latter is a C subroutine that you can compile and link into your
work/fftw-3.3.4/doc/reference.texi:@code{fftw-wisdom-to-conf} produces a configuration routine that links
work/fftw-3.3.4/doc/reference.texi:greatly reducing the size of statically linked executables (which should
work/fftw-3.3.4/doc/texinfo.tex:% @setcolor (or @url, or @link, etc.) between @contents and the very
work/fftw-3.3.4/doc/texinfo.tex:\newif\iflinks \linkstrue % by default we want the aux files.
work/fftw-3.3.4/doc/texinfo.tex:\let\novalidate = \linksfalse
work/fftw-3.3.4/doc/texinfo.tex:   \iflinks
work/fftw-3.3.4/doc/texinfo.tex:  \def\linkcolor{\rgbDarkRed}
work/fftw-3.3.4/doc/texinfo.tex:  \def\endlink{\setcolor{\maincolor}\pdfendlink}
work/fftw-3.3.4/doc/texinfo.tex:    % Generate a link to the node text if that exists; else, use the
work/fftw-3.3.4/doc/texinfo.tex:    \let \startlink \pdfannotlink
work/fftw-3.3.4/doc/texinfo.tex:    \let \startlink \pdfstartlink
work/fftw-3.3.4/doc/texinfo.tex:      \startlink attr{/Border [0 0 0]}%
work/fftw-3.3.4/doc/texinfo.tex:      \ifnum0=\countA\else\makelink\fi
work/fftw-3.3.4/doc/texinfo.tex:  \def\makelink{\addtokens{\toksB}%
work/fftw-3.3.4/doc/texinfo.tex:    {\noexpand\pdflink{\the\toksC}}\toksC={}\global\countA=0}
work/fftw-3.3.4/doc/texinfo.tex:  \def\pdflink#1{%
work/fftw-3.3.4/doc/texinfo.tex:    \startlink attr{/Border [0 0 0]} goto name{\pdfmkpgn{#1}}
work/fftw-3.3.4/doc/texinfo.tex:    \setcolor{\linkcolor}#1\endlink}
work/fftw-3.3.4/doc/texinfo.tex:  \let\endlink = \relax
work/fftw-3.3.4/doc/texinfo.tex:  \endlink
work/fftw-3.3.4/doc/texinfo.tex:  \endlink
work/fftw-3.3.4/doc/texinfo.tex:    \endlink
work/fftw-3.3.4/doc/texinfo.tex:  \iflinks
work/fftw-3.3.4/doc/texinfo.tex:  \iflinks
work/fftw-3.3.4/doc/texinfo.tex:  \iflinks
work/fftw-3.3.4/doc/texinfo.tex:    \iflinks
work/fftw-3.3.4/doc/texinfo.tex:  \iflinks
work/fftw-3.3.4/doc/texinfo.tex:  % Make link in pdf output.
work/fftw-3.3.4/doc/texinfo.tex:     \startlink attr{/Border [0 0 0]}%
work/fftw-3.3.4/doc/texinfo.tex:    \setcolor{\linkcolor}%
work/fftw-3.3.4/doc/texinfo.tex:  \endlink
work/fftw-3.3.4/doc/texinfo.tex:    \iflinks
work/fftw-3.3.4/doc/texinfo.tex:  % page number, and we want to fully expand that so we can get a link
work/fftw-3.3.4/doc/threads.texi:described below).  However, your programs may only link to @emph{one}
work/fftw-3.3.4/doc/threads.texi:First, programs using the parallel complex transforms should be linked
work/fftw-3.3.4/doc/threads.texi:-lfftw3 -lm} if you compiled with OpenMP. You will also need to link
work/fftw-3.3.4/doc/threads.texi:@cindex linking on Unix
work/fftw-3.3.4/doc/tutorial.texi:You must link this code with the @code{fftw3} library.  On Unix systems,
work/fftw-3.3.4/doc/tutorial.texi:link with @code{-lfftw3 -lm}.
work/fftw-3.3.4/doc/tutorial.texi:@code{fftw_} prefix by @code{fftwf_} or @code{fftwl_} and link with
work/fftw-3.3.4/doc/upgrading.texi:versions; codes written to use those versions will fail to link with
work/fftw-3.3.4/doc/upgrading.texi:prototypes are in @code{<fftw3.h>}.  However, you still have to link to
work/fftw-3.3.4/install-sh:	# We try this two ways since rm can't unlink itself on some
work/fftw-3.3.4/install-sh:	  { echo "$0: cannot unlink or rename $dst" >&2
work/fftw-3.3.4/kernel/Makefile.in:	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
work/fftw-3.3.4/kernel/cycle.h:   from Carbon, requires no additional libraries to be linked). */
work/fftw-3.3.4/kernel/cycle.h:   NOTE: this code will fail to link unless you use the -Masmkeyword compiler
work/fftw-3.3.4/kernel/kalloc.c:   Visual C++ "Processor Pack" that you have to statically link into
work/fftw-3.3.4/kernel/scan.c:   willing to link this crap with FFTW.  Not over my dead body.
work/fftw-3.3.4/libbench2/Makefile.in:	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
work/fftw-3.3.4/libbench2/main.c:   routine (called "MAIN__" or something similar in order to link a C
work/fftw-3.3.4/ltmain.sh:#         link               create a library or an executable
work/fftw-3.3.4/ltmain.sh:#         linker:		$LD (gnu? $with_gnu_ld)
work/fftw-3.3.4/ltmain.sh:link|lin|li|l)
work/fftw-3.3.4/ltmain.sh:  shift; set dummy --mode link ${1+"$@"}; shift
work/fftw-3.3.4/ltmain.sh:  clean|compile|execute|finish|install|link|relink|uninstall) ;;
work/fftw-3.3.4/ltmain.sh:# It is necessary for linking the library.
work/fftw-3.3.4/ltmain.sh:    # We use this script file to make the link, it avoids creating a new file
work/fftw-3.3.4/ltmain.sh:  -shared           do not build a \`.o' file suitable for static linking
work/fftw-3.3.4/ltmain.sh:  -static           only build a \`.o' file suitable for static linking
work/fftw-3.3.4/ltmain.sh:      link)
work/fftw-3.3.4/ltmain.sh:"Usage: $progname [OPTION]... --mode=link LINK-COMMAND...
work/fftw-3.3.4/ltmain.sh:  -all-static       do not do any dynamic linking at all
work/fftw-3.3.4/ltmain.sh:  -dlpreopen FILE   link in FILE and add its symbols to lt_preloaded_symbols
work/fftw-3.3.4/ltmain.sh:  -no-install       link a not-installable executable
work/fftw-3.3.4/ltmain.sh:  -shared           only do dynamic linking of libtool libraries
work/fftw-3.3.4/ltmain.sh:  -static           do not do any dynamic linking of uninstalled libtool libraries
work/fftw-3.3.4/ltmain.sh:                    do not do any dynamic linking of libtool libraries
work/fftw-3.3.4/ltmain.sh:  -Xcompiler FLAG   pass linker-specific FLAG directly to the compiler
work/fftw-3.3.4/ltmain.sh:  -Xlinker FLAG     pass linker-specific FLAG directly to the linker
work/fftw-3.3.4/ltmain.sh:  -XCClinker FLAG   pass link-specific FLAG to the compiler driver (CC)
work/fftw-3.3.4/ltmain.sh:      for opt_mode in compile link execute install finish uninstall clean; do
work/fftw-3.3.4/ltmain.sh:      for opt_mode in compile link execute install finish uninstall clean; do
work/fftw-3.3.4/ltmain.sh:	    func_warning "\`$file' was not linked with \`-export-dynamic'"
work/fftw-3.3.4/ltmain.sh:      echo "If you ever happen to want to link against installed libraries"
work/fftw-3.3.4/ltmain.sh:      echo "flag during linking and do at least one of the following:"
work/fftw-3.3.4/ltmain.sh:	echo "     during linking"
work/fftw-3.3.4/ltmain.sh:	$ECHO "   - use the \`$flag' linker flag"
work/fftw-3.3.4/ltmain.sh:	relink_command=
work/fftw-3.3.4/ltmain.sh:	if test -n "$relink_command"; then
work/fftw-3.3.4/ltmain.sh:	    # Stick the inst_prefix_dir data into the link command.
work/fftw-3.3.4/ltmain.sh:	    relink_command=`$ECHO "$relink_command" | $SED "s%@inst_prefix_dir@%-inst-prefix-dir $inst_prefix_dir%"`
work/fftw-3.3.4/ltmain.sh:	    relink_command=`$ECHO "$relink_command" | $SED "s%@inst_prefix_dir@%%"`
work/fftw-3.3.4/ltmain.sh:	  func_warning "relinking \`$file'"
work/fftw-3.3.4/ltmain.sh:	  func_show_eval "$relink_command" \
work/fftw-3.3.4/ltmain.sh:	    'func_fatal_error "error: relink \`$file'\'' with the above command before installing it"'
work/fftw-3.3.4/ltmain.sh:	  test -n "$relink_command" && srcname="$realname"T
work/fftw-3.3.4/ltmain.sh:	  # Install the shared library and build the symlinks.
work/fftw-3.3.4/ltmain.sh:	    # Delete the old symlinks, and create new ones.
work/fftw-3.3.4/ltmain.sh:	    # the symlink we replace!  Solaris /bin/ln does not understand -f,
work/fftw-3.3.4/ltmain.sh:	    for linkname
work/fftw-3.3.4/ltmain.sh:	      test "$linkname" != "$realname" \
work/fftw-3.3.4/ltmain.sh:		&& func_show_eval "(cd $destdir && { $LN_S -f $realname $linkname || { $RM $linkname && $LN_S $realname $linkname; }; })"
work/fftw-3.3.4/ltmain.sh:	  relink_command=
work/fftw-3.3.4/ltmain.sh:	  relink_command=
work/fftw-3.3.4/ltmain.sh:	  if test "$fast_install" = no && test -n "$relink_command"; then
work/fftw-3.3.4/ltmain.sh:	        relink_command=`$ECHO "$relink_command" | $SED 's%@OUTPUT@%'"$outputname"'%g'`
work/fftw-3.3.4/ltmain.sh:	          func_quote_for_expand "$relink_command"
work/fftw-3.3.4/ltmain.sh:	        if eval "$relink_command"; then :
work/fftw-3.3.4/ltmain.sh:		  func_error "error: relink \`$file' with the above command before installing it"
work/fftw-3.3.4/ltmain.sh:	        func_warning "cannot relink \`$file'"
work/fftw-3.3.4/ltmain.sh:	            $sharedlib_from_linklib_cmd "$dlprefile"
work/fftw-3.3.4/ltmain.sh:	            dlprefile_dlbasename=$sharedlib_from_linklib_result
work/fftw-3.3.4/ltmain.sh:/* This works around a problem in FreeBSD linker */
work/fftw-3.3.4/ltmain.sh:	  # linked before any other PIC object.  But we must not use
work/fftw-3.3.4/ltmain.sh:	  # pic_flag when linking with -static.  The problem exists in
work/fftw-3.3.4/ltmain.sh:      # lt_preloaded_symbols.  The linker will fail if global_symbol_pipe
work/fftw-3.3.4/ltmain.sh:#    $sharedlib_from_linklib_cmd
work/fftw-3.3.4/ltmain.sh:#    $sharedlib_from_linklib_result
work/fftw-3.3.4/ltmain.sh:  sharedlib_from_linklib_result=`$DLLTOOL --identify-strict --identify "$1"`
work/fftw-3.3.4/ltmain.sh:#    $sharedlib_from_linklib_cmd
work/fftw-3.3.4/ltmain.sh:#    $sharedlib_from_linklib_result
work/fftw-3.3.4/ltmain.sh:    sharedlib_from_linklib_result=`func_cygming_dll_for_implib_fallback_core '.idata$7' "$1"`
work/fftw-3.3.4/ltmain.sh:    sharedlib_from_linklib_result=`func_cygming_dll_for_implib_fallback_core '.idata$6' "$1"`
work/fftw-3.3.4/ltmain.sh:    sharedlib_from_linklib_result=""
work/fftw-3.3.4/ltmain.sh:# func_mode_link because it depends on a number of variables
work/fftw-3.3.4/ltmain.sh:relink_command=\"$relink_command\"
work/fftw-3.3.4/ltmain.sh:  # Follow symbolic links until we get to the real thisdir.
work/fftw-3.3.4/ltmain.sh:    # relink executable if necessary
work/fftw-3.3.4/ltmain.sh:    if test -n \"\$relink_command\"; then
work/fftw-3.3.4/ltmain.sh:      if relink_command_output=\`eval \$relink_command 2>&1\`; then :
work/fftw-3.3.4/ltmain.sh:	$ECHO \"\$relink_command_output\" >&2
work/fftw-3.3.4/ltmain.sh:# Must ONLY be called from within func_mode_link because
work/fftw-3.3.4/ltmain.sh:char *chase_symlinks (const char *pathspec);
work/fftw-3.3.4/ltmain.sh:                  "(main) found exe (before symlink chase) at: %s\n",
work/fftw-3.3.4/ltmain.sh:  actual_cwrapper_path = chase_symlinks (tmp_pathspec);
work/fftw-3.3.4/ltmain.sh:                  "(main) found exe (after symlink chase) at: %s\n",
work/fftw-3.3.4/ltmain.sh:   Does not chase symlinks, even on platforms that support them.
work/fftw-3.3.4/ltmain.sh:chase_symlinks (const char *pathspec)
work/fftw-3.3.4/ltmain.sh:  int has_symlinks = 0;
work/fftw-3.3.4/ltmain.sh:  while (strlen (tmp_pathspec) && !has_symlinks)
work/fftw-3.3.4/ltmain.sh:		      "checking path component for symlinks: %s\n",
work/fftw-3.3.4/ltmain.sh:	      has_symlinks = 1;
work/fftw-3.3.4/ltmain.sh:  if (!has_symlinks)
work/fftw-3.3.4/ltmain.sh:		"could not follow symlinks for %s", pathspec);
work/fftw-3.3.4/ltmain.sh:# func_mode_link arg...
work/fftw-3.3.4/ltmain.sh:func_mode_link ()
work/fftw-3.3.4/ltmain.sh:      # It is impossible to link a dll without this setting, and
work/fftw-3.3.4/ltmain.sh:      # -no-undefined on the libtool link line when we can be certain
work/fftw-3.3.4/ltmain.sh:    linker_flags=
work/fftw-3.3.4/ltmain.sh:    new_inherited_linker_flags=
work/fftw-3.3.4/ltmain.sh:	  if test "$build_libtool_libs" = yes && test -z "$link_static_flag"; then
work/fftw-3.3.4/ltmain.sh:	    func_warning "complete static linking is impossible in this configuration"
work/fftw-3.3.4/ltmain.sh:	  if test -n "$link_static_flag"; then
work/fftw-3.3.4/ltmain.sh:	  if test -z "$pic_flag" && test -n "$link_static_flag"; then
work/fftw-3.3.4/ltmain.sh:	  if test -z "$pic_flag" && test -n "$link_static_flag"; then
work/fftw-3.3.4/ltmain.sh:	    # Add the symbol object into the linking commands.
work/fftw-3.3.4/ltmain.sh:	    func_fatal_error "link input file \`$arg' does not exist"
work/fftw-3.3.4/ltmain.sh:	xcclinker)
work/fftw-3.3.4/ltmain.sh:	  func_append linker_flags " $qarg"
work/fftw-3.3.4/ltmain.sh:	xlinker)
work/fftw-3.3.4/ltmain.sh:	  func_append linker_flags " $qarg"
work/fftw-3.3.4/ltmain.sh:	if test -n "$link_static_flag"; then
work/fftw-3.3.4/ltmain.sh:	  func_append compile_command " $link_static_flag"
work/fftw-3.3.4/ltmain.sh:	  func_append finalize_command " $link_static_flag"
work/fftw-3.3.4/ltmain.sh:      # The native IRIX linker understands -LANG:*, -LIST:* and -LNO:*
work/fftw-3.3.4/ltmain.sh:	case "$new_inherited_linker_flags " in
work/fftw-3.3.4/ltmain.sh:	    * ) func_append new_inherited_linker_flags " $arg" ;;
work/fftw-3.3.4/ltmain.sh:	  func_append linker_flags " $func_quote_for_eval_result"
work/fftw-3.3.4/ltmain.sh:      -Xlinker)
work/fftw-3.3.4/ltmain.sh:	prev=xlinker
work/fftw-3.3.4/ltmain.sh:      -XCClinker)
work/fftw-3.3.4/ltmain.sh:	prev=xcclinker
work/fftw-3.3.4/ltmain.sh:      # -O*, -flto*, -fwhopr*, -fuse-linker-plugin GCC link-time optimization
work/fftw-3.3.4/ltmain.sh:      -O*|-flto*|-fwhopr*|-fuse-linker-plugin)
work/fftw-3.3.4/ltmain.sh:    *.$libext) linkmode=oldlib ;;
work/fftw-3.3.4/ltmain.sh:    *.lo | *.$objext) linkmode=obj ;;
work/fftw-3.3.4/ltmain.sh:    *.la) linkmode=lib ;;
work/fftw-3.3.4/ltmain.sh:    *) linkmode=prog ;; # Anything else should be a program.
work/fftw-3.3.4/ltmain.sh:    # that are linked more than once (e.g. -la -lb -la)
work/fftw-3.3.4/ltmain.sh:    if test "$linkmode" = lib; then
work/fftw-3.3.4/ltmain.sh:    need_relink=no # whether we're linking any uninstalled libtool libraries
work/fftw-3.3.4/ltmain.sh:    case $linkmode in
work/fftw-3.3.4/ltmain.sh:	passes="conv dlpreopen link"
work/fftw-3.3.4/ltmain.sh:	passes="conv scan dlopen dlpreopen link"
work/fftw-3.3.4/ltmain.sh:      if test "$linkmode,$pass" = "lib,link"; then
work/fftw-3.3.4/ltmain.sh:      if test "$linkmode,$pass" = "lib,link" ||
work/fftw-3.3.4/ltmain.sh:	 test "$linkmode,$pass" = "prog,scan"; then
work/fftw-3.3.4/ltmain.sh:      if test "$linkmode" = prog; then
work/fftw-3.3.4/ltmain.sh:	link) libs="$deplibs %DEPLIBS% $dependency_libs" ;;
work/fftw-3.3.4/ltmain.sh:      if test "$linkmode,$pass" = "lib,dlpreopen"; then
work/fftw-3.3.4/ltmain.sh:	  if test "$linkmode,$pass" = "prog,link"; then
work/fftw-3.3.4/ltmain.sh:	    if test "$linkmode" = lib ; then
work/fftw-3.3.4/ltmain.sh:		case "$new_inherited_linker_flags " in
work/fftw-3.3.4/ltmain.sh:		    * ) func_append new_inherited_linker_flags " $deplib" ;;
work/fftw-3.3.4/ltmain.sh:	  if test "$linkmode" != lib && test "$linkmode" != prog; then
work/fftw-3.3.4/ltmain.sh:	  if test "$linkmode" = lib; then
work/fftw-3.3.4/ltmain.sh:	    if test "$linkmode,$pass" = "prog,link"; then
work/fftw-3.3.4/ltmain.sh:	      test "$linkmode" = lib && newdependency_libs="$deplib $newdependency_libs"
work/fftw-3.3.4/ltmain.sh:		    if test "$linkmode,$pass" = "prog,link"; then
work/fftw-3.3.4/ltmain.sh:		      test "$linkmode" = lib && newdependency_libs="$deplib $newdependency_libs"
work/fftw-3.3.4/ltmain.sh:	  if test "$linkmode,$pass" = "prog,link"; then
work/fftw-3.3.4/ltmain.sh:	    if test "$linkmode" = lib ; then
work/fftw-3.3.4/ltmain.sh:		case "$new_inherited_linker_flags " in
work/fftw-3.3.4/ltmain.sh:		    * ) func_append new_inherited_linker_flags " $deplib" ;;
work/fftw-3.3.4/ltmain.sh:	  case $linkmode in
work/fftw-3.3.4/ltmain.sh:	  esac # linkmode
work/fftw-3.3.4/ltmain.sh:	  if test "$pass" = link; then
work/fftw-3.3.4/ltmain.sh:	  case $linkmode in
work/fftw-3.3.4/ltmain.sh:	    # but linking other static libraries is non-portable.
work/fftw-3.3.4/ltmain.sh:		$ECHO "*** Warning: Trying to link with static lib archive $deplib."
work/fftw-3.3.4/ltmain.sh:		echo "*** I have the capability to make that library automatically link in when"
work/fftw-3.3.4/ltmain.sh:		echo "*** you link to this library.  But I can only do this if you have a"
work/fftw-3.3.4/ltmain.sh:	    if test "$pass" != link; then
work/fftw-3.3.4/ltmain.sh:	  esac # linkmode
work/fftw-3.3.4/ltmain.sh:	  elif test "$linkmode" = prog; then
work/fftw-3.3.4/ltmain.sh:	      # If there is no dlopen support or we're linking statically,
work/fftw-3.3.4/ltmain.sh:	inherited_linker_flags=
work/fftw-3.3.4/ltmain.sh:	# it will not redefine variables installed, or shouldnotlink
work/fftw-3.3.4/ltmain.sh:	shouldnotlink=no
work/fftw-3.3.4/ltmain.sh:	if test -n "$inherited_linker_flags"; then
work/fftw-3.3.4/ltmain.sh:	  tmp_inherited_linker_flags=`$ECHO "$inherited_linker_flags" | $SED 's/-framework \([^ $]*\)/\1.ltframework/g'`
work/fftw-3.3.4/ltmain.sh:	  for tmp_inherited_linker_flag in $tmp_inherited_linker_flags; do
work/fftw-3.3.4/ltmain.sh:	    case " $new_inherited_linker_flags " in
work/fftw-3.3.4/ltmain.sh:	      *" $tmp_inherited_linker_flag "*) ;;
work/fftw-3.3.4/ltmain.sh:	      *) func_append new_inherited_linker_flags " $tmp_inherited_linker_flag";;
work/fftw-3.3.4/ltmain.sh:	if test "$linkmode,$pass" = "lib,link" ||
work/fftw-3.3.4/ltmain.sh:	   test "$linkmode,$pass" = "prog,scan" ||
work/fftw-3.3.4/ltmain.sh:	   { test "$linkmode" != prog && test "$linkmode" != lib; }; then
work/fftw-3.3.4/ltmain.sh:	      func_fatal_error "cannot find name of link library for \`$lib'"
work/fftw-3.3.4/ltmain.sh:	  elif test "$linkmode" != prog && test "$linkmode" != lib; then
work/fftw-3.3.4/ltmain.sh:	# Get the name of the library we link against.
work/fftw-3.3.4/ltmain.sh:	linklib=
work/fftw-3.3.4/ltmain.sh:	  linklib=$old_library
work/fftw-3.3.4/ltmain.sh:	    linklib="$l"
work/fftw-3.3.4/ltmain.sh:	if test -z "$linklib"; then
work/fftw-3.3.4/ltmain.sh:	  func_fatal_error "cannot find name of link library for \`$lib'"
work/fftw-3.3.4/ltmain.sh:	    # If there is no dlname, no dlopen support or we're linking
work/fftw-3.3.4/ltmain.sh:	    func_warning "passing it literally to the linker, although it might fail"
work/fftw-3.3.4/ltmain.sh:	  if test ! -f "$lt_sysroot$libdir/$linklib" && test -f "$abs_ladir/$linklib"; then
work/fftw-3.3.4/ltmain.sh:	  if test ! -f "$ladir/$objdir/$linklib" && test -f "$abs_ladir/$linklib"; then
work/fftw-3.3.4/ltmain.sh:	  if test -z "$libdir" && test "$linkmode" = prog; then
work/fftw-3.3.4/ltmain.sh:	      # Linker will automatically link against shared library if both
work/fftw-3.3.4/ltmain.sh:	        func_tr_sh "$dir/$linklib"
work/fftw-3.3.4/ltmain.sh:	        func_append newdlprefiles " $dir/$linklib"
work/fftw-3.3.4/ltmain.sh:	        # that they are being used correctly in the link pass.
work/fftw-3.3.4/ltmain.sh:	      # are required to link).
work/fftw-3.3.4/ltmain.sh:	        # that they are being used correctly in the link pass.
work/fftw-3.3.4/ltmain.sh:	        func_append newdlprefiles " $dir/$linklib"
work/fftw-3.3.4/ltmain.sh:	  if test "$linkmode" = lib; then
work/fftw-3.3.4/ltmain.sh:	  elif test "$linkmode,$pass" = "prog,link"; then
work/fftw-3.3.4/ltmain.sh:	if test "$linkmode" = prog && test "$pass" != link; then
work/fftw-3.3.4/ltmain.sh:	  linkalldeplibs=no
work/fftw-3.3.4/ltmain.sh:	  if test "$link_all_deplibs" != no || test -z "$library_names" ||
work/fftw-3.3.4/ltmain.sh:	    linkalldeplibs=yes
work/fftw-3.3.4/ltmain.sh:	    # Need to link against all dependency_libs?
work/fftw-3.3.4/ltmain.sh:	    if test "$linkalldeplibs" = yes; then
work/fftw-3.3.4/ltmain.sh:	      # or/and link against static libraries
work/fftw-3.3.4/ltmain.sh:	fi # $linkmode = prog...
work/fftw-3.3.4/ltmain.sh:	if test "$linkmode,$pass" = "prog,link"; then
work/fftw-3.3.4/ltmain.sh:	  fi # $linkmode,$pass = prog,link...
work/fftw-3.3.4/ltmain.sh:	link_static=no # Whether the deplib will be linked statically
work/fftw-3.3.4/ltmain.sh:	      # No point in relinking DLLs because paths are not encoded
work/fftw-3.3.4/ltmain.sh:	      need_relink=no
work/fftw-3.3.4/ltmain.sh:	      need_relink=yes
work/fftw-3.3.4/ltmain.sh:	  # Warn about portability, can't link against -module's on some
work/fftw-3.3.4/ltmain.sh:	  if test -z "$dlopenmodule" && test "$shouldnotlink" = yes && test "$pass" = link; then
work/fftw-3.3.4/ltmain.sh:	    if test "$linkmode" = prog; then
work/fftw-3.3.4/ltmain.sh:	    $ECHO "*** $linklib is not portable!"
work/fftw-3.3.4/ltmain.sh:	  if test "$linkmode" = lib &&
work/fftw-3.3.4/ltmain.sh:	    linklib=$newlib
work/fftw-3.3.4/ltmain.sh:	  if test "$linkmode" = prog || test "$opt_mode" != relink; then
work/fftw-3.3.4/ltmain.sh:	    lib_linked=yes
work/fftw-3.3.4/ltmain.sh:		add="$dir/$linklib"
work/fftw-3.3.4/ltmain.sh:		    # link against it, someone is ignoring the earlier warnings
work/fftw-3.3.4/ltmain.sh:			$ECHO "*** Warning: lib $linklib is a module, not a shared library"
work/fftw-3.3.4/ltmain.sh:			  echo "*** The link will probably fail, sorry"
work/fftw-3.3.4/ltmain.sh:		lib_linked=no
work/fftw-3.3.4/ltmain.sh:	    relink)
work/fftw-3.3.4/ltmain.sh:		add="$dir/$linklib"
work/fftw-3.3.4/ltmain.sh:		lib_linked=no
work/fftw-3.3.4/ltmain.sh:	    *) lib_linked=no ;;
work/fftw-3.3.4/ltmain.sh:	    if test "$lib_linked" != yes; then
work/fftw-3.3.4/ltmain.sh:	    if test "$linkmode" = prog; then
work/fftw-3.3.4/ltmain.sh:	  if test "$linkmode" = prog || test "$opt_mode" = relink; then
work/fftw-3.3.4/ltmain.sh:	      add="$libdir/$linklib"
work/fftw-3.3.4/ltmain.sh:		 test -f "$inst_prefix_dir$libdir/$linklib" ; then
work/fftw-3.3.4/ltmain.sh:		add="$inst_prefix_dir$libdir/$linklib"
work/fftw-3.3.4/ltmain.sh:		add="$libdir/$linklib"
work/fftw-3.3.4/ltmain.sh:	    if test "$linkmode" = prog; then
work/fftw-3.3.4/ltmain.sh:	elif test "$linkmode" = prog; then
work/fftw-3.3.4/ltmain.sh:	    test -n "$old_library" && linklib="$old_library"
work/fftw-3.3.4/ltmain.sh:	    compile_deplibs="$dir/$linklib $compile_deplibs"
work/fftw-3.3.4/ltmain.sh:	    finalize_deplibs="$dir/$linklib $finalize_deplibs"
work/fftw-3.3.4/ltmain.sh:	    # We're trying link a shared library against a static one
work/fftw-3.3.4/ltmain.sh:	    # that the program can be linked against the static library.
work/fftw-3.3.4/ltmain.sh:	    $ECHO "*** Warning: This system can not link to static lib archive $lib."
work/fftw-3.3.4/ltmain.sh:	    echo "*** I have the capability to make that library automatically link in when"
work/fftw-3.3.4/ltmain.sh:	    echo "*** you link to this library.  But I can only do this if you have a"
work/fftw-3.3.4/ltmain.sh:	      echo "*** is linked with the -dlopen flag to resolve symbols at runtime."
work/fftw-3.3.4/ltmain.sh:	    link_static=yes
work/fftw-3.3.4/ltmain.sh:	fi # link shared/static library?
work/fftw-3.3.4/ltmain.sh:	if test "$linkmode" = lib; then
work/fftw-3.3.4/ltmain.sh:	       test "$link_static" = yes; }; then
work/fftw-3.3.4/ltmain.sh:	  test "$link_static" = no && newdependency_libs="$abs_ladir/$laname $newdependency_libs"
work/fftw-3.3.4/ltmain.sh:	  if test "$link_all_deplibs" != no; then
work/fftw-3.3.4/ltmain.sh:		      func_append linker_flags " -dylib_file ${darwin_install_name}:${depdepl}"
work/fftw-3.3.4/ltmain.sh:	  fi # link_all_deplibs != no
work/fftw-3.3.4/ltmain.sh:	fi # linkmode = lib
work/fftw-3.3.4/ltmain.sh:      if test "$pass" = link; then
work/fftw-3.3.4/ltmain.sh:	if test "$linkmode" = "prog"; then
work/fftw-3.3.4/ltmain.sh:	  compile_deplibs="$new_inherited_linker_flags $compile_deplibs"
work/fftw-3.3.4/ltmain.sh:	  finalize_deplibs="$new_inherited_linker_flags $finalize_deplibs"
work/fftw-3.3.4/ltmain.sh:	  compiler_flags="$compiler_flags "`$ECHO " $new_inherited_linker_flags" | $SED 's% \([^ $]*\).ltframework% -framework \1%g'`
work/fftw-3.3.4/ltmain.sh:	if test "$linkmode,$pass" != "prog,link"; then
work/fftw-3.3.4/ltmain.sh:	      # is implicitly linked in more than once by the
work/fftw-3.3.4/ltmain.sh:	      # such unportable linking tricks to link the library
work/fftw-3.3.4/ltmain.sh:    if test "$linkmode" = prog; then
work/fftw-3.3.4/ltmain.sh:    if test "$linkmode" = prog || test "$linkmode" = lib; then
work/fftw-3.3.4/ltmain.sh:    case $linkmode in
work/fftw-3.3.4/ltmain.sh:      if test "$opt_mode" != relink; then
work/fftw-3.3.4/ltmain.sh:	    # Don't link with libc until the a.out ld.so is fixed.
work/fftw-3.3.4/ltmain.sh:	# Transform deplibs into only deplibs that can be linked in shared.
work/fftw-3.3.4/ltmain.sh:	  # limits. Maybe even breaks it.  We compile a program, linking it
work/fftw-3.3.4/ltmain.sh:	  # whether they linked in statically or dynamically with ldd.
work/fftw-3.3.4/ltmain.sh:		    $ECHO "*** Warning: dynamic linker does not accept needed library $i."
work/fftw-3.3.4/ltmain.sh:		    echo "*** I have the capability to make that library automatically link in when"
work/fftw-3.3.4/ltmain.sh:		    echo "*** you link to this library.  But I can only do this if you have a"
work/fftw-3.3.4/ltmain.sh:		    echo "*** because a test_compile did reveal that the linker did not use it for"
work/fftw-3.3.4/ltmain.sh:		      $ECHO "*** Warning: dynamic linker does not accept needed library $i."
work/fftw-3.3.4/ltmain.sh:		      echo "*** I have the capability to make that library automatically link in when"
work/fftw-3.3.4/ltmain.sh:		      echo "*** you link to this library.  But I can only do this if you have a"
work/fftw-3.3.4/ltmain.sh:		      echo "*** because a test_compile did reveal that the linker did not use this one"
work/fftw-3.3.4/ltmain.sh:		  echo "*** make it link in!  You will probably need to install it or some"
work/fftw-3.3.4/ltmain.sh:		      # Follow soft links.
work/fftw-3.3.4/ltmain.sh:		      # endless loop below, in case of cyclic links.
work/fftw-3.3.4/ltmain.sh:		      # We might still enter an endless loop, since a link
work/fftw-3.3.4/ltmain.sh:		      # loop can be closed while we follow links,
work/fftw-3.3.4/ltmain.sh:			potliblink=`ls -ld $potlib | ${SED} 's/.* -> //'`
work/fftw-3.3.4/ltmain.sh:			case $potliblink in
work/fftw-3.3.4/ltmain.sh:			[\\/]* | [A-Za-z]:[\\/]*) potlib="$potliblink";;
work/fftw-3.3.4/ltmain.sh:			*) potlib=`$ECHO "$potlib" | $SED 's,[^/]*$,,'`"$potliblink";;
work/fftw-3.3.4/ltmain.sh:		$ECHO "*** Warning: linker path does not have real file for library $a_deplib."
work/fftw-3.3.4/ltmain.sh:		echo "*** I have the capability to make that library automatically link in when"
work/fftw-3.3.4/ltmain.sh:		echo "*** you link to this library.  But I can only do this if you have a"
work/fftw-3.3.4/ltmain.sh:		echo "*** because I did check the linker path looking for a file starting"
work/fftw-3.3.4/ltmain.sh:		    potlib="$potent_lib" # see symlink-check above in file_magic test
work/fftw-3.3.4/ltmain.sh:		$ECHO "*** Warning: linker path does not have real file for library $a_deplib."
work/fftw-3.3.4/ltmain.sh:		echo "*** I have the capability to make that library automatically link in when"
work/fftw-3.3.4/ltmain.sh:		echo "*** you link to this library.  But I can only do this if you have a"
work/fftw-3.3.4/ltmain.sh:		echo "*** because I did check the linker path looking for a file starting"
work/fftw-3.3.4/ltmain.sh:	    echo "*** application is linked with the -dlopen flag."
work/fftw-3.3.4/ltmain.sh:	    echo "*** automatically added whenever a program is linked with this library"
work/fftw-3.3.4/ltmain.sh:	  new_inherited_linker_flags=`$ECHO " $new_inherited_linker_flags" | $SED 's% \([^ $]*\).ltframework% -framework \1%g'`
work/fftw-3.3.4/ltmain.sh:	# Remove ${wl} instances when linking with ld.
work/fftw-3.3.4/ltmain.sh:	  test "$opt_mode" != relink && rpath="$compile_rpath$rpath"
work/fftw-3.3.4/ltmain.sh:	test "$opt_mode" != relink && shlibpath="$compile_shlibpath$shlibpath"
work/fftw-3.3.4/ltmain.sh:	# Get the real and link names of the library.
work/fftw-3.3.4/ltmain.sh:	linknames=
work/fftw-3.3.4/ltmain.sh:	for link
work/fftw-3.3.4/ltmain.sh:	  func_append linknames " $link"
work/fftw-3.3.4/ltmain.sh:	  func_append linker_flags " $flag"
work/fftw-3.3.4/ltmain.sh:	# Make a backup of the uninstalled library when relinking
work/fftw-3.3.4/ltmain.sh:	if test "$opt_mode" = relink; then
work/fftw-3.3.4/ltmain.sh:	  # The command line is too long to link in one step, link piecewise
work/fftw-3.3.4/ltmain.sh:	  # or, if using GNU ld and skipped_export is not :, use a linker
work/fftw-3.3.4/ltmain.sh:	  # assume the linker understands whole_archive_flag_spec.
work/fftw-3.3.4/ltmain.sh:	  # convenience libraries get linked in and end up exceeding
work/fftw-3.3.4/ltmain.sh:	    func_verbose "creating linker input file list: $output"
work/fftw-3.3.4/ltmain.sh:	      # Loop over the list of objects to be linked.
work/fftw-3.3.4/ltmain.sh:		    # All subsequent reloadable object files will link in
work/fftw-3.3.4/ltmain.sh:	      # files will link in the last one created.
work/fftw-3.3.4/ltmain.sh:		if test "$opt_mode" = relink; then
work/fftw-3.3.4/ltmain.sh:	  # Expand the library linking commands again to reset the
work/fftw-3.3.4/ltmain.sh:	  # value of $libobjs for piecewise linking.
work/fftw-3.3.4/ltmain.sh:	    if test "$opt_mode" = relink; then
work/fftw-3.3.4/ltmain.sh:	if test "$opt_mode" = relink; then
work/fftw-3.3.4/ltmain.sh:	# Create links to the real library.
work/fftw-3.3.4/ltmain.sh:	for linkname in $linknames; do
work/fftw-3.3.4/ltmain.sh:	  if test "$realname" != "$linkname"; then
work/fftw-3.3.4/ltmain.sh:	    func_show_eval '(cd "$output_objdir" && $RM "$linkname" && $LN_S "$realname" "$linkname")' 'exit $?'
work/fftw-3.3.4/ltmain.sh:	# accidentally link it into a program.
work/fftw-3.3.4/ltmain.sh:	# Don't allow lazy linking, it breaks C++ global constructors
work/fftw-3.3.4/ltmain.sh:      # template prelinking step
work/fftw-3.3.4/ltmain.sh:      if test -n "$prelink_cmds"; then
work/fftw-3.3.4/ltmain.sh:	func_execute_cmds "$prelink_cmds" 'exit $?'
work/fftw-3.3.4/ltmain.sh:        if test "$need_relink" = no || test "$build_libtool_libs" != yes; then
work/fftw-3.3.4/ltmain.sh:	link_command="$compile_command$compile_rpath"
work/fftw-3.3.4/ltmain.sh:	func_show_eval "$link_command" 'exit_status=$?'
work/fftw-3.3.4/ltmain.sh:	if test -n "$postlink_cmds"; then
work/fftw-3.3.4/ltmain.sh:	  postlink_cmds=`func_echo_all "$postlink_cmds" | $SED -e 's%@OUTPUT@%'"$output"'%g' -e 's%@TOOL_OUTPUT@%'"$func_to_tool_file_result"'%g'`
work/fftw-3.3.4/ltmain.sh:	  func_execute_cmds "$postlink_cmds" 'exit $?'
work/fftw-3.3.4/ltmain.sh:	link_command="$compile_var$compile_command$compile_rpath"
work/fftw-3.3.4/ltmain.sh:	link_command=`$ECHO "$link_command" | $SED 's%@OUTPUT@%'"$output"'%g'`
work/fftw-3.3.4/ltmain.sh:	func_show_eval "$link_command" 'exit $?'
work/fftw-3.3.4/ltmain.sh:	if test -n "$postlink_cmds"; then
work/fftw-3.3.4/ltmain.sh:	  postlink_cmds=`func_echo_all "$postlink_cmds" | $SED -e 's%@OUTPUT@%'"$output"'%g' -e 's%@TOOL_OUTPUT@%'"$func_to_tool_file_result"'%g'`
work/fftw-3.3.4/ltmain.sh:	  func_execute_cmds "$postlink_cmds" 'exit $?'
work/fftw-3.3.4/ltmain.sh:      if test "$hardcode_action" = relink; then
work/fftw-3.3.4/ltmain.sh:	link_command="$compile_var$compile_command$compile_rpath"
work/fftw-3.3.4/ltmain.sh:	relink_command="$finalize_var$finalize_command$finalize_rpath"
work/fftw-3.3.4/ltmain.sh:	func_warning "\`$output' will be relinked during installation"
work/fftw-3.3.4/ltmain.sh:	  link_command="$finalize_var$compile_command$finalize_rpath"
work/fftw-3.3.4/ltmain.sh:	    relink_command=`$ECHO "$compile_var$compile_command$compile_rpath" | $SED 's%@OUTPUT@%\$progdir/\$file%g'`
work/fftw-3.3.4/ltmain.sh:	    relink_command=
work/fftw-3.3.4/ltmain.sh:	  link_command="$compile_var$compile_command$compile_rpath"
work/fftw-3.3.4/ltmain.sh:	  relink_command="$finalize_var$finalize_command$finalize_rpath"
work/fftw-3.3.4/ltmain.sh:      link_command=`$ECHO "$link_command" | $SED 's%@OUTPUT@%'"$output_objdir/$outputname"'%g'`
work/fftw-3.3.4/ltmain.sh:      func_show_eval "$link_command" 'exit $?'
work/fftw-3.3.4/ltmain.sh:      if test -n "$postlink_cmds"; then
work/fftw-3.3.4/ltmain.sh:	postlink_cmds=`func_echo_all "$postlink_cmds" | $SED -e 's%@OUTPUT@%'"$output_objdir/$outputname"'%g' -e 's%@TOOL_OUTPUT@%'"$func_to_tool_file_result"'%g'`
work/fftw-3.3.4/ltmain.sh:	func_execute_cmds "$postlink_cmds" 'exit $?'
work/fftw-3.3.4/ltmain.sh:      # Quote the relink command for shipping.
work/fftw-3.3.4/ltmain.sh:      if test -n "$relink_command"; then
work/fftw-3.3.4/ltmain.sh:	for var in $variables_saved_for_relink; do
work/fftw-3.3.4/ltmain.sh:	    relink_command="{ test -z \"\${$var+set}\" || $lt_unset $var || { $var=; export $var; }; }; $relink_command"
work/fftw-3.3.4/ltmain.sh:	    relink_command="$var=; export $var; $relink_command"
work/fftw-3.3.4/ltmain.sh:	    relink_command="$var=$func_quote_for_eval_result; export $var; $relink_command"
work/fftw-3.3.4/ltmain.sh:	relink_command="(cd `pwd`; $relink_command)"
work/fftw-3.3.4/ltmain.sh:	relink_command=`$ECHO "$relink_command" | $SED "$sed_quote_subst"`
work/fftw-3.3.4/ltmain.sh:	# static archive out of a convenience library, or when linking
work/fftw-3.3.4/ltmain.sh:	  func_verbose "using command file archive linking..."
work/fftw-3.3.4/ltmain.sh:	  # the command line is too long to link in one step, link in parts
work/fftw-3.3.4/ltmain.sh:	  func_verbose "using piecewise archive linking..."
work/fftw-3.3.4/ltmain.sh:      for var in $variables_saved_for_relink; do
work/fftw-3.3.4/ltmain.sh:	  relink_command="{ test -z \"\${$var+set}\" || $lt_unset $var || { $var=; export $var; }; }; $relink_command"
work/fftw-3.3.4/ltmain.sh:	  relink_command="$var=; export $var; $relink_command"
work/fftw-3.3.4/ltmain.sh:	  relink_command="$var=$func_quote_for_eval_result; export $var; $relink_command"
work/fftw-3.3.4/ltmain.sh:      # Quote the link command for shipping.
work/fftw-3.3.4/ltmain.sh:      relink_command="(cd `pwd`; $SHELL $progpath $preserve_args --mode=relink $libtool_args @inst_prefix_dir@)"
work/fftw-3.3.4/ltmain.sh:      relink_command=`$ECHO "$relink_command" | $SED "$sed_quote_subst"`
work/fftw-3.3.4/ltmain.sh:	relink_command=
work/fftw-3.3.4/ltmain.sh:		# eventual linking with the app. that links it) if we
work/fftw-3.3.4/ltmain.sh:		# didn't already link the preopened objects directly into
work/fftw-3.3.4/ltmain.sh:# It is necessary for linking the library.
work/fftw-3.3.4/ltmain.sh:inherited_linker_flags='$new_inherited_linker_flags'
work/fftw-3.3.4/ltmain.sh:# Should we warn about portability when linking against -modules?
work/fftw-3.3.4/ltmain.sh:shouldnotlink=$module
work/fftw-3.3.4/ltmain.sh:	  if test "$installed" = no && test "$need_relink" = yes; then
work/fftw-3.3.4/ltmain.sh:relink_command=\"$relink_command\""
work/fftw-3.3.4/ltmain.sh:      # Do a symbolic link so that the libtool archive can be found in
work/fftw-3.3.4/ltmain.sh:{ test "$opt_mode" = link || test "$opt_mode" = relink; } &&
work/fftw-3.3.4/ltmain.sh:    func_mode_link ${1+"$@"}
work/fftw-3.3.4/ltmain.sh:	  # Delete the libtool libraries and symlinks.
work/fftw-3.3.4/ltmain.sh:	      relink_command=
work/fftw-3.3.4/ltmain.sh:	      relink_command=
work/fftw-3.3.4/ltmain.sh:	    if test "$fast_install" = yes && test -n "$relink_command"; then
work/fftw-3.3.4/m4/acx_mpi.m4:dnl @summary figure out how to compile/link code with MPI
work/fftw-3.3.4/m4/acx_mpi.m4:dnl needed for linking MPI (e.g. -lmpi, if a special MPICC/MPICXX/MPIF77
work/fftw-3.3.4/m4/acx_mpi.m4:dnl       for linking as well as for compiling.  (This is the
work/fftw-3.3.4/m4/acx_pthread.m4:dnl library and linker flags, and the PTHREAD_CFLAGS output variable
work/fftw-3.3.4/m4/acx_pthread.m4:dnl flags, but also link it with them as well.  e.g. you should link
work/fftw-3.3.4/m4/acx_pthread.m4:# It gets checked for in the link test anyway.
work/fftw-3.3.4/m4/acx_pthread.m4:# etcetera environment variables, and if threads linking works using
work/fftw-3.3.4/m4/acx_pthread.m4:# -mt: Sun Workshop C (may only link SunOS threads [-lthread], but it
work/fftw-3.3.4/m4/acx_pthread.m4:        # (non-functional) versions of the pthreads routines, so link-based
work/fftw-3.3.4/m4/acx_pthread.m4:        # tests will erroneously succeed.  (We need to link with -pthreads/-mt/
work/fftw-3.3.4/m4/ax_openmp.m4:dnl output variable to the flag (e.g. -omp) used both to compile *and* link
work/fftw-3.3.4/m4/ax_openmp.m4:dnl flags, but also link it with them as well.
work/fftw-3.3.4/m4/libtool.m4:_LT_DECL([], [LN_S], [1], [Whether we need soft or hard links])dnl
work/fftw-3.3.4/m4/libtool.m4:# All known linkers require a `.a' archive for static linking (except MSVC,
work/fftw-3.3.4/m4/libtool.m4:# Check for linker boilerplate output or warnings with
work/fftw-3.3.4/m4/libtool.m4:# the simple link test code.
work/fftw-3.3.4/m4/libtool.m4:echo "$lt_simple_link_test_code" >conftest.$ac_ext
work/fftw-3.3.4/m4/libtool.m4:eval "$ac_link" 2>&1 >/dev/null | $SED '/^$/d; /^ *+/d' >conftest.err
work/fftw-3.3.4/m4/libtool.m4:_lt_linker_boilerplate=`cat conftest.err`
work/fftw-3.3.4/m4/libtool.m4:    AC_CACHE_CHECK([for -single_module linker flag],[lt_cv_apple_cc_single_mod],
work/fftw-3.3.4/m4/libtool.m4:	# link flags.
work/fftw-3.3.4/m4/libtool.m4:	# appears in it, assume the flag caused a linker warning
work/fftw-3.3.4/m4/libtool.m4:    AC_CACHE_CHECK([for -exported_symbols_list linker flag],
work/fftw-3.3.4/m4/libtool.m4:    AC_CACHE_CHECK([for -force_load linker flag],[lt_cv_ld_force_load],
work/fftw-3.3.4/m4/libtool.m4:# Checks for linker and compiler features on darwin
work/fftw-3.3.4/m4/libtool.m4:  _LT_TAGVAR(link_all_deplibs, $1)=yes
work/fftw-3.3.4/m4/libtool.m4:    output_verbose_link_cmd=func_echo_all
work/fftw-3.3.4/m4/libtool.m4:# Some flags need to be propagated to the compiler or linker for good
work/fftw-3.3.4/m4/libtool.m4:# Check whether the given linker option works
work/fftw-3.3.4/m4/libtool.m4:   echo "$lt_simple_link_test_code" > conftest.$ac_ext
work/fftw-3.3.4/m4/libtool.m4:   if (eval $ac_link 2>conftest.err) && test -s conftest$ac_exeext; then
work/fftw-3.3.4/m4/libtool.m4:     # The linker can only warn and ignore the option if not recognized
work/fftw-3.3.4/m4/libtool.m4:       $ECHO "$_lt_linker_boilerplate" | $SED '/^$/d' > conftest.exp
work/fftw-3.3.4/m4/libtool.m4:      # linker.  It appears as though 1/2 is a usable value.
work/fftw-3.3.4/m4/libtool.m4:  if AC_TRY_EVAL(ac_link) && test -s conftest${ac_exeext} 2>/dev/null; then
work/fftw-3.3.4/m4/libtool.m4:  # if libdl is installed we need to link against it
work/fftw-3.3.4/m4/libtool.m4:	      [AC_CHECK_LIB([dld], [dld_link],
work/fftw-3.3.4/m4/libtool.m4:		    [lt_cv_dlopen="dld_link" lt_cv_dlopen_libs="-ldld"])
work/fftw-3.3.4/m4/libtool.m4:      AC_CACHE_CHECK([whether a statically linked program can dlopen itself],
work/fftw-3.3.4/m4/libtool.m4:	 [Whether dlopen of statically linked programs is supported])
work/fftw-3.3.4/m4/libtool.m4:# Check to see if we can do hard links to lock some files if needed
work/fftw-3.3.4/m4/libtool.m4:hard_links="nottested"
work/fftw-3.3.4/m4/libtool.m4:  AC_MSG_CHECKING([if we can lock with hard links])
work/fftw-3.3.4/m4/libtool.m4:  hard_links=yes
work/fftw-3.3.4/m4/libtool.m4:  ln conftest.a conftest.b 2>/dev/null && hard_links=no
work/fftw-3.3.4/m4/libtool.m4:  ln conftest.a conftest.b 2>&5 || hard_links=no
work/fftw-3.3.4/m4/libtool.m4:  ln conftest.a conftest.b 2>/dev/null && hard_links=no
work/fftw-3.3.4/m4/libtool.m4:  AC_MSG_RESULT([$hard_links])
work/fftw-3.3.4/m4/libtool.m4:  if test "$hard_links" = no; then
work/fftw-3.3.4/m4/libtool.m4:     # have to relink, otherwise we might link with an installed library
work/fftw-3.3.4/m4/libtool.m4:     # when we should be linking with a yet-to-be-installed one
work/fftw-3.3.4/m4/libtool.m4:    _LT_TAGVAR(hardcode_action, $1)=relink
work/fftw-3.3.4/m4/libtool.m4:    # We can link without hardcoding, and we can hardcode nonexisting dirs.
work/fftw-3.3.4/m4/libtool.m4:if test "$_LT_TAGVAR(hardcode_action, $1)" = relink ||
work/fftw-3.3.4/m4/libtool.m4:AC_MSG_CHECKING([dynamic linker characteristics])
work/fftw-3.3.4/m4/libtool.m4:dynamic_linker="$host_os ld.so"
work/fftw-3.3.4/m4/libtool.m4:    # collect2, so additional links can be useful in future.
work/fftw-3.3.4/m4/libtool.m4:    if test "$aix_use_runtimelinking" = yes; then
work/fftw-3.3.4/m4/libtool.m4:      # If using run time linking (on AIX 4.2 or later) use lib<name>.so
work/fftw-3.3.4/m4/libtool.m4:      # and later when we are not doing run time linking.
work/fftw-3.3.4/m4/libtool.m4:  dynamic_linker="$host_os ld.so"
work/fftw-3.3.4/m4/libtool.m4:  # /usr/X11R6/lib (/usr/X11 is a link to /usr/X11R6), but let us allow
work/fftw-3.3.4/m4/libtool.m4:    dynamic_linker='Win32 ld.exe'
work/fftw-3.3.4/m4/libtool.m4:    dynamic_linker='Win32 link.exe'
work/fftw-3.3.4/m4/libtool.m4:    dynamic_linker='Win32 ld.exe'
work/fftw-3.3.4/m4/libtool.m4:  dynamic_linker="$host_os dyld"
work/fftw-3.3.4/m4/libtool.m4:  dynamic_linker="$host_os runtime_loader"
work/fftw-3.3.4/m4/libtool.m4:  # link against other versions.
work/fftw-3.3.4/m4/libtool.m4:    dynamic_linker="$host_os dld.so"
work/fftw-3.3.4/m4/libtool.m4:    dynamic_linker="$host_os dld.sl"
work/fftw-3.3.4/m4/libtool.m4:    dynamic_linker="$host_os dld.sl"
work/fftw-3.3.4/m4/libtool.m4:  dynamic_linker='Interix 3.x ld.so.1 (PE, like ELF)'
work/fftw-3.3.4/m4/libtool.m4:  dynamic_linker=no
work/fftw-3.3.4/m4/libtool.m4:  # GNU dynamic linker.  Since this was broken with cross compilers,
work/fftw-3.3.4/m4/libtool.m4:  # most powerpc-linux boxes support dynamic linking these days and
work/fftw-3.3.4/m4/libtool.m4:  # assume the GNU/Linux dynamic linker is in use.
work/fftw-3.3.4/m4/libtool.m4:  dynamic_linker='GNU/Linux ld.so'
work/fftw-3.3.4/m4/libtool.m4:    dynamic_linker='NetBSD (a.out) ld.so'
work/fftw-3.3.4/m4/libtool.m4:    dynamic_linker='NetBSD ld.elf_so'
work/fftw-3.3.4/m4/libtool.m4:  dynamic_linker='ldqnx.so'
work/fftw-3.3.4/m4/libtool.m4:  dynamic_linker='OS/2 ld.exe'
work/fftw-3.3.4/m4/libtool.m4:  dynamic_linker=no
work/fftw-3.3.4/m4/libtool.m4:  dynamic_linker=no
work/fftw-3.3.4/m4/libtool.m4:AC_MSG_RESULT([$dynamic_linker])
work/fftw-3.3.4/m4/libtool.m4:test "$dynamic_linker" = no && can_build_shared=no
work/fftw-3.3.4/m4/libtool.m4:variables_saved_for_relink="PATH $shlibpath_var $runpath_var"
work/fftw-3.3.4/m4/libtool.m4:  variables_saved_for_relink="$variables_saved_for_relink GCC_EXEC_PREFIX COMPILER_PATH LIBRARY_PATH"
work/fftw-3.3.4/m4/libtool.m4:_LT_DECL([], [variables_saved_for_relink], [1],
work/fftw-3.3.4/m4/libtool.m4:    restored at link time])
work/fftw-3.3.4/m4/libtool.m4:    [[List of archive names.  First name is the real one, the rest are links.
work/fftw-3.3.4/m4/libtool.m4:    The last name is the one that the linker finds with -lNAME]])
work/fftw-3.3.4/m4/libtool.m4:*** depend on shared libraries, but programs linked with such libtool
work/fftw-3.3.4/m4/libtool.m4:# find the pathname to the GNU or non-GNU linker
work/fftw-3.3.4/m4/libtool.m4:_LT_TAGDECL([], [LD], [1], [The linker used to build libraries])
work/fftw-3.3.4/m4/libtool.m4:[AC_CACHE_CHECK([if the linker ($LD) is GNU ld], lt_cv_prog_gnu_ld,
work/fftw-3.3.4/m4/libtool.m4:# find reload flag for linker
work/fftw-3.3.4/m4/libtool.m4:#   -- PORTME Some linkers may need a different reload flag.
work/fftw-3.3.4/m4/libtool.m4:    AC_CHECK_TOOLS(DUMPBIN, [dumpbin "link -dump"], :)
work/fftw-3.3.4/m4/libtool.m4:# associated with a specific link library.
work/fftw-3.3.4/m4/libtool.m4:AC_CACHE_CHECK([how to associate runtime and link libraries],
work/fftw-3.3.4/m4/libtool.m4:lt_cv_sharedlib_from_linklib_cmd,
work/fftw-3.3.4/m4/libtool.m4:[lt_cv_sharedlib_from_linklib_cmd='unknown'
work/fftw-3.3.4/m4/libtool.m4:    lt_cv_sharedlib_from_linklib_cmd=func_cygming_dll_for_implib
work/fftw-3.3.4/m4/libtool.m4:    lt_cv_sharedlib_from_linklib_cmd=func_cygming_dll_for_implib_fallback
work/fftw-3.3.4/m4/libtool.m4:  # fallback: assume linklib IS sharedlib
work/fftw-3.3.4/m4/libtool.m4:  lt_cv_sharedlib_from_linklib_cmd="$ECHO"
work/fftw-3.3.4/m4/libtool.m4:sharedlib_from_linklib_cmd=$lt_cv_sharedlib_from_linklib_cmd
work/fftw-3.3.4/m4/libtool.m4:test -z "$sharedlib_from_linklib_cmd" && sharedlib_from_linklib_cmd=$ECHO
work/fftw-3.3.4/m4/libtool.m4:_LT_DECL([], [sharedlib_from_linklib_cmd], [1],
work/fftw-3.3.4/m4/libtool.m4:    [Command to associate shared and link libraries])
work/fftw-3.3.4/m4/libtool.m4:# Some systems (esp. on ia64) link data and code symbols differently,
work/fftw-3.3.4/m4/libtool.m4:/* This works around a problem in FreeBSD linker */
work/fftw-3.3.4/m4/libtool.m4:	  # Now try linking the two files.
work/fftw-3.3.4/m4/libtool.m4:	  if AC_TRY_EVAL(ac_link) && test -s conftest${ac_exeext}; then
work/fftw-3.3.4/m4/libtool.m4:	    _LT_TAGVAR(lt_prog_compiler_static, $1)='-qstaticlink'
work/fftw-3.3.4/m4/libtool.m4:      _LT_TAGVAR(lt_prog_compiler_wl, $1)='-Xlinker '
work/fftw-3.3.4/m4/libtool.m4:    # PORTME Check for flag to pass linker flags through the system compiler.
work/fftw-3.3.4/m4/libtool.m4:	_LT_TAGVAR(lt_prog_compiler_static, $1)='-qstaticlink'
work/fftw-3.3.4/m4/libtool.m4:	  # Sun Fortran 8.3 passes all unrecognized flags to the linker
work/fftw-3.3.4/m4/libtool.m4:	[How to pass a linker flag through the compiler])
work/fftw-3.3.4/m4/libtool.m4:_LT_TAGDECL([link_static_flag], [lt_prog_compiler_static], [1],
work/fftw-3.3.4/m4/libtool.m4:	[Compiler flag to prevent dynamic linking])
work/fftw-3.3.4/m4/libtool.m4:# See if the linker supports building shared libraries.
work/fftw-3.3.4/m4/libtool.m4:AC_MSG_CHECKING([whether the $compiler linker ($LD) supports shared libraries])
work/fftw-3.3.4/m4/libtool.m4:  _LT_TAGVAR(link_all_deplibs, $1)=unknown
work/fftw-3.3.4/m4/libtool.m4:  # platforms (ab)use it in PIC code, but their linkers get confused if
work/fftw-3.3.4/m4/libtool.m4:  # On some targets, GNU ld is compatible enough with the native linker
work/fftw-3.3.4/m4/libtool.m4:	# with the native linker.  However, as the warning in the GNU ld
work/fftw-3.3.4/m4/libtool.m4:      # On AIX/PPC, the GNU linker is very broken
work/fftw-3.3.4/m4/libtool.m4:*** Warning: the GNU linker, at least up to release 2.19, is reported
work/fftw-3.3.4/m4/libtool.m4:*** 2.20 or above, or modify your PATH so that a non-GNU linker is found.
work/fftw-3.3.4/m4/libtool.m4:        _LT_TAGVAR(archive_cmds, $1)='$CC -shared $libobjs $deplibs $compiler_flags -o $output_objdir/$soname ${wl}--enable-auto-image-base -Xlinker --out-implib -Xlinker $lib'
work/fftw-3.3.4/m4/libtool.m4:	$CC -shared $output_objdir/$soname.def $libobjs $deplibs $compiler_flags -o $output_objdir/$soname ${wl}--enable-auto-image-base -Xlinker --out-implib -Xlinker $lib'
work/fftw-3.3.4/m4/libtool.m4:      _LT_TAGVAR(link_all_deplibs, $1)=yes
work/fftw-3.3.4/m4/libtool.m4:      # 256 KiB-aligned image base between 0x50000000 and 0x6FFC0000 at link
work/fftw-3.3.4/m4/libtool.m4:	  diet\ *) tmp_diet=yes;;	# linux-dietlibc with static linking (!diet-dyn)
work/fftw-3.3.4/m4/libtool.m4:	  _LT_TAGVAR(archive_cmds, $1)='$LD -shared $libobjs $deplibs $linker_flags -soname $soname -o $lib'
work/fftw-3.3.4/m4/libtool.m4:	      $LD -shared $libobjs $deplibs $linker_flags -soname $soname -version-script $output_objdir/$libname.ver -o $lib'
work/fftw-3.3.4/m4/libtool.m4:	_LT_TAGVAR(archive_cmds, $1)='$LD -Bshareable $libobjs $deplibs $linker_flags -o $lib'
work/fftw-3.3.4/m4/libtool.m4:*** Warning: The releases 2.8.* of the GNU linker cannot reliably
work/fftw-3.3.4/m4/libtool.m4:*** your PATH or compiler configuration so that the native linker is
work/fftw-3.3.4/m4/libtool.m4:*** Warning: Releases of the GNU linker prior to 2.16.91.0.3 can not
work/fftw-3.3.4/m4/libtool.m4:*** your PATH or compiler configuration so that the native linker is
work/fftw-3.3.4/m4/libtool.m4:      _LT_TAGVAR(archive_cmds, $1)='$LD -assert pure-text -Bshareable -o $lib $libobjs $deplibs $linker_flags'
work/fftw-3.3.4/m4/libtool.m4:    # PORTME fill in a description of your system's linker (not GNU ld)
work/fftw-3.3.4/m4/libtool.m4:      _LT_TAGVAR(archive_expsym_cmds, $1)='$LD -o $output_objdir/$soname $libobjs $deplibs $linker_flags -bE:$export_symbols -T512 -H512 -bM:SRE~$AR $AR_FLAGS $lib $output_objdir/$soname'
work/fftw-3.3.4/m4/libtool.m4:      # Note: this linker hardcodes the directories in LIBPATH if there
work/fftw-3.3.4/m4/libtool.m4:	# Neither direct hardcoding nor static linking is supported with a
work/fftw-3.3.4/m4/libtool.m4:	# On IA64, the linker does run time linking by default, so we don't
work/fftw-3.3.4/m4/libtool.m4:	aix_use_runtimelinking=no
work/fftw-3.3.4/m4/libtool.m4:	aix_use_runtimelinking=no
work/fftw-3.3.4/m4/libtool.m4:	# Test if we are trying to use run time linking or normal
work/fftw-3.3.4/m4/libtool.m4:	# AIX style linking. If -brtl is somewhere in LDFLAGS, we
work/fftw-3.3.4/m4/libtool.m4:	# need to do runtime linking.
work/fftw-3.3.4/m4/libtool.m4:	    aix_use_runtimelinking=yes
work/fftw-3.3.4/m4/libtool.m4:      # have problems creating the table of contents.  If linking a library
work/fftw-3.3.4/m4/libtool.m4:      _LT_TAGVAR(link_all_deplibs, $1)=yes
work/fftw-3.3.4/m4/libtool.m4:	  # to unsupported forces relinking
work/fftw-3.3.4/m4/libtool.m4:	if test "$aix_use_runtimelinking" = yes; then
work/fftw-3.3.4/m4/libtool.m4:	  if test "$aix_use_runtimelinking" = yes; then
work/fftw-3.3.4/m4/libtool.m4:      if test "$aix_use_runtimelinking" = yes; then
work/fftw-3.3.4/m4/libtool.m4:	# -berok will link without error, but may produce a broken library.
work/fftw-3.3.4/m4/libtool.m4:	  # -berok will link without error, but may produce a broken library.
work/fftw-3.3.4/m4/libtool.m4:	# FIXME: Setting linknames here is a bad hack.
work/fftw-3.3.4/m4/libtool.m4:	_LT_TAGVAR(archive_cmds, $1)='$CC -o $output_objdir/$soname $libobjs $compiler_flags $deplibs -Wl,-dll~linknames='
work/fftw-3.3.4/m4/libtool.m4:	    sed -n -e 's/\\\\\\\(.*\\\\\\\)/-link\\\ -EXPORT:\\\\\\\1/' -e '1\\\!p' < $export_symbols > $output_objdir/$soname.exp;
work/fftw-3.3.4/m4/libtool.m4:	    sed -e 's/\\\\\\\(.*\\\\\\\)/-link\\\ -EXPORT:\\\\\\\1/' < $export_symbols > $output_objdir/$soname.exp;
work/fftw-3.3.4/m4/libtool.m4:	  linknames='
work/fftw-3.3.4/m4/libtool.m4:	# The linker will not automatically build a static lib if we build a DLL.
work/fftw-3.3.4/m4/libtool.m4:	_LT_TAGVAR(postlink_cmds, $1)='lt_outputfile="@OUTPUT@"~
work/fftw-3.3.4/m4/libtool.m4:	# FIXME: Setting linknames here is a bad hack.
work/fftw-3.3.4/m4/libtool.m4:	_LT_TAGVAR(archive_cmds, $1)='$CC -o $lib $libobjs $compiler_flags `func_echo_all "$deplibs" | $SED '\''s/ -lc$//'\''` -link -dll~linknames='
work/fftw-3.3.4/m4/libtool.m4:	# The linker will automatically build a .lib file if we build a DLL.
work/fftw-3.3.4/m4/libtool.m4:      _LT_TAGVAR(archive_cmds, $1)='$LD -G -h $soname -o $lib $libobjs $deplibs $linker_flags'
work/fftw-3.3.4/m4/libtool.m4:      _LT_TAGVAR(archive_cmds, $1)='$LD -Bshareable -o $lib $libobjs $deplibs $linker_flags /usr/lib/c++rt0.o'
work/fftw-3.3.4/m4/libtool.m4:      _LT_TAGVAR(archive_cmds, $1)='$LD -Bshareable -o $lib $libobjs $deplibs $linker_flags'
work/fftw-3.3.4/m4/libtool.m4:	_LT_TAGVAR(archive_cmds, $1)='$RM $output_objdir/$soname~$LD -b +b $install_libdir -o $output_objdir/$soname $libobjs $deplibs $linker_flags~test $output_objdir/$soname = $lib || mv $output_objdir/$soname $lib'
work/fftw-3.3.4/m4/libtool.m4:	_LT_TAGVAR(archive_cmds, $1)='$LD -b +h $soname +b $install_libdir -o $lib $libobjs $deplibs $linker_flags'
work/fftw-3.3.4/m4/libtool.m4:	    [_LT_TAGVAR(archive_cmds, $1)='$LD -b +h $soname +b $install_libdir -o $lib $libobjs $deplibs $linker_flags'])],
work/fftw-3.3.4/m4/libtool.m4:	AC_CACHE_CHECK([whether the $host_os linker accepts -exported_symbol],
work/fftw-3.3.4/m4/libtool.m4:      _LT_TAGVAR(link_all_deplibs, $1)=yes
work/fftw-3.3.4/m4/libtool.m4:	_LT_TAGVAR(archive_cmds, $1)='$LD -Bshareable -o $lib $libobjs $deplibs $linker_flags'  # a.out
work/fftw-3.3.4/m4/libtool.m4:	_LT_TAGVAR(archive_cmds, $1)='$LD -shared -o $lib $libobjs $deplibs $linker_flags'      # ELF
work/fftw-3.3.4/m4/libtool.m4:      _LT_TAGVAR(archive_cmds, $1)='$LD -G -h $soname -o $lib $libobjs $deplibs $linker_flags'
work/fftw-3.3.4/m4/libtool.m4:	     _LT_TAGVAR(archive_cmds, $1)='$LD -Bshareable -o $lib $libobjs $deplibs $linker_flags'
work/fftw-3.3.4/m4/libtool.m4:	  _LT_TAGVAR(archive_cmds, $1)='$LD -G${allow_undefined_flag} -h $soname -o $lib $libobjs $deplibs $linker_flags'
work/fftw-3.3.4/m4/libtool.m4:	  $LD -G${allow_undefined_flag} -M $lib.exp -h $soname -o $lib $libobjs $deplibs $linker_flags~$RM $lib.exp'
work/fftw-3.3.4/m4/libtool.m4:	# The compiler driver will combine and reorder linker options,
work/fftw-3.3.4/m4/libtool.m4:	# but understands `-z linker_flag'.  GCC discards it without `$wl',
work/fftw-3.3.4/m4/libtool.m4:      _LT_TAGVAR(link_all_deplibs, $1)=yes
work/fftw-3.3.4/m4/libtool.m4:	# Use $CC to link under sequent, because it throws in some extra .o
work/fftw-3.3.4/m4/libtool.m4:	_LT_TAGVAR(archive_cmds, $1)='$LD -assert pure-text -Bstatic -o $lib $libobjs $deplibs $linker_flags'
work/fftw-3.3.4/m4/libtool.m4:	  _LT_TAGVAR(archive_cmds, $1)='$LD -G -h $soname -o $lib $libobjs $deplibs $linker_flags'
work/fftw-3.3.4/m4/libtool.m4:	  _LT_TAGVAR(archive_cmds, $1)='$LD -G -o $lib $libobjs $deplibs $linker_flags'
work/fftw-3.3.4/m4/libtool.m4:	  _LT_TAGVAR(archive_cmds, $1)='$LD -G -h $soname -o $lib $libobjs $deplibs $linker_flags'
work/fftw-3.3.4/m4/libtool.m4:      _LT_TAGVAR(archive_cmds, $1)='$LD -G -h $soname -o $lib $libobjs $deplibs $linker_flags'
work/fftw-3.3.4/m4/libtool.m4:	_LT_TAGVAR(archive_cmds, $1)='$LD -G -h $soname -o $lib $libobjs $deplibs $linker_flags'
work/fftw-3.3.4/m4/libtool.m4:      # link with -lc, and that would cause any symbols used from libc to
work/fftw-3.3.4/m4/libtool.m4:      # ever link correctly.  If we're not using GNU ld we use -z text
work/fftw-3.3.4/m4/libtool.m4:      _LT_TAGVAR(link_all_deplibs, $1)=yes
work/fftw-3.3.4/m4/libtool.m4:      _LT_TAGVAR(archive_cmds, $1)='$LD -G -h $soname -o $lib $libobjs $deplibs $linker_flags'
work/fftw-3.3.4/m4/libtool.m4:# Do we need to explicitly link libc?
work/fftw-3.3.4/m4/libtool.m4:      # Test whether the compiler implicitly links with -lc since on some
work/fftw-3.3.4/m4/libtool.m4:      AC_CACHE_CHECK([whether -lc should be explicitly linked in],
work/fftw-3.3.4/m4/libtool.m4:	  linker_flags=-v
work/fftw-3.3.4/m4/libtool.m4:    [Create a temporary old-style archive to link instead of a shared archive])
work/fftw-3.3.4/m4/libtool.m4:    [Flag to hardcode $libdir into a binary during linking.
work/fftw-3.3.4/m4/libtool.m4:    [Set to "yes" if using DIR/libNAME${shared_ext} during linking hardcodes
work/fftw-3.3.4/m4/libtool.m4:    [Set to "yes" if using DIR/libNAME${shared_ext} during linking hardcodes
work/fftw-3.3.4/m4/libtool.m4:    [Set to "yes" if using the -LDIR flag during linking hardcodes DIR
work/fftw-3.3.4/m4/libtool.m4:    [Set to "yes" if using SHLIBPATH_VAR=DIR during linking hardcodes DIR
work/fftw-3.3.4/m4/libtool.m4:    into the library and all subsequent libraries and executables linked
work/fftw-3.3.4/m4/libtool.m4:    [Set to yes if linker adds runtime paths of dependent libraries
work/fftw-3.3.4/m4/libtool.m4:_LT_TAGDECL([], [link_all_deplibs], [0],
work/fftw-3.3.4/m4/libtool.m4:    [Whether libtool must link a program against all its dependency libraries])
work/fftw-3.3.4/m4/libtool.m4:_LT_TAGDECL([], [prelink_cmds], [2],
work/fftw-3.3.4/m4/libtool.m4:    [Commands necessary for linking programs (against libraries) with templates])
work/fftw-3.3.4/m4/libtool.m4:_LT_TAGDECL([], [postlink_cmds], [2],
work/fftw-3.3.4/m4/libtool.m4:    [Commands necessary for finishing linking programs])
work/fftw-3.3.4/m4/libtool.m4:# Code to be used in simple link tests
work/fftw-3.3.4/m4/libtool.m4:lt_simple_link_test_code='int main(){return(0);}'
work/fftw-3.3.4/m4/libtool.m4:    if test "$host_cpu" != ia64 && test "$aix_use_runtimelinking" = no ; then
work/fftw-3.3.4/m4/libtool.m4:_LT_TAGVAR(link_all_deplibs, $1)=unknown
work/fftw-3.3.4/m4/libtool.m4:  # Code to be used in simple link tests
work/fftw-3.3.4/m4/libtool.m4:  lt_simple_link_test_code='int main(int, char *[[]]) { return(0); }'
work/fftw-3.3.4/m4/libtool.m4:      # Check if GNU C++ uses GNU ld as the underlying linker, since the
work/fftw-3.3.4/m4/libtool.m4:        # linker, instead of GNU ld.  If possible, this setting should
work/fftw-3.3.4/m4/libtool.m4:        # overridden to take advantage of the native linker features on
work/fftw-3.3.4/m4/libtool.m4:      # linking a shared library.
work/fftw-3.3.4/m4/libtool.m4:      output_verbose_link_cmd='$CC -shared $CFLAGS -v conftest.$objext 2>&1 | $GREP -v "^Configured with:" | $GREP "\-L"'
work/fftw-3.3.4/m4/libtool.m4:    # PORTME: fill in a description of your system's C++ link characteristics
work/fftw-3.3.4/m4/libtool.m4:    AC_MSG_CHECKING([whether the $compiler linker ($LD) supports shared libraries])
work/fftw-3.3.4/m4/libtool.m4:          # On IA64, the linker does run time linking by default, so we don't
work/fftw-3.3.4/m4/libtool.m4:          aix_use_runtimelinking=no
work/fftw-3.3.4/m4/libtool.m4:          aix_use_runtimelinking=no
work/fftw-3.3.4/m4/libtool.m4:          # Test if we are trying to use run time linking or normal
work/fftw-3.3.4/m4/libtool.m4:          # AIX style linking. If -brtl is somewhere in LDFLAGS, we
work/fftw-3.3.4/m4/libtool.m4:          # need to do runtime linking.
work/fftw-3.3.4/m4/libtool.m4:	        aix_use_runtimelinking=yes
work/fftw-3.3.4/m4/libtool.m4:        # have problems creating the table of contents.  If linking a library
work/fftw-3.3.4/m4/libtool.m4:        _LT_TAGVAR(link_all_deplibs, $1)=yes
work/fftw-3.3.4/m4/libtool.m4:	    # to unsupported forces relinking
work/fftw-3.3.4/m4/libtool.m4:	  if test "$aix_use_runtimelinking" = yes; then
work/fftw-3.3.4/m4/libtool.m4:	    if test "$aix_use_runtimelinking" = yes; then
work/fftw-3.3.4/m4/libtool.m4:        if test "$aix_use_runtimelinking" = yes; then
work/fftw-3.3.4/m4/libtool.m4:          # -berok will link without error, but may produce a broken library.
work/fftw-3.3.4/m4/libtool.m4:	    # -berok will link without error, but may produce a broken library.
work/fftw-3.3.4/m4/libtool.m4:	  # FIXME: Setting linknames here is a bad hack.
work/fftw-3.3.4/m4/libtool.m4:	  _LT_TAGVAR(archive_cmds, $1)='$CC -o $output_objdir/$soname $libobjs $compiler_flags $deplibs -Wl,-dll~linknames='
work/fftw-3.3.4/m4/libtool.m4:	      $SED -n -e 's/\\\\\\\(.*\\\\\\\)/-link\\\ -EXPORT:\\\\\\\1/' -e '1\\\!p' < $export_symbols > $output_objdir/$soname.exp;
work/fftw-3.3.4/m4/libtool.m4:	      $SED -e 's/\\\\\\\(.*\\\\\\\)/-link\\\ -EXPORT:\\\\\\\1/' < $export_symbols > $output_objdir/$soname.exp;
work/fftw-3.3.4/m4/libtool.m4:	    linknames='
work/fftw-3.3.4/m4/libtool.m4:	  # The linker will not automatically build a static lib if we build a DLL.
work/fftw-3.3.4/m4/libtool.m4:	  _LT_TAGVAR(postlink_cmds, $1)='lt_outputfile="@OUTPUT@"~
work/fftw-3.3.4/m4/libtool.m4:	    _LT_TAGVAR(archive_cmds, $1)='$CC -shared -nostdlib $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags -o $output_objdir/$soname ${wl}--enable-auto-image-base -Xlinker --out-implib -Xlinker $lib'
work/fftw-3.3.4/m4/libtool.m4:	    $CC -shared -nostdlib $output_objdir/$soname.def $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags -o $output_objdir/$soname ${wl}--enable-auto-image-base -Xlinker --out-implib -Xlinker $lib'
work/fftw-3.3.4/m4/libtool.m4:        _LT_TAGVAR(link_all_deplibs, $1)=yes
work/fftw-3.3.4/m4/libtool.m4:            # linking a shared library.
work/fftw-3.3.4/m4/libtool.m4:            # explicitly linking system object files so we need to strip them
work/fftw-3.3.4/m4/libtool.m4:            output_verbose_link_cmd='templist=`($CC -b $CFLAGS -v conftest.$objext 2>&1) | $EGREP "\-L"`; list=""; for z in $templist; do case $z in conftest.$objext) list="$list $z";; *.$objext);; *) list="$list $z";;esac; done; func_echo_all "$list"'
work/fftw-3.3.4/m4/libtool.m4:	    # linking a shared library.
work/fftw-3.3.4/m4/libtool.m4:	    # explicitly linking system object files so we need to strip them
work/fftw-3.3.4/m4/libtool.m4:	    output_verbose_link_cmd='templist=`($CC -b $CFLAGS -v conftest.$objext 2>&1) | $GREP "\-L"`; list=""; for z in $templist; do case $z in conftest.$objext) list="$list $z";; *.$objext);; *) list="$list $z";;esac; done; func_echo_all "$list"'
work/fftw-3.3.4/m4/libtool.m4:	# 256 KiB-aligned image base between 0x50000000 and 0x6FFC0000 at link
work/fftw-3.3.4/m4/libtool.m4:	    _LT_TAGVAR(link_all_deplibs, $1)=yes
work/fftw-3.3.4/m4/libtool.m4:	    # to its proper name (with version) after linking.
work/fftw-3.3.4/m4/libtool.m4:	    # linking a shared library.
work/fftw-3.3.4/m4/libtool.m4:	    # explicitly linking system object files so we need to strip them
work/fftw-3.3.4/m4/libtool.m4:	    output_verbose_link_cmd='templist=`$CC $CFLAGS -v conftest.$objext -o libconftest$shared_ext 2>&1 | $GREP "ld"`; rm -f libconftest$shared_ext; list=""; for z in $templist; do case $z in conftest.$objext) list="$list $z";; *.$objext);; *) list="$list $z";;esac; done; func_echo_all "$list"'
work/fftw-3.3.4/m4/libtool.m4:	      _LT_TAGVAR(prelink_cmds, $1)='tpldir=Template.dir~
work/fftw-3.3.4/m4/libtool.m4:		$CC --prelink_objects --instantiation_dir $tpldir $objs $libobjs $compile_deplibs~
work/fftw-3.3.4/m4/libtool.m4:		$CC --prelink_objects --instantiation_dir $tpldir $oldobjs$old_deplibs~
work/fftw-3.3.4/m4/libtool.m4:		$CC --prelink_objects --instantiation_dir $tpldir $predep_objects $libobjs $deplibs $convenience $postdep_objects~
work/fftw-3.3.4/m4/libtool.m4:		$CC --prelink_objects --instantiation_dir $tpldir $predep_objects $libobjs $deplibs $convenience $postdep_objects~
work/fftw-3.3.4/m4/libtool.m4:	    # linking a shared library.
work/fftw-3.3.4/m4/libtool.m4:	    # explicitly linking system object files so we need to strip them
work/fftw-3.3.4/m4/libtool.m4:	    output_verbose_link_cmd='templist=`$CC -shared $CFLAGS -v conftest.$objext 2>&1 | $GREP "ld"`; templist=`func_echo_all "$templist" | $SED "s/\(^.*ld.*\)\( .*ld .*$\)/\1/"`; list=""; for z in $templist; do case $z in conftest.$objext) list="$list $z";; *.$objext);; *) list="$list $z";;esac; done; func_echo_all "X$list" | $Xsed'
work/fftw-3.3.4/m4/libtool.m4:	      output_verbose_link_cmd='func_echo_all'
work/fftw-3.3.4/m4/libtool.m4:	  _LT_TAGVAR(archive_cmds, $1)='$LD -Bshareable  -o $lib $predep_objects $libobjs $deplibs $postdep_objects $linker_flags'
work/fftw-3.3.4/m4/libtool.m4:	output_verbose_link_cmd='$CC -shared $CFLAGS -v conftest.$objext 2>&1 | $GREP conftest.$objext | $SED -e "s:-lgcc -lc -lgcc::"'
work/fftw-3.3.4/m4/libtool.m4:	  output_verbose_link_cmd=func_echo_all
work/fftw-3.3.4/m4/libtool.m4:	    # to its proper name (with version) after linking.
work/fftw-3.3.4/m4/libtool.m4:	    # linking a shared library.
work/fftw-3.3.4/m4/libtool.m4:	    # explicitly linking system object files so we need to strip them
work/fftw-3.3.4/m4/libtool.m4:	    output_verbose_link_cmd='templist=`$CC -shared $CFLAGS -v conftest.$objext 2>&1 | $GREP "ld" | $GREP -v "ld:"`; templist=`func_echo_all "$templist" | $SED "s/\(^.*ld.*\)\( .*ld.*$\)/\1/"`; list=""; for z in $templist; do case $z in conftest.$objext) list="$list $z";; *.$objext);; *) list="$list $z";;esac; done; func_echo_all "$list"'
work/fftw-3.3.4/m4/libtool.m4:	      # linking a shared library.
work/fftw-3.3.4/m4/libtool.m4:	      output_verbose_link_cmd='$CC -shared $CFLAGS -v conftest.$objext 2>&1 | $GREP -v "^Configured with:" | $GREP "\-L"'
work/fftw-3.3.4/m4/libtool.m4:		# The compiler driver will combine and reorder linker options,
work/fftw-3.3.4/m4/libtool.m4:		# but understands `-z linker_flag'.
work/fftw-3.3.4/m4/libtool.m4:	    _LT_TAGVAR(link_all_deplibs, $1)=yes
work/fftw-3.3.4/m4/libtool.m4:	    output_verbose_link_cmd='func_echo_all'
work/fftw-3.3.4/m4/libtool.m4:	    # GNU C++ compiler with Solaris linker
work/fftw-3.3.4/m4/libtool.m4:	        # linking a shared library.
work/fftw-3.3.4/m4/libtool.m4:	        output_verbose_link_cmd='$CC -shared $CFLAGS -v conftest.$objext 2>&1 | $GREP -v "^Configured with:" | $GREP "\-L"'
work/fftw-3.3.4/m4/libtool.m4:	        # linking a shared library.
work/fftw-3.3.4/m4/libtool.m4:	        output_verbose_link_cmd='$CC -G $CFLAGS -v conftest.$objext 2>&1 | $GREP -v "^Configured with:" | $GREP "\-L"'
work/fftw-3.3.4/m4/libtool.m4:	# link with -lc, and that would cause any symbols used from libc to
work/fftw-3.3.4/m4/libtool.m4:	# ever link correctly.  If we're not using GNU ld we use -z text
work/fftw-3.3.4/m4/libtool.m4:	_LT_TAGVAR(link_all_deplibs, $1)=yes
work/fftw-3.3.4/m4/libtool.m4:	    _LT_TAGVAR(old_archive_cmds, $1)='$CC -Tprelink_objects $oldobjs~
work/fftw-3.3.4/m4/libtool.m4:	    _LT_TAGVAR(reload_cmds, $1)='$CC -Tprelink_objects $reload_objs~
work/fftw-3.3.4/m4/libtool.m4:# compiler output when linking a shared library.
work/fftw-3.3.4/m4/libtool.m4:# Dependencies to place before and after the object being linked:
work/fftw-3.3.4/m4/libtool.m4:dnl tag define a new lt_????_link_test_code variable,
work/fftw-3.3.4/m4/libtool.m4:*\ -fuse-linker-plugin*\ *) CFLAGS="$CFLAGS -fno-use-linker-plugin" ;;
work/fftw-3.3.4/m4/libtool.m4:  for p in `eval "$output_verbose_link_cmd"`; do
work/fftw-3.3.4/m4/libtool.m4:	 # linked, so don't bother handling this case.
work/fftw-3.3.4/m4/libtool.m4:    # archive will be linked into the output, leading to subtle bugs.
work/fftw-3.3.4/m4/libtool.m4:    [Dependencies to place before and after the objects being linked to
work/fftw-3.3.4/m4/libtool.m4:    [The library search path used internally by the compiler when linking
work/fftw-3.3.4/m4/libtool.m4:_LT_TAGVAR(link_all_deplibs, $1)=unknown
work/fftw-3.3.4/m4/libtool.m4:  # Code to be used in simple link tests
work/fftw-3.3.4/m4/libtool.m4:  lt_simple_link_test_code="\
work/fftw-3.3.4/m4/libtool.m4:	if test "$host_cpu" != ia64 && test "$aix_use_runtimelinking" = no ; then
work/fftw-3.3.4/m4/libtool.m4:_LT_TAGVAR(link_all_deplibs, $1)=unknown
work/fftw-3.3.4/m4/libtool.m4:  # Code to be used in simple link tests
work/fftw-3.3.4/m4/libtool.m4:  lt_simple_link_test_code="\
work/fftw-3.3.4/m4/libtool.m4:	if test "$host_cpu" != ia64 && test "$aix_use_runtimelinking" = no ; then
work/fftw-3.3.4/m4/libtool.m4:# Code to be used in simple link tests
work/fftw-3.3.4/m4/libtool.m4:lt_simple_link_test_code='public class conftest { public static void main(String[[]] argv) {}; }'
work/fftw-3.3.4/m4/libtool.m4:# GCJ did not exist at the time GCC didn't implicitly link libc in.
work/fftw-3.3.4/m4/libtool.m4:# Code to be used in simple link tests
work/fftw-3.3.4/m4/libtool.m4:lt_simple_link_test_code='package main; func main() { }'
work/fftw-3.3.4/m4/libtool.m4:# Go did not exist at the time GCC didn't implicitly link libc in.
work/fftw-3.3.4/m4/libtool.m4:# Code to be used in simple link tests
work/fftw-3.3.4/m4/libtool.m4:lt_simple_link_test_code="$lt_simple_compile_test_code"
work/fftw-3.3.4/mpi/Makefile.in:	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CCLD) \
work/fftw-3.3.4/mpi/Makefile.in:	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(mpi_bench_CFLAGS) \
work/fftw-3.3.4/mpi/Makefile.in:	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
work/fftw-3.3.4/rdft/Makefile.in:	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
work/fftw-3.3.4/rdft/dft-r2hc.c:   to link to the real codelets and not the complex ones.  It could
work/fftw-3.3.4/rdft/scalar/Makefile.in:	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
work/fftw-3.3.4/rdft/scalar/r2cb/Makefile.in:	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
work/fftw-3.3.4/rdft/scalar/r2cf/Makefile.in:	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
work/fftw-3.3.4/rdft/scalar/r2r/Makefile.in:	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
work/fftw-3.3.4/rdft/simd/altivec/Makefile.in:	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
work/fftw-3.3.4/rdft/simd/avx/Makefile.in:	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
work/fftw-3.3.4/rdft/simd/neon/Makefile.in:	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
work/fftw-3.3.4/rdft/simd/sse2/Makefile.in:	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
work/fftw-3.3.4/reodft/Makefile.in:	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
work/fftw-3.3.4/simd-support/Makefile.in:	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CCLD) \
work/fftw-3.3.4/simd-support/Makefile.in:	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
work/fftw-3.3.4/tests/Makefile.in:	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(bench_CFLAGS) $(CFLAGS) \
work/fftw-3.3.4/tests/Makefile.in:	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
work/fftw-3.3.4/tests/fftw-bench.c:     /* Regression test: check that fftw_malloc exists and links
work/fftw-3.3.4/threads/Makefile.in:	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CCLD) \
work/fftw-3.3.4/threads/Makefile.in:	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CCLD) \
work/fftw-3.3.4/threads/Makefile.in:	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
work/fftw-3.3.4/threads/f77api.c:   for the Fortran linker, and we must omit the f77 API. */
work/fftw-3.3.4/tools/Makefile.in:	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CCLD) \
work/fftw-3.3.4/tools/Makefile.in:	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
work/fftw-3.3.4/tools/fftw-wisdom-to-conf.1:configuration routine is a C subroutine that you link into your
work/fftw-3.3.4/tools/fftw-wisdom-to-conf.1:limited set of sizes and types, and if you are statically linking your
work/fftw-3.3.4/tools/fftw-wisdom-to-conf.1:code must be linked into any program using FFTW.)
work/fftw-3.3.4/tools/fftw-wisdom-to-conf.1:and then re-link your program with the resulting configuration routine.
