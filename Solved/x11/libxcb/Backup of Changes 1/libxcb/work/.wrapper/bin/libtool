#! /bin/sh
empty_file=""
arg_pp="/boot/home/pkgsrc/pkgsrc/x11/libxcb/work/.wrapper/tmp/empty"
arg_pp_main="/boot/home/pkgsrc/pkgsrc/x11/libxcb/work/.wrapper/tmp/arg-pp-main"
arg_source="/boot/home/pkgsrc/pkgsrc/x11/libxcb/work/.wrapper/tmp/arg-source"
buildcmd="/boot/home/pkgsrc/pkgsrc/x11/libxcb/work/.wrapper/tmp/buildcmd-libtool"
cache="/boot/home/pkgsrc/pkgsrc/x11/libxcb/work/.wrapper/tmp/cache-libtool"
cache_body="/boot/home/pkgsrc/pkgsrc/x11/libxcb/work/.wrapper/tmp/cache-body-libtool"
cleanup="/boot/home/pkgsrc/pkgsrc/x11/libxcb/work/.wrapper/tmp/cleanup-libtool"
cmd_sink="/boot/home/pkgsrc/pkgsrc/x11/libxcb/work/.wrapper/tmp/cmd-sink-libtool"
logic="/boot/home/pkgsrc/pkgsrc/x11/libxcb/work/.wrapper/tmp/logic"
reorderlibs="/boot/home/pkgsrc/pkgsrc/x11/libxcb/work/.wrapper/tmp/reorderlibs"
shell_lib="/boot/home/pkgsrc/pkgsrc/x11/libxcb/work/.wrapper/tmp/shell-lib"
scan="/boot/home/pkgsrc/pkgsrc/x11/libxcb/work/.wrapper/tmp/scan-libtool"
transform="/boot/home/pkgsrc/pkgsrc/x11/libxcb/work/.wrapper/tmp/transform-libtool"
transform_sed=" -f /boot/home/pkgsrc/pkgsrc/x11/libxcb/work/.wrapper/tmp/transform.sed"
wrapper_subr_sh="/boot/home/pkgsrc/pkgsrc/x11/libxcb/work/.wrapper/tmp/wrapper-subr.sh"
wrapper_abi=""		# see ABI in mk/defaults/mk.conf
wrapper_type="LIBTOOL"	# one of AS, CC, CXX, FC, IMAKE, LD, LIBTOOL.
wrapperlog="${WRAPPER_LOG-/boot/home/pkgsrc/pkgsrc/x11/libxcb/work/.work.log}"
skip_transform="${WRAPPER_SKIP_TRANSFORM-no}"
debug="${WRAPPER_DEBUG-no}"
cat="/bin/cat"
echo="echo"
expr="/bin/expr"
mv="/bin/mv"
sed="/bin/sed"
test="test"
Xsed="$sed -e 1s/^X//"
. $shell_lib
. "$wrapper_subr_sh"
updatecache=${WRAPPER_UPDATE_CACHE-yes}
reorder=${WRAPPER_REORDER-no}
case $debug in
yes)	debug_log="msg_log" ;;
*)	debug_log=":" ;;
esac
qcmd="$0"; for arg in ${1+"$@"}; do shquote "$arg"; qcmd="$qcmd $shquoted"; done
msg_log "$wrapperlog" "[*] $0 $qcmd"
cmd="/boot/home/pkg/bin/libtool"
case "$*" in
--wrappee-name) $echo $cmd ; exit ;;
esac
libs=""
rellpath=""
do_transform=yes
init_queue argbuf
init_queue cmdbuf
append_extra_args=yes
. $scan
case $append_extra_args in
yes)
	$debug_log $wrapperlog "    (wrapper.sh) append args: -L/boot/home/pkgsrc/pkgsrc/x11/libxcb/work/.buildlink/lib"
	set -- "$@" -L/boot/home/pkgsrc/pkgsrc/x11/libxcb/work/.buildlink/lib
	;;
*)
	;;
esac
. $arg_source
. $logic
. $cmd_sink
case $reorder in
yes)
	if $test -n "$libs"; then
		. $reorderlibs
	fi
	;;
esac
cmdline="$cmd $libs"
PATH="/boot/home/pkgsrc/pkgsrc/x11/libxcb/work/.wrapper/bin:/boot/home/pkgsrc/pkgsrc/x11/libxcb/work/.buildlink/bin:/boot/home/pkgsrc/pkgsrc/x11/libxcb/work/.gcc/bin:/boot/home/pkgsrc/pkgsrc/x11/libxcb/work/.tools/bin:/boot/home/pkg/bin:.:/boot/home/config/non-packaged/bin:/boot/home/config/bin:/boot/system/non-packaged/bin:/bin:/boot/system/apps:/boot/system/preferences"; export PATH
msg_log $wrapperlog "<.>" "$cmdline"
if [ "${empty_file}" = "${cleanup}" ] && [ "$debug" != "yes" ]; then
	eval "exec $cmdline"
	wrapper_result=$?
else
	wrapper_result=0
	eval "$cmdline" || wrapper_result="$?"
fi
. $cleanup
[ $wrapper_result -eq 0 ] || [ "$debug" != "yes" ] || {
	echo ""
	echo "[wrapper.sh] note: The real command line, after the pkgsrc wrapper, was:"
	echo "$cmdline"
} 1>&2
exit ${wrapper_result}
