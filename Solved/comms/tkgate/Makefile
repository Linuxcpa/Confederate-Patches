# Makefile generated by imake - do not edit!

# ----------------------------------------------------------------------
# Makefile generated from "Imake.tmpl" and <Imakefile>
# $Xorg: Imake.tmpl,v 1.4 2000/08/17 19:41:46 cpqbld Exp $
# $XdotOrg: xc/config/cf/Imake.tmpl,v 1.9 2005/01/24 06:37:31 daniels Exp $
#
#
#
#
# $XFree86: xc/config/cf/Imake.tmpl,v 3.155 2003/12/24 18:58:41 dickey Exp $
# ----------------------------------------------------------------------

all::
.SUFFIXES: .i

# $XdotOrg: xc/config/cf/Imake.cf,v 1.7 2005/03/02 11:20:29 gisburn Exp $
# $Xorg: Imake.cf,v 1.4 2000/08/17 19:41:45 cpqbld Exp $

# $XFree86: xc/config/cf/Imake.cf,v 3.88 2003/12/16 21:30:21 herrb Exp $

# WARNING:  Imake.cf not configured; guessing at definitions!!!
# This might mean that BOOTSTRAPCFLAGS was not set when building imake.
# -----------------------------------------------------------------------
# site-specific configuration parameters that need to come before
# the platform-specific parameters - edit site.def to change
# site:  $TOG: site.sample /main/r64_final/1 1998/02/05 16:28:49 kaleb $

# site:  $XFree86: xc/config/cf/site.def,v 3.24 2000/06/25 20:17:29 dawes Exp $

# ----------------------------------------------------------------------
# platform-specific configuration parameters - edit generic.cf to change
# platform:  $Xorg: generic.cf,v 1.3 2000/08/17 19:41:47 cpqbld Exp $
# operating system:  Unknown Operating System
# ----------------------------------------------------------------------
# site-specific configuration parameters that go after
# the platform-specific parameters - edit site.def to change
# site:  $TOG: site.sample /main/r64_final/1 1998/02/05 16:28:49 kaleb $

# site:  $XFree86: xc/config/cf/site.def,v 3.24 2000/06/25 20:17:29 dawes Exp $

# ---------------------------------------------------------------------
# Imake rules for building libraries, programs, scripts, and data files
# rules:  $Xorg: Imake.rules,v 1.3 2000/08/17 19:41:46 cpqbld Exp $
# rules:  $XdotOrg: xc/config/cf/Imake.rules,v 1.8 2005/02/01 22:27:00 ajax Exp $
#
#
#
#
# rules:  $XFree86: xc/config/cf/Imake.rules,v 3.128 2003/11/15 03:25:17 dawes Exp $

X_BYTE_ORDER = ByteOrder

GLIDE2INCDIR =
GLIDE3INCDIR =
GLIDE3LIBNAME =
TKLIBNAME =
TKLIBDIR =
TCLLIBNAME =
TCLIBDIR =

          PATHSEP = /
            SHELL = /bin/sh
              TOP = .
      CURRENT_DIR = .
            IMAKE = imake
           DEPEND = makedepend
        MKDIRHIER = mkdirhier
          REVPATH = revpath
    EXPORTLISTGEN =
             RMAN = RmanCmd
     RMANBASENAME = rman
      RMANOPTIONS = RmanOptions
        CONFIGSRC = $(TOP)/config
         IMAKESRC = $(CONFIGSRC)/imake
        DEPENDSRC = $(CONFIGSRC)/makedepend
          INCROOT = /boot/home/pkg/include
        USRLIBDIR = /boot/home/pkg/lib
           VARDIR = /var
        VARLIBDIR = $(VARDIR)/lib
  SYSTEMUSRLIBDIR = /usr/lib
  SYSTEMUSRINCDIR = /usr/include
         SHLIBDIR = /boot/home/pkg/lib
       LINTLIBDIR = $(USRLIBDIR)/lint
          MANPATH = /boot/home/pkg/man
    MANSOURCEPATH = $(MANPATH)/man
           MANDIR = $(MANSOURCEPATH)$(MANSUFFIX)
        LIBMANDIR = $(MANSOURCEPATH)$(LIBMANSUFFIX)
       FILEMANDIR = $(MANSOURCEPATH)$(FILEMANSUFFIX)
       MISCMANDIR = $(MANSOURCEPATH)$(MISCMANSUFFIX)
     DRIVERMANDIR = $(MANSOURCEPATH)$(DRIVERMANSUFFIX)
     LOGDIRECTORY = $(VARDIR)/log
               AR = ar clq
# Nice try but useless: make will inherit BOOTSTRAPCFLAGS
# from  top Makefile
  BOOTSTRAPCFLAGS =
               CC = gcc -fpcc-struct-return
               AS = as
         COMPRESS = compress
          GZIPCMD = gzip
              CPP = /lib/cpp $(STD_CPP_DEFINES)
           RAWCPP = /lib/cpp -undef $(STD_CPP_OPTIONS)
    PREPROCESSCMD = gcc -fpcc-struct-return -E $(STD_CPP_DEFINES)
          INSTALL = install
     INSTALLFLAGS = -c
               LD = ld
              LEX = lex
               M4 = m4
          M4FLAGS =
           LEXLIB = -ll
             YACC = yacc
           CCYACC = yacc
             LINT = lint
      LINTLIBFLAG = -C
         LINTOPTS = -axz
               LN = ln -s
             MAKE = /boot/home/pkg/bin/bmake
               MV = mv -f
               CP = cp
           RANLIB = ranlib
  RANLIBINSTFLAGS =
               RM = rm -f
             PERL = perl
         PERLOPTS =
     PERLENVSETUP = env LC_ALL=C
        MANSUFFIX = 1
     LIBMANSUFFIX = 3
    FILEMANSUFFIX = 5
    MISCMANSUFFIX = 7
  DRIVERMANSUFFIX = 4
   ADMINMANSUFFIX = 8
     MANSRCSUFFIX = man
     MANNEWSUFFIX = _man
          MANDEFS = -D__apploaddir__=$(XAPPLOADDIR) -D__appmansuffix__=$(MANSUFFIX) -D__filemansuffix__=$(FILEMANSUFFIX) -D__libmansuffix__=$(LIBMANSUFFIX) -D__miscmansuffix__=$(MISCMANSUFFIX) -D__drivermansuffix__=$(DRIVERMANSUFFIX) -D__adminmansuffix__=$(ADMINMANSUFFIX) -D__projectroot__=$(PROJECTROOT) -D__xconfigfile__=$(XCONFIGFILE) -D__xconfigdir__=$(XCONFIGDIR) -D__xlogfile__=$(XLOGFILE) -D__xservername__=$(XSERVERNAME) $(XORGMANDEFS) $(VENDORMANDEFS)
   COMPRESSMANCMD = gzip -n
            TROFF = troff -Tps
            NROFF = nroff
         MSMACROS = -ms
        MANMACROS = -man
              TBL = tbl
              EQN = eqn
             NEQN = neqn
              COL = col
         COLFLAGS = -b
            MODCC = gcc -fpcc-struct-return
           MODCPP = /lib/cpp
        MODCFLAGS = $(CFLAGS)
            MODAS = as
       MODASFLAGS =
            MODLD = ld
       MODLDFLAGS =
MODLDCOMBINEFLAGS = -X -r
            MODAR = ar clq
        MODRANLIB = ranlib
     STD_INCLUDES =
  STD_CPP_OPTIONS =
  STD_CPP_DEFINES =    $(PROJECT_DEFINES)
      STD_DEFINES =  $(PROJECT_DEFINES)
 EXTRA_LOAD_FLAGS =
  EXTRA_LDOPTIONS =
  EXTRA_LIBRARIES =
             TAGS = ctags
   PARALLELMFLAGS =

    PROTO_DEFINES =
     INSTPGMFLAGS =
     INSTBINFLAGS = -m 0755
     INSTUIDFLAGS = -m 4711
     INSTLIBFLAGS = -m 0644
     INSTINCFLAGS = -m 0444
     INSTMANFLAGS = -m 0444
     INSTDATFLAGS = -m 0444
    INSTKMEMFLAGS = -m 4711
      PROJECTROOT = /boot/home/pkg
      CDEBUGFLAGS = -O
        CCOPTIONS =

      ALLINCLUDES = $(INCLUDES) $(EXTRA_INCLUDES) $(TOP_INCLUDES) $(INSTALLED_INCLUDES) $(STD_INCLUDES)
       ALLDEFINES = $(ALLINCLUDES) $(STD_DEFINES) $(PROTO_DEFINES) $(THREADS_DEFINES) $(MODULE_DEFINES) $(DEFINES) $(EXTRA_DEFINES)
           CFLAGS = $(CDEBUGFLAGS) $(CCOPTIONS) $(THREADS_CFLAGS) $(MODULE_CFLAGS) $(ALLDEFINES)
        LINTFLAGS = $(LINTOPTS) -DLINT $(ALLDEFINES) $(DEPEND_DEFINES)
         LDPRELIB = -L$(USRLIBDIR) $(INSTALLED_LIBS)
        LDPOSTLIB =
        LDOPTIONS = $(CDEBUGFLAGS) $(CCOPTIONS)  $(EXTRA_LDOPTIONS) $(THREADS_LDFLAGS) $(LOCAL_LDFLAGS) $(LDPRELIBS)
     CXXLDOPTIONS = $(CXXDEBUGFLAGS) $(CXXOPTIONS) $(EXTRA_LDOPTIONS) $(THREADS_CXXLDFLAGS) $(LOCAL_LDFLAGS) $(LDPRELIBS)
           LDLIBS = $(LDPOSTLIBS) $(THREADS_LIBS) $(SYS_LIBRARIES) $(EXTRA_LIBRARIES)
           CCLINK = $(CC)
          CXXLINK = $(CXX)
     LDSTRIPFLAGS = -x
   LDCOMBINEFLAGS = -X -r
      DEPENDFLAGS =
   DEPEND_DEFINES = -DUSE_MAKEDEPEND
# Not sure this belongs here
         TKLIBDIR =
         TKINCDIR =
        TKLIBNAME =
        TKLIBRARY = -L$(TKLIBDIR) -l$(TKLIBNAME)
        TCLLIBDIR =
        TCLINCDIR =
       TCLLIBNAME =
       TCLLIBRARY = -L$(TCLLIBDIR) -l$(TCLLIBNAME)
        MACROFILE = generic.cf
           RM_CMD = $(RM)
    IMAKE_DEFINES =
   IMAKE_WARNINGS =
         IRULESRC = $(CONFIGDIR)
        IMAKE_CMD = $(IMAKE) -DUseInstalled -I$(IRULESRC) $(IMAKE_DEFINES) 		    $(IMAKE_WARNINGS)

     ICONFIGFILES = $(IRULESRC)/Imake.tmpl $(IRULESRC)/X11.tmpl 			$(IRULESRC)/site.def $(IRULESRC)/$(MACROFILE) 			 $(IRULESRC)/xorgsite.def $(IRULESRC)/host.def $(EXTRA_ICONFIGFILES)
# $Xorg: X11.rules,v 1.4 2000/08/17 19:41:46 cpqbld Exp $
# $XFree86: xc/config/cf/X11.rules,v 1.6 2001/01/17 16:22:31 dawes Exp $

# ----------------------------------------------------------------------
# X Window System Build Parameters and Rules
# $XdotOrg: xc/config/cf/X11.tmpl,v 1.52 2005/09/22 23:54:18 alanc Exp $
# $Xorg: X11.tmpl,v 1.6 2000/08/17 19:41:46 cpqbld Exp $
#
#
#
#
# $XFree86: xc/config/cf/X11.tmpl,v 1.248 2004/02/16 04:07:37 dawes Exp $

XORGRELSTRING = XorgManVersionString
  XORGMANNAME = X Version 11

STICKY_DEFINES = -DHAS_STICKY_DIR_BIT
FCHOWN_DEFINES = -DHAS_FCHOWN

# -----------------------------------------------------------------------
# X Window System make variables; these need to be coordinated with rules

             XTOP = $(TOP)
           BINDIR = /boot/home/pkg/bin
     BUILDINCROOT = $(TOP)/exports
      BUILDINCDIR = $(BUILDINCROOT)/include
      BUILDINCTOP = ../..
      BUILDLIBDIR = $(TOP)/exports/lib
      BUILDLIBTOP = ../..
      BUILDBINDIR = $(TOP)/exports/bin
      BUILDBINTOP = ../..
   BUILDMODULEDIR = $(BUILDLIBDIR)/modules
     BUILDI18NDIR = $(BUILDLIBDIR)/locale
   BUILDMODULETOP = $(BUILDLIBTOP)/..
    XBUILDINCROOT = $(XTOP)/exports
     XBUILDINCDIR = $(XBUILDINCROOT)/include/X11
     XBUILDINCTOP = ../../..
     XBUILDBINDIR = $(XBUILDINCROOT)/bin
           INCDIR = $(INCROOT)
           ADMDIR = /usr/adm
           LIBDIR = /boot/home/pkg/lib/X11
         SHAREDIR = /boot/home/pkg/share/X11
       LIBEXECDIR = /boot/home/pkg/libexec
        MODULEDIR = $(USRLIBDIR)/modules
   TOP_X_INCLUDES =
          XBINDIR = $(PROJECTROOT)/bin
       INSTSRCDIR = /boot/home/pkg/src
        ETCX11DIR = /etc/X11
          CONFDIR = $(VARDIR)
           DOCDIR = $(LIBDIR)/doc
       DOCHTMLDIR = $(DOCDIR)/html
         DOCPSDIR = $(DOCDIR)/PostScript
        DOCPDFDIR = $(DOCDIR)/PDF
          FONTDIR = ${datarootdir}/fonts/X11
      FONTROOTDIR = ${datarootdir}/fonts/X11
     ENCODINGSDIR = ${FONTROOTDIR}/encodings
         XINITDIR = $(LIBDIR)/xinit
           XDMDIR = $(LIBDIR)/xdm
        XDMVARDIR = $(VARLIBDIR)/xdm
           TWMDIR = $(LIBDIR)/twm
           XSMDIR = $(LIBDIR)/xsm
           NLSDIR = $(LIBDIR)/nls
       XLOCALEDIR = $(LIBDIR)/locale
      LBXPROXYDIR = $(LIBDIR)/lbxproxy
  PROXYMANAGERDIR = $(LIBDIR)/proxymngr
        XPRINTDIR = $(LIBDIR)/xserver
      XAPPLOADDIR = $(LIBDIR)/app-defaults
       FONTCFLAGS = -t
     INSTAPPFLAGS = $(INSTDATFLAGS)
              RGB = $(XBINDIR)/rgb
            FONTC = $(XBINDIR)/bdftopcf
      MKFONTSCALE = $(XBINDIR)/mkfontscale
        MKFONTDIR = $(XBINDIR)/mkfontdir
      MKHTMLINDEX = $(XBINDIR)/mkhtmlindex
          UCS2ANY = $(XBINDIR)/ucs2any
      BDFTRUNCATE = $(XBINDIR)/bdftruncate
     UCSMAPPREFIX = $(FONTDIR)/util/map-
       XCURSORGEN = $(XBINDIR)/xcursorgen
     HTMLINDEXCMD = HtmlIndexCmd
       DOCUTILSRC = $(XTOP)/doc/util
        CLIENTSRC = $(TOP)/clients
          DEMOSRC = $(TOP)/demos
       XDOCMACROS = $(DOCUTILSRC)/macros.t
       XIDXMACROS = $(DOCUTILSRC)/indexmacros.t
       PROGRAMSRC = $(TOP)/programs
           LIBSRC = $(XTOP)/lib
          FONTSRC = $(XTOP)/fonts
     ENCODINGSSRC = $(FONTSRC)/encodings
       INCLUDESRC = $(BUILDINCROOT)/include
      XINCLUDESRC = $(INCLUDESRC)/X11
        SERVERSRC = $(XTOP)/programs/Xserver
       CONTRIBSRC = $(XTOP)/../contrib
   UNSUPPORTEDSRC = $(XTOP)/unsupported
           DOCSRC = $(XTOP)/doc
           RGBSRC = $(XTOP)/programs/rgb
      BDFTOPCFSRC = $(PROGRAMSRC)/bdftopcf
     MKFONTDIRSRC = $(PROGRAMSRC)/mkfontdir
    FONTSERVERSRC = $(PROGRAMSRC)/xfs
       FONTINCSRC = $(XTOP)/include/fonts
        EXTINCSRC = $(XTOP)/include/extensions
      FTSOURCEDIR = FreeTypeSrcDir
        DRMSRCDIR = $(TOP)/extras/drm
       MESASRCDIR = $(TOP)/extras/Mesa
  OGLSAMPLESRCDIR = $(TOP)/extras/ogl-sample
        PSWRAPSRC = $(XTOP)/config/pswrap
     TRANSCOMMSRC = $(LIBSRC)/xtrans
   TRANS_INCLUDES = -I$(TRANSCOMMSRC)
 CONNECTION_FLAGS = -DTCPCONN -DUNIXCONN  $(STICKY_DEFINES) $(FCHOWN_DEFINES) -DIPv6
XTRANS_FAILDEFINES = -DFAIL_HARD
    VENDORMANNAME = X Version 11
 VENDORMANVERSION = Release 7
      XORGMANDEFS = -D__xorgversion__="\"$(XORGRELSTRING)\" \"$(XORGMANNAME)\""
    VENDORMANDEFS = -D__vendorversion__="$(VENDORMANVERSION) $(VENDORMANNAME)"
       VENDORNAME = The X.Org Foundation
  VENDORNAMESHORT = X.Org
 VENDORWEBSUPPORT = http://wiki.X.Org
VENDORSUPPORTDEFS = -D__VENDORDWEBSUPPORT__='"$(VENDORWEBSUPPORT)"'
      XKBDEFRULES = xorg
  XKBDEFRULESDEFS = -D__XKBDEFRULES__='"$(XKBDEFRULES)"'
     XCONFIGFILE = XConfigFile
      XCONFIGDIR = XConfigDir
        XLOGFILE = XLogFile
     XSERVERNAME = XServerName
   CLIENTENVSETUP =

          XLIBSRC = $(LIBSRC)/X11

DEPXONLYLIB = $(USRLIBDIR)/libX11.a
XONLYLIB =  -lX11

LINTXONLY = $(LINTLIBDIR)/llib-lX11.ln

      DEPXLIBONLY = $(DEPXONLYLIB)
         XLIBONLY = $(XONLYLIB)
     LINTXONLYLIB = $(LINTXONLY)

      XEXTLIBSRC = $(LIBSRC)/Xext

DEPEXTENSIONLIB = $(USRLIBDIR)/libXext.a
EXTENSIONLIB =  -lXext

LINTEXTENSION = $(LINTLIBDIR)/llib-lXext.ln
LINTEXTENSIONLIB = $(LINTEXTENSION)
          DEPXLIB = $(DEPEXTENSIONLIB) $(DEPXONLYLIB)
             XLIB = $(EXTENSIONLIB) $(XONLYLIB)
         LINTXLIB = $(LINTXONLYLIB)
    XSSLIBSRC = $(LIBSRC)/Xss

DEPXSSLIB = $(USRLIBDIR)/libXss.a
XSSLIB =  -lXss

LINTXSS = $(LINTLIBDIR)/llib-lXss.ln
    XXF86MISCLIBSRC = $(LIBSRC)/Xxf86misc

DEPXXF86MISCLIB = $(USRLIBDIR)/libXxf86misc.a
XXF86MISCLIB =  -lXxf86misc

LINTXXF86MISC = $(LINTLIBDIR)/llib-lXxf86misc.ln
    XXF86VMLIBSRC = $(LIBSRC)/Xxf86vm

DEPXXF86VMLIB = $(USRLIBDIR)/libXxf86vm.a
XXF86VMLIB =  -lXxf86vm

LINTXXF86VM = $(LINTLIBDIR)/llib-lXxf86vm.ln
    XXF86DGALIBSRC = $(LIBSRC)/Xxf86dga

DEPXXF86DGALIB = $(USRLIBDIR)/libXxf86dga.a
XXF86DGALIB =  -lXxf86dga

LINTXXF86DGA = $(LINTLIBDIR)/llib-lXxf86dga.ln
    XXF86RUSHLIBSRC = $(LIBSRC)/Xxf86rush

DEPXXF86RUSHLIB = $(USRLIBDIR)/libXxf86rush.a
XXF86RUSHLIB =  -lXxf86rush

LINTXXF86RUSH = $(LINTLIBDIR)/llib-lXxf86rush.ln
    XVLIBSRC = $(LIBSRC)/Xv

DEPXVLIB = $(USRLIBDIR)/libXv.a
XVLIB =  -lXv

LINTXV = $(LINTLIBDIR)/llib-lXv.ln
    XVMCLIBSRC = $(LIBSRC)/XvMC

DEPXVMCLIB = $(USRLIBDIR)/libXvMC.a
XVMCLIB =  -lXvMC

LINTXVMC = $(LINTLIBDIR)/llib-lXvMC.ln
    XINERAMALIBSRC = $(LIBSRC)/Xinerama

DEPXINERAMALIB = $(USRLIBDIR)/libXinerama.a
XINERAMALIB =  -lXinerama

LINTXINERAMA = $(LINTLIBDIR)/llib-lXinerama.ln
    XRESLIBSRC = $(LIBSRC)/XRes

DEPXRESLIB = $(USRLIBDIR)/libXRes.a
XRESLIB =  -lXRes

LINTXRES = $(LINTLIBDIR)/llib-lXRes.ln
    DMXLIBSRC = $(LIBSRC)/dmx

DEPDMXLIB = $(USRLIBDIR)/libdmx.a
DMXLIB =  -ldmx

LINTDMX = $(LINTLIBDIR)/llib-ldmx.ln
    DPSLIBSRC = $(LIBSRC)/dps

DEPDPSLIB = $(USRLIBDIR)/libdps.a
DPSLIB =  -ldps

LINTDPS = $(LINTLIBDIR)/llib-ldps.ln
    DPSTKLIBSRC = $(LIBSRC)/dpstk

DEPDPSTKLIB = $(USRLIBDIR)/libdpstk.a
DPSTKLIB =  -ldpstk

LINTDPSTK = $(LINTLIBDIR)/llib-ldpstk.ln
    PSRESLIBSRC = $(LIBSRC)/psres

DEPPSRESLIB = $(USRLIBDIR)/libpsres.a
PSRESLIB =  -lpsres

LINTPSRES = $(LINTLIBDIR)/llib-lpsres.ln
    GLULIBSRC = $(LIBSRC)/GLU

DEPGLULIB = $(USRLIBDIR)/libGLU.a
GLULIB =  -lGLU

LINTGLU = $(LINTLIBDIR)/llib-lGLU.ln
    GLXLIBSRC = $(LIBSRC)/GL

DEPGLXLIB = $(USRLIBDIR)/libGL.a
GLXLIB =  -lGL

LINTGLX = $(LINTLIBDIR)/llib-lGL.ln
    GLWIDGETSRC = $(LIBSRC)/GLw

DEPGLWLIB = $(USRLIBDIR)/libGLw.a
GLWLIB =  -lGLw

LINTGLW = $(LINTLIBDIR)/llib-lGLw.ln
    XRENDERLIBSRC = $(LIBSRC)/Xrender

DEPXRENDERLIB = $(USRLIBDIR)/libXrender.a
XRENDERLIB =  -lXrender

LINTXRENDER = $(LINTLIBDIR)/llib-lXrender.ln
    XRANDRLIBSRC = $(LIBSRC)/Xrandr

DEPXRANDRLIB = $(USRLIBDIR)/libXrandr.a
XRANDRLIB =  -lXrandr

LINTXRANDR = $(LINTLIBDIR)/llib-lXrandr.ln
    XFIXESLIBSRC = $(LIBSRC)/Xfixes

DEPXFIXESLIB = $(USRLIBDIR)/libXfixes.a
XFIXESLIB =  -lXfixes

LINTXFIXES = $(LINTLIBDIR)/llib-lXfixes.ln
   XDAMAGELIBSRC = $(LIBSRC)/Xdamage

DEPXDAMAGELIB = $(USRLIBDIR)/libXdamage.a
XDAMAGELIB =  -lXdamage

LINTXDAMAGE = $(LINTLIBDIR)/llib-lXdamage.ln
XCOMPOSITELIBSRC = $(LIBSRC)/Xcomposite

DEPXCOMPOSITELIB = $(USRLIBDIR)/libXcomposite.a
XCOMPOSITELIB =  -lXcomposite

LINTXCOMPOSITE = $(LINTLIBDIR)/llib-lXcomposite.ln
XEVIELIBSRC = $(LIBSRC)/Xevie

DEPXEVIELIB = $(USRLIBDIR)/libXevie.a
XEVIELIB =  -lXevie

LINTXEVIE = $(LINTLIBDIR)/llib-lXevie.ln
   XCURSORLIBSRC = $(LIBSRC)/Xcursor

DEPXCURSORLIB = $(USRLIBDIR)/libXcursor.a
XCURSORLIB =  -lXcursor

LINTXCURSOR = $(LINTLIBDIR)/llib-lXcursor.ln
   APPLEWMLIBSRC = $(LIBSRC)/apple

DEPAPPLEWMLIB = $(USRLIBDIR)/libAppleWM.a
APPLEWMLIB =  -lAppleWM

LINTAPPLEWM = $(LINTLIBDIR)/llib-lAppleWM.ln
   WINDOWSWMLIBSRC = $(LIBSRC)/windows

DEPWINDOWSWMLIB = $(USRLIBDIR)/libWindowsWM.a
WINDOWSWMLIB =  -lWindowsWM

LINTWINDOWSWM = $(LINTLIBDIR)/llib-lWindowsWM.ln
    XFONTCACHELIBSRC = $(LIBSRC)/Xfontcache

DEPXFONTCACHELIB = $(USRLIBDIR)/libXfontcache.a
XFONTCACHELIB =  -lXfontcache

LINTXFONTCACHE = $(LINTLIBDIR)/llib-lXfontcache.ln
         XAUTHSRC = $(LIBSRC)/Xau

SOXAUTHREV = 6.0
DEPXAUTHLIB =
XAUTHLIB =  -lXau

LINTXAUTH = $(LINTLIBDIR)/llib-lXau.ln
      XDMCPLIBSRC = $(LIBSRC)/Xdmcp

SOXDMCPREV = 6.0
DEPXDMCPLIB =
XDMCPLIB =  -lXdmcp

LINTXDMCP = $(LINTLIBDIR)/llib-lXdmcp.ln
           XMUSRC = $(LIBSRC)/Xmu

DEPXMULIB = $(USRLIBDIR)/libXmu.a
XMULIB =  -lXmu

LINTXMU = $(LINTLIBDIR)/llib-lXmu.ln
           XMUUSRC = $(LIBSRC)/Xmuu

DEPXMUULIB = $(USRLIBDIR)/libXmuu.a
XMUULIB =  -lXmuu

LINTXMUU = $(LINTLIBDIR)/llib-lXmuu.ln
       OLDXLIBSRC = $(LIBSRC)/oldX

DEPOLDXLIB = $(USRLIBDIR)/liboldX.a
OLDXLIB =  -loldX

LINTOLDX = $(LINTLIBDIR)/llib-loldX.ln
         XPLIBSRC = $(LIBSRC)/Xp

DEPXPLIB = $(USRLIBDIR)/libXp.a
XPLIB =  -lXp

LINTXP = $(LINTLIBDIR)/llib-lXp.ln
       TOOLKITSRC = $(LIBSRC)/Xt

DEPXTOOLONLYLIB = $(USRLIBDIR)/libXt.a
XTOOLONLYLIB =  -lXt

LINTXTOOLONLY = $(LINTLIBDIR)/llib-lXt.ln
      DEPXTOOLLIB = $(DEPXTOOLONLYLIB) $(DEPSMLIB) $(DEPICELIB)
         XTOOLLIB = $(XTOOLONLYLIB) $(SMLIB) $(ICELIB)
     LINTXTOOLLIB = $(LINTXTOOLONLYLIB)

       XALIBSRC = $(LIBSRC)/Xa

DEPXALIB = $(USRLIBDIR)/libXa.a
XALIB =  -lXa

LINTXA = $(LINTLIBDIR)/llib-lXa.ln

       AWIDGETSRC = $(LIBSRC)/Xaw

DEPXAWLIB = $(USRLIBDIR)/libXaw6.a
XAWLIB =  -lXaw

LINTXAW = $(LINTLIBDIR)/llib-lXaw.ln
         XILIBSRC = $(LIBSRC)/Xi

DEPXILIB = $(USRLIBDIR)/libXi.a
XILIB =  -lXi

LINTXI = $(LINTLIBDIR)/llib-lXi.ln
      XTESTLIBSRC = $(LIBSRC)/Xtst

DEPXTESTLIB = $(USRLIBDIR)/libXtst.a
XTESTLIB =  -lXtst

LINTXTEST = $(LINTLIBDIR)/llib-lXtst.ln

DEPXBSDLIB = $(USRLIBDIR)/libXbsd.a
XBSDLIB =  -lXbsd

LINTXBSD = $(LINTLIBDIR)/llib-lXbsd.ln
           ICESRC = $(LIBSRC)/ICE

DEPICELIB = $(USRLIBDIR)/libICE.a
ICELIB =  -lICE

LINTICE = $(LINTLIBDIR)/llib-lICE.ln
            SMSRC = $(LIBSRC)/SM

DEPSMLIB = $(USRLIBDIR)/libSM.a
SMLIB =  -lSM

LINTSM = $(LINTLIBDIR)/llib-lSM.ln
           XKEYSRC = $(LIBSRC)/Xkey

DEPXKEYLIB = $(USRLIBDIR)/libXkey.a
XKEYLIB =  -lXkey

LINTXKEY = $(LINTLIBDIR)/llib-lXkey.ln
         FSLIBSRC = $(LIBSRC)/FS

DEPFSLIB = $(USRLIBDIR)/libFS.a
FSLIB =  -lFS

LINTFS = $(LINTLIBDIR)/llib-lFS.ln
         FONTLIBSRC = $(LIBSRC)/font

DEPFONTLIB = $(USRLIBDIR)/libXfont.a
FONTLIB = -L$(FREETYPELIBDIR) -L$(FONTLIBSRC)  -lXfont

LINTXFONT = $(LINTLIBDIR)/llib-lXfont.ln
#
DEPXFONTLIB = $(USRLIBDIR)/libXfont.a
XFONTLIB =  -lXfont

LINTXFONT = $(LINTLIBDIR)/llib-lXfont.ln
     FONTSTUBLIBSRC = $(FONTLIBSRC)/stubs

DEPFONTSTUBLIB = $(USRLIBDIR)/libfntstubs.a
FONTSTUBLIB =  -lfntstubs

LINTFONTSTUB = $(LINTLIBDIR)/llib-lfntstubs.ln
         DEPFONTLIB = $(DEPXFONTLIB) $(DEPFONTSTUBLIB)
            FONTLIB = $(XFONTLIB) $(FONTSTUBLIB) $(FREETYPE2LIB)
         FONTENCLIBSRC = $(LIBSRC)/fontenc

DEPXFONTENCLIB = $(USRLIBDIR)/libfontenc.a
XFONTENCLIB =  -lfontenc

LINTXFONTENC = $(LINTLIBDIR)/llib-lfontenc.ln
          XPMLIBSRC = $(LIBSRC)/Xpm

DEPXPMLIB = $(USRLIBDIR)/libXpm.a
XPMLIB =  -lXpm

LINTXPM = $(LINTLIBDIR)/llib-lXpm.ln
FREETYPE2DIR = /usr
FREETYPE2LIBDIR = /usr/lib
FREETYPE2INCDIR = /usr/include
FREETYPE2LIB = -lfreetype
FREETYPE2INCLUDES = -I$(FREETYPE2INCDIR)/freetype2 -I$(FREETYPE2INCDIR)/freetype2/config
FREETYPE2DEFINES = -DFREETYPE2
          EXPATLIBSRC = $(LIBSRC)/expat

DEPEXPATLIB = $(USRLIBDIR)/libexpat.a
EXPATLIB =  -lexpat

LINTEXPAT = $(LINTLIBDIR)/llib-lexpat.ln
EXPATDIR = /usr
EXPATLIBDIR = /usr/lib
EXPATINCDIR = /usr/include
EXPATINCLUDES =
EXPATLIB = -lexpat
EXPATDEFINES = -DEXPAT
          XFT1LIBSRC = $(LIBSRC)/Xft1

DEPXFT1LIB = $(USRLIBDIR)/libXft.a
XFT1LIB =  -lXft

LINTXFT1 = $(LINTLIBDIR)/llib-lXft.ln
          XFTLIBSRC = $(LIBSRC)/Xft

DEPXFTLIB = $(USRLIBDIR)/libXft.a
XFTLIB =  -lXft

LINTXFT = $(LINTLIBDIR)/llib-lXft.ln
          FONTCONFIGLIBSRC = $(LIBSRC)/fontconfig

DEPFONTCONFIGLIB = $(USRLIBDIR)/libfontconfig.a
FONTCONFIGLIB =  -lfontconfig

LINTFONTCONFIG = $(LINTLIBDIR)/llib-lfontconfig.ln
FONTCONFIGINCDIR=$(INCDIR)
FONTCONFIGINCLUDES = -I$(FONTCONFIGINCDIR)
FCCACHE = $(BINDIR)/fc-cache
FONTCONFIGDEFINES = -DFONTCONFIG
XFTINCLUDES=$(FONTCONFIGINCLUDES) $(FREETYPE2INCLUDES)

LIBPNGINCDIR = /usr/include
LIBPNGINC=
LIBPNGDIR = /usr
LIBPNGLIBDIR = /usr/lib
LIBPNGINCDIR = /usr/include
LIBPNGLIB = -lpng
    XKBFILELIBSRC = $(LIBSRC)/xkbfile

DEPXKBFILELIB = $(USRLIBDIR)/libxkbfile.a
XKBFILELIB =  -lxkbfile

LINTXKBFILE = $(LINTLIBDIR)/llib-lxkbfile.ln
     XKBCOMPCMD = $(XBINDIR)/xkbcomp
    XKBUILIBSRC = $(LIBSRC)/xkbui

DEPXKBUILIB = $(USRLIBDIR)/libxkbui.a
XKBUILIB =  -lxkbui

LINTXKBUI = $(LINTLIBDIR)/llib-lxkbui.ln
EXTRAXAWREQS =
EXTRAXAWCLIENTDEPLIBS =
EXTRAXAWCLIENTLIBS =
        XTRAPLIBSRC = $(LIBSRC)/XTrap

DEPXTRAPLIB = $(USRLIBDIR)/libXTrap.a
XTRAPLIB =  -lXTrap

LINTXTRAP = $(LINTLIBDIR)/llib-lXTrap.ln

          DEPLIBS = $(DEPXAWLIB) $(DEPXMULIB) $(DEPXTOOLLIB) $(DEPXLIB)
         DEPLIBS1 = $(DEPLIBS)
         DEPLIBS2 = $(DEPLIBS)
         DEPLIBS3 = $(DEPLIBS)
         DEPLIBS4 = $(DEPLIBS)
         DEPLIBS5 = $(DEPLIBS)
         DEPLIBS6 = $(DEPLIBS)
         DEPLIBS7 = $(DEPLIBS)
         DEPLIBS8 = $(DEPLIBS)
         DEPLIBS9 = $(DEPLIBS)
         DEPLIBS10 = $(DEPLIBS)

       FCPRELOADPATTERN = libfontconfig.so.?
      XFTPRELOADPATTERN = libXft.so.?
  XRENDERPRELOADPATTERN = libXrender.so.?
    XFONTPRELOADPATTERN = libXfont*.so.?

        CONFIGDIR = $(LIBDIR)/config
    USRLIBDIRPATH = $(USRLIBDIR)
        LDPRELIBS = -L$(USRLIBDIR)  $(INSTALLED_LIBS)
       LDPOSTLIBS =
     TOP_INCLUDES = -I$(INCROOT) $(TOP_X_INCLUDES)
  PROJECT_DEFINES =
   VENDOR_DEFINES = -DXVENDORNAME='"$(VENDORNAME)"' -DXVENDORNAMESHORT='"$(VENDORNAMESHORT)"'
# ----------------------------------------------------------------------
# start of Imakefile
#    Copyright (C) 1987-2000 by Jeffery P. Hansen
#
#    This program is free software; you can redistribute it and/or modify
#    it under the terms of the GNU General Public License as published by
#    the Free Software Foundation; either version 2 of the License, or
#    (at your option) any later version.
#
#    This program is distributed in the hope that it will be useful,
#    but WITHOUT ANY WARRANTY; without even the implied warranty of
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#    GNU General Public License for more details.
#
#    You should have received a copy of the GNU General Public License
#    along with this program; if not, write to the Free Software
#    Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
#
#    Release checklist
#        Verify message definitions for Japanese
#        Update version number in TKGATE_VERSION and in documentation
#        Update change information in README, doc/www/index.html and doc/www/ja-index.html
#        Make sure version numbers in tutorials and examples are current (english and japanese)
#        Set TKGATE_LANG to "en"
#        Set TKGATE_GCCFLAGS to "-O2"
#        Run configure script
#        Do a "make cleanclean"
#        Tar up the distribution.
#

YACC=bison -y
LEX=flex -l
BINDIR=/boot/home/pkg/bin
MANDIR=/boot/home/pkg/man/man1
CC=gcc
CCOPTIONS=
CDEBUGFLAGS=			-O2
HOMEDIR=			"/boot/home/pkg/share/tkgate-1.6i"
SUBDIRS=src/common src/tkgate src/gsim src/gmac
BITMAPS=bitmaps/add.b bitmaps/anallogo.xbm bitmaps/analyze.b bitmaps/and.b bitmaps/arshift.b bitmaps/bat.b bitmaps/bigcurs.b bitmaps/biggatelogo.xbm bitmaps/blk_close.b bitmaps/blk_open.b bitmaps/buf.b bitmaps/bus.b bitmaps/clock.b bitmaps/concat.b bitmaps/cut_curs.b bitmaps/dash.b bitmaps/del_curs.b bitmaps/dip.b bitmaps/divide.b bitmaps/dot.b bitmaps/file_new.b bitmaps/file_open.b bitmaps/file_print.b bitmaps/file_save.b bitmaps/flipflop.b bitmaps/gatelogo.xbm bitmaps/ground.b bitmaps/inout.b bitmaps/inv_curs.b bitmaps/iodarrow.b bitmaps/joint.b bitmaps/lab_curs.b bitmaps/led.b bitmaps/led7seg.b bitmaps/ledinside.b bitmaps/ledseg1.b bitmaps/ledseg2.b bitmaps/ledseg3.b bitmaps/ledseg4.b bitmaps/ledseg5.b bitmaps/ledseg6.b bitmaps/ledseg7.b bitmaps/lprobe.b bitmaps/misc.b bitmaps/mov_curs.b bitmaps/mult.b bitmaps/mux.b bitmaps/nmos.b bitmaps/or.b bitmaps/plus.b bitmaps/pmos.b bitmaps/probe.b bitmaps/ram.b bitmaps/reg.b bitmaps/regLR.b bitmaps/regTB.b bitmaps/roll.b bitmaps/rom.b bitmaps/rungate1.xbm bitmaps/rungate10.xbm bitmaps/rungate11.xbm bitmaps/rungate12.xbm bitmaps/rungate13.xbm bitmaps/rungate14.xbm bitmaps/rungate2.xbm bitmaps/rungate3.xbm bitmaps/rungate4.xbm bitmaps/rungate5.xbm bitmaps/rungate6.xbm bitmaps/rungate7.xbm bitmaps/rungate8.xbm bitmaps/rungate9.xbm bitmaps/rungateA.xbm bitmaps/rungateB.xbm bitmaps/rungateC.xbm bitmaps/scroll.b bitmaps/seg7.b bitmaps/shift.b bitmaps/sim_break.b bitmaps/sim_break2.b bitmaps/sim_clock.b bitmaps/sim_dump.b bitmaps/sim_go.b bitmaps/sim_load.b bitmaps/sim_pause.b bitmaps/sim_script.b bitmaps/sim_step.b bitmaps/sim_stop.b bitmaps/size_curs.b bitmaps/smallcurs.b bitmaps/smalldot.b bitmaps/smalllogo.xbm bitmaps/strek.b bitmaps/switch.b bitmaps/tap.b bitmaps/trek.b bitmaps/tty.b bitmaps/txtcurs.b bitmaps/vdd.b bitmaps/xor.b bitmaps/zoom_in.b bitmaps/zoom_out.b
SCRIPTS=scripts/blocklist.tcl scripts/circuit.tcl scripts/commands.tcl scripts/cpath.tcl scripts/dip.tcl scripts/editgate.tcl scripts/editnets.tcl scripts/errbox.tcl scripts/frame.tcl scripts/gcanvas.tcl scripts/helpon.tcl scripts/license.tcl scripts/menu.tcl scripts/message.tcl scripts/misc.tcl scripts/obsolete.tcl scripts/options.tcl scripts/parms.tcl scripts/portlist.tcl scripts/print.tcl scripts/scope.tcl scripts/shortcuts.tcl scripts/simtty.tcl scripts/simulator.tcl scripts/status.tcl scripts/tkgate.tcl scripts/toolbar.tcl
MESSAGES=messages.en messages.es messages.fr messages.ja messages.ja.euc messages.ja.utf8
GDF=gdf/default.gdf
EXAMPLE1=examples/ex1/combinational.v
EXAMPLE2=examples/ex2/flipflop.v
EXAMPLE3=examples/ex3/counter.v
EXAMPLE4=examples/ex4/trff.v
EXAMPLE5=examples/ex5/menagerie.gm examples/ex5/menagerie.gss examples/ex5/menagerie.map examples/ex5/menagerie.mem examples/ex5/menagerie.v examples/ex5/x-menagerie.mem
TUTORIALS=examples/tutorials/create_tut.v examples/tutorials/create_tut.v.orig examples/tutorials/edit1_tut.v examples/tutorials/edit2_tut.v examples/tutorials/edwire_tut.v examples/tutorials/module_tut.v examples/tutorials/seqsim_tut.v examples/tutorials/sim_tut.v examples/tutorials/welcome_tut.v
JATUTORIALS=examples/ja-tutorials/create_tut.v examples/ja-tutorials/create_tut.v.orig examples/ja-tutorials/edit1_tut.v examples/ja-tutorials/edit1_tut.v.orig examples/ja-tutorials/edit2_tut.v examples/ja-tutorials/edit2_tut.v.orig examples/ja-tutorials/edwire_tut.v examples/ja-tutorials/module_tut.v examples/ja-tutorials/seqsim_tut.v examples/ja-tutorials/sim_tut.v examples/ja-tutorials/welcome_tut.v examples/ja-tutorials/welcome_tut.v.orig
DOCS=doc/gateEdit.html doc/gateGmac.html doc/gateIntro.html doc/gateSim.html doc/index.html doc/adding_gate_types.txt doc/license.txt doc/menagerie.gm
DOCFIGS=doc/fig/anallogo.xbm doc/fig/analopts.gif doc/fig/arrow.gif doc/fig/arrow4.gif doc/fig/balloon.gif doc/fig/bigcurs.b doc/fig/biggatelogo.xbm doc/fig/break.gif doc/fig/chdir.gif doc/fig/circprop.gif doc/fig/coloropts.gif doc/fig/connect1a.gif doc/fig/connect1b.gif doc/fig/connect1c.gif doc/fig/connect1d.gif doc/fig/connect2a.gif doc/fig/connect2a.xpm doc/fig/connect2b.gif doc/fig/connect2c.gif doc/fig/connect2d.gif doc/fig/cpathcirc.gif doc/fig/cpathdlg.gif doc/fig/cretgat1.gif doc/fig/cretgat2.gif doc/fig/cretgat3.gif doc/fig/cretgat4.gif doc/fig/cretin.gif doc/fig/cretinout.gif doc/fig/cretout.gif doc/fig/cutters.gif doc/fig/dipval.gif doc/fig/edbreak.gif doc/fig/edclock.gif doc/fig/edcomment.gif doc/fig/eddelay.gif doc/fig/edgat.gif doc/fig/ednet.gif doc/fig/edpnet.gif doc/fig/edport.gif doc/fig/filemenu.gif doc/fig/fileopen.gif doc/fig/g_add.gif doc/fig/g_and.gif doc/fig/g_arshift.gif doc/fig/g_block.gif doc/fig/g_buf.gif doc/fig/g_bufif.gif doc/fig/g_clock.gif doc/fig/g_comment.gif doc/fig/g_demux.gif doc/fig/g_dip.gif doc/fig/g_div.gif doc/fig/g_ff.gif doc/fig/g_frame.gif doc/fig/g_ground.gif doc/fig/g_led.gif doc/fig/g_lshift.gif doc/fig/g_merge.gif doc/fig/g_mul.gif doc/fig/g_mux.gif doc/fig/g_nmos.gif doc/fig/g_or.gif doc/fig/g_pmos.gif doc/fig/g_ram.gif doc/fig/g_red.gif doc/fig/g_reg.gif doc/fig/g_roll.gif doc/fig/g_rom.gif doc/fig/g_rshift.gif doc/fig/g_supply.gif doc/fig/g_switch.gif doc/fig/g_tap.gif doc/fig/g_tty.gif doc/fig/g_xor.gif doc/fig/gatelogo.xbm doc/fig/gateport.gif doc/fig/gatewin.gif doc/fig/gatewin_11.gif doc/fig/genopts.gif doc/fig/icextract.gif doc/fig/inout.gif doc/fig/invaddel.gif doc/fig/label.gif doc/fig/logic.gif doc/fig/logic0.gif doc/fig/logic1.gif doc/fig/logicH.gif doc/fig/logicL.gif doc/fig/logicx.gif doc/fig/logicz.gif doc/fig/makeand.gif doc/fig/manual.gif doc/fig/misc.b doc/fig/modcreate.gif doc/fig/movgat1.gif doc/fig/movgat2.gif doc/fig/movgrp1.gif doc/fig/movgrp2.gif doc/fig/movgrp3.gif doc/fig/movgrp4.gif doc/fig/nihongo.gif doc/fig/options.gif doc/fig/powerbsd.gif doc/fig/printdlg.gif doc/fig/printopts.gif doc/fig/ptr.gif doc/fig/rungate1.xbm doc/fig/rungate2.xbm doc/fig/scope.gif doc/fig/search.gif doc/fig/showval.gif doc/fig/sim_break.b doc/fig/sim_break2.b doc/fig/sim_clock.b doc/fig/sim_dump.b doc/fig/sim_go.b doc/fig/sim_load.b doc/fig/sim_pause.b doc/fig/sim_script.b doc/fig/sim_step.b doc/fig/sim_stop.b doc/fig/simerr.gif doc/fig/simopts.gif doc/fig/simprint.gif doc/fig/small_tkgate.gif doc/fig/smallcurs.b doc/fig/solder.gif doc/fig/text.gif doc/fig/tkgate.gif doc/fig/wsize.gif doc/fig/xmark.gif
VERSION="1.6i"

all::
	@for flag in ${MAKEFLAGS} ''; do \
	  case "$$flag" in *=*) ;; --*) ;; *[ik]*) set +e;; esac; done; \
	for i in $(SUBDIRS) ;\
	do \
		echo "making" all "in $(CURRENT_DIR)/$$i..."; \
		(cd $$i && $(MAKE) $(MFLAGS) $(PARALLELMFLAGS) \
			 all) || exit $$?; \
	done

depend::
	@for flag in ${MAKEFLAGS} ''; do \
	  case "$$flag" in *=*) ;; --*) ;; *[ik]*) set +e;; esac; done; \
	for i in $(SUBDIRS) ;\
	do \
		echo "depending" "in $(CURRENT_DIR)/$$i..."; \
		(cd $$i && $(MAKE) $(MFLAGS) $(PARALLELMFLAGS) \
			 depend) || exit $$?; \
	done

cleandir::
	@for flag in ${MAKEFLAGS} ''; do \
	  case "$$flag" in *=*) ;; --*) ;; *[ik]*) set +e;; esac; done; \
	for i in $(SUBDIRS) ;\
	do \
		echo "cleaning" "in $(CURRENT_DIR)/$$i..."; \
		(cd $$i && $(MAKE) $(MFLAGS) $(PARALLELMFLAGS) \
				 cleandir) || exit $$?; \
	done

lint::
	@for flag in ${MAKEFLAGS} ''; do \
	  case "$$flag" in *=*) ;; --*) ;; *[ik]*) set +e;; esac; done; \
	for i in $(SUBDIRS) ;\
	do \
		echo "linting" for lint and lint "in $(CURRENT_DIR)/$$i..."; \
		(cd $$i && $(MAKE) $(MFLAGS) $(PARALLELMFLAGS) \
			DESTDIR=$(DESTDIR) LINTOPTS='$(LINTOPTS)' lint) || exit $$?; \
	done

install::
	@for flag in ${MAKEFLAGS} ''; do \
	  case "$$flag" in *=*) ;; --*) ;; *[ik]*) set +e;; esac; done; \
	for i in $(SUBDIRS) ;\
	do \
		echo "installing" "in $(CURRENT_DIR)/$$i..."; \
		(cd $$i && $(MAKE) $(MFLAGS) $(PARALLELMFLAGS) \
			DESTDIR=$(DESTDIR) install) || exit $$?; \
	done

install:: README
	@if [ -d $(DESTDIR)$(HOMEDIR) ]; then \
		set +x; \
	else \
		if [ -h $(DESTDIR)$(HOMEDIR) ]; then \
			(set -x; rm -f $(DESTDIR)$(HOMEDIR)) || exit $$?; \
		fi; \
		(set -x; $(MKDIRHIER) $(DESTDIR)$(HOMEDIR)) || exit $$?; \
	fi
	$(INSTALL) $(INSTALLFLAGS) $(INSTDATFLAGS) README $(DESTDIR)$(HOMEDIR)/README

install:: COPYING
	@if [ -d $(DESTDIR)$(HOMEDIR) ]; then \
		set +x; \
	else \
		if [ -h $(DESTDIR)$(HOMEDIR) ]; then \
			(set -x; rm -f $(DESTDIR)$(HOMEDIR)) || exit $$?; \
		fi; \
		(set -x; $(MKDIRHIER) $(DESTDIR)$(HOMEDIR)) || exit $$?; \
	fi
	$(INSTALL) $(INSTALLFLAGS) $(INSTDATFLAGS) COPYING $(DESTDIR)$(HOMEDIR)/COPYING

install:: sitename.txt
	@if [ -d $(DESTDIR)$(HOMEDIR) ]; then \
		set +x; \
	else \
		if [ -h $(DESTDIR)$(HOMEDIR) ]; then \
			(set -x; rm -f $(DESTDIR)$(HOMEDIR)) || exit $$?; \
		fi; \
		(set -x; $(MKDIRHIER) $(DESTDIR)$(HOMEDIR)) || exit $$?; \
	fi
	$(INSTALL) $(INSTALLFLAGS) $(INSTDATFLAGS) sitename.txt $(DESTDIR)$(HOMEDIR)/sitename.txt

install:: $(GDF)
	@if [ -d $(DESTDIR)$(HOMEDIR)/gdf ]; then \
		set +x; \
	else \
		if [ -h $(DESTDIR)$(HOMEDIR)/gdf ]; then \
			(set -x; rm -f $(DESTDIR)$(HOMEDIR)/gdf) || exit $$?; \
		fi; \
		(set -x; $(MKDIRHIER) $(DESTDIR)$(HOMEDIR)/gdf) || exit $$?; \
	fi
	@for flag in ${MAKEFLAGS} ''; do \
	  case "$$flag" in *=*) ;; --*) ;; *[i]*) set +e;; esac; done; \
	for i in $(GDF); do \
		(set -x; $(INSTALL) $(INSTALLFLAGS) $(INSTDATFLAGS) $$i $(DESTDIR)$(HOMEDIR)/gdf) || exit $$?; \
	done

install:: $(MESSAGES)
	@if [ -d $(DESTDIR)$(HOMEDIR) ]; then \
		set +x; \
	else \
		if [ -h $(DESTDIR)$(HOMEDIR) ]; then \
			(set -x; rm -f $(DESTDIR)$(HOMEDIR)) || exit $$?; \
		fi; \
		(set -x; $(MKDIRHIER) $(DESTDIR)$(HOMEDIR)) || exit $$?; \
	fi
	@for flag in ${MAKEFLAGS} ''; do \
	  case "$$flag" in *=*) ;; --*) ;; *[i]*) set +e;; esac; done; \
	for i in $(MESSAGES); do \
		(set -x; $(INSTALL) $(INSTALLFLAGS) $(INSTDATFLAGS) $$i $(DESTDIR)$(HOMEDIR)) || exit $$?; \
	done

install:: $(BITMAPS)
	@if [ -d $(DESTDIR)$(HOMEDIR)/bitmaps ]; then \
		set +x; \
	else \
		if [ -h $(DESTDIR)$(HOMEDIR)/bitmaps ]; then \
			(set -x; rm -f $(DESTDIR)$(HOMEDIR)/bitmaps) || exit $$?; \
		fi; \
		(set -x; $(MKDIRHIER) $(DESTDIR)$(HOMEDIR)/bitmaps) || exit $$?; \
	fi
	@for flag in ${MAKEFLAGS} ''; do \
	  case "$$flag" in *=*) ;; --*) ;; *[i]*) set +e;; esac; done; \
	for i in $(BITMAPS); do \
		(set -x; $(INSTALL) $(INSTALLFLAGS) $(INSTDATFLAGS) $$i $(DESTDIR)$(HOMEDIR)/bitmaps) || exit $$?; \
	done

install:: $(SCRIPTS)
	@if [ -d $(DESTDIR)$(HOMEDIR)/scripts ]; then \
		set +x; \
	else \
		if [ -h $(DESTDIR)$(HOMEDIR)/scripts ]; then \
			(set -x; rm -f $(DESTDIR)$(HOMEDIR)/scripts) || exit $$?; \
		fi; \
		(set -x; $(MKDIRHIER) $(DESTDIR)$(HOMEDIR)/scripts) || exit $$?; \
	fi
	@for flag in ${MAKEFLAGS} ''; do \
	  case "$$flag" in *=*) ;; --*) ;; *[i]*) set +e;; esac; done; \
	for i in $(SCRIPTS); do \
		(set -x; $(INSTALL) $(INSTALLFLAGS) $(INSTDATFLAGS) $$i $(DESTDIR)$(HOMEDIR)/scripts) || exit $$?; \
	done

install:: $(EXAMPLE1)
	@if [ -d $(DESTDIR)$(HOMEDIR)/examples/ex1 ]; then \
		set +x; \
	else \
		if [ -h $(DESTDIR)$(HOMEDIR)/examples/ex1 ]; then \
			(set -x; rm -f $(DESTDIR)$(HOMEDIR)/examples/ex1) || exit $$?; \
		fi; \
		(set -x; $(MKDIRHIER) $(DESTDIR)$(HOMEDIR)/examples/ex1) || exit $$?; \
	fi
	@for flag in ${MAKEFLAGS} ''; do \
	  case "$$flag" in *=*) ;; --*) ;; *[i]*) set +e;; esac; done; \
	for i in $(EXAMPLE1); do \
		(set -x; $(INSTALL) $(INSTALLFLAGS) $(INSTDATFLAGS) $$i $(DESTDIR)$(HOMEDIR)/examples/ex1) || exit $$?; \
	done

install:: $(EXAMPLE2)
	@if [ -d $(DESTDIR)$(HOMEDIR)/examples/ex2 ]; then \
		set +x; \
	else \
		if [ -h $(DESTDIR)$(HOMEDIR)/examples/ex2 ]; then \
			(set -x; rm -f $(DESTDIR)$(HOMEDIR)/examples/ex2) || exit $$?; \
		fi; \
		(set -x; $(MKDIRHIER) $(DESTDIR)$(HOMEDIR)/examples/ex2) || exit $$?; \
	fi
	@for flag in ${MAKEFLAGS} ''; do \
	  case "$$flag" in *=*) ;; --*) ;; *[i]*) set +e;; esac; done; \
	for i in $(EXAMPLE2); do \
		(set -x; $(INSTALL) $(INSTALLFLAGS) $(INSTDATFLAGS) $$i $(DESTDIR)$(HOMEDIR)/examples/ex2) || exit $$?; \
	done

install:: $(EXAMPLE3)
	@if [ -d $(DESTDIR)$(HOMEDIR)/examples/ex3 ]; then \
		set +x; \
	else \
		if [ -h $(DESTDIR)$(HOMEDIR)/examples/ex3 ]; then \
			(set -x; rm -f $(DESTDIR)$(HOMEDIR)/examples/ex3) || exit $$?; \
		fi; \
		(set -x; $(MKDIRHIER) $(DESTDIR)$(HOMEDIR)/examples/ex3) || exit $$?; \
	fi
	@for flag in ${MAKEFLAGS} ''; do \
	  case "$$flag" in *=*) ;; --*) ;; *[i]*) set +e;; esac; done; \
	for i in $(EXAMPLE3); do \
		(set -x; $(INSTALL) $(INSTALLFLAGS) $(INSTDATFLAGS) $$i $(DESTDIR)$(HOMEDIR)/examples/ex3) || exit $$?; \
	done

install:: $(EXAMPLE4)
	@if [ -d $(DESTDIR)$(HOMEDIR)/examples/ex4 ]; then \
		set +x; \
	else \
		if [ -h $(DESTDIR)$(HOMEDIR)/examples/ex4 ]; then \
			(set -x; rm -f $(DESTDIR)$(HOMEDIR)/examples/ex4) || exit $$?; \
		fi; \
		(set -x; $(MKDIRHIER) $(DESTDIR)$(HOMEDIR)/examples/ex4) || exit $$?; \
	fi
	@for flag in ${MAKEFLAGS} ''; do \
	  case "$$flag" in *=*) ;; --*) ;; *[i]*) set +e;; esac; done; \
	for i in $(EXAMPLE4); do \
		(set -x; $(INSTALL) $(INSTALLFLAGS) $(INSTDATFLAGS) $$i $(DESTDIR)$(HOMEDIR)/examples/ex4) || exit $$?; \
	done

install:: $(EXAMPLE5)
	@if [ -d $(DESTDIR)$(HOMEDIR)/examples/ex5 ]; then \
		set +x; \
	else \
		if [ -h $(DESTDIR)$(HOMEDIR)/examples/ex5 ]; then \
			(set -x; rm -f $(DESTDIR)$(HOMEDIR)/examples/ex5) || exit $$?; \
		fi; \
		(set -x; $(MKDIRHIER) $(DESTDIR)$(HOMEDIR)/examples/ex5) || exit $$?; \
	fi
	@for flag in ${MAKEFLAGS} ''; do \
	  case "$$flag" in *=*) ;; --*) ;; *[i]*) set +e;; esac; done; \
	for i in $(EXAMPLE5); do \
		(set -x; $(INSTALL) $(INSTALLFLAGS) $(INSTDATFLAGS) $$i $(DESTDIR)$(HOMEDIR)/examples/ex5) || exit $$?; \
	done

install:: $(TUTORIALS)
	@if [ -d $(DESTDIR)$(HOMEDIR)/examples/tutorials ]; then \
		set +x; \
	else \
		if [ -h $(DESTDIR)$(HOMEDIR)/examples/tutorials ]; then \
			(set -x; rm -f $(DESTDIR)$(HOMEDIR)/examples/tutorials) || exit $$?; \
		fi; \
		(set -x; $(MKDIRHIER) $(DESTDIR)$(HOMEDIR)/examples/tutorials) || exit $$?; \
	fi
	@for flag in ${MAKEFLAGS} ''; do \
	  case "$$flag" in *=*) ;; --*) ;; *[i]*) set +e;; esac; done; \
	for i in $(TUTORIALS); do \
		(set -x; $(INSTALL) $(INSTALLFLAGS) $(INSTDATFLAGS) $$i $(DESTDIR)$(HOMEDIR)/examples/tutorials) || exit $$?; \
	done

install:: $(JATUTORIALS)
	@if [ -d $(DESTDIR)$(HOMEDIR)/examples/ja-tutorials ]; then \
		set +x; \
	else \
		if [ -h $(DESTDIR)$(HOMEDIR)/examples/ja-tutorials ]; then \
			(set -x; rm -f $(DESTDIR)$(HOMEDIR)/examples/ja-tutorials) || exit $$?; \
		fi; \
		(set -x; $(MKDIRHIER) $(DESTDIR)$(HOMEDIR)/examples/ja-tutorials) || exit $$?; \
	fi
	@for flag in ${MAKEFLAGS} ''; do \
	  case "$$flag" in *=*) ;; --*) ;; *[i]*) set +e;; esac; done; \
	for i in $(JATUTORIALS); do \
		(set -x; $(INSTALL) $(INSTALLFLAGS) $(INSTDATFLAGS) $$i $(DESTDIR)$(HOMEDIR)/examples/ja-tutorials) || exit $$?; \
	done

install:: $(DOCS)
	@if [ -d $(DESTDIR)$(HOMEDIR)/doc ]; then \
		set +x; \
	else \
		if [ -h $(DESTDIR)$(HOMEDIR)/doc ]; then \
			(set -x; rm -f $(DESTDIR)$(HOMEDIR)/doc) || exit $$?; \
		fi; \
		(set -x; $(MKDIRHIER) $(DESTDIR)$(HOMEDIR)/doc) || exit $$?; \
	fi
	@for flag in ${MAKEFLAGS} ''; do \
	  case "$$flag" in *=*) ;; --*) ;; *[i]*) set +e;; esac; done; \
	for i in $(DOCS); do \
		(set -x; $(INSTALL) $(INSTALLFLAGS) $(INSTDATFLAGS) $$i $(DESTDIR)$(HOMEDIR)/doc) || exit $$?; \
	done

install:: $(DOCFIGS)
	@if [ -d $(DESTDIR)$(HOMEDIR)/doc/fig ]; then \
		set +x; \
	else \
		if [ -h $(DESTDIR)$(HOMEDIR)/doc/fig ]; then \
			(set -x; rm -f $(DESTDIR)$(HOMEDIR)/doc/fig) || exit $$?; \
		fi; \
		(set -x; $(MKDIRHIER) $(DESTDIR)$(HOMEDIR)/doc/fig) || exit $$?; \
	fi
	@for flag in ${MAKEFLAGS} ''; do \
	  case "$$flag" in *=*) ;; --*) ;; *[i]*) set +e;; esac; done; \
	for i in $(DOCFIGS); do \
		(set -x; $(INSTALL) $(INSTALLFLAGS) $(INSTDATFLAGS) $$i $(DESTDIR)$(HOMEDIR)/doc/fig) || exit $$?; \
	done

all:: tkgate.$(MANNEWSUFFIX)

tkgate.$(MANNEWSUFFIX): tkgate.$(MANSRCSUFFIX)
	$(RM) $@
	if test -z "$(PREPROCESSMANPAGES)" ; then \
	   cd `dirname tkgate` && \
	   $(LN) `basename tkgate.$(MANSRCSUFFIX)` `basename $@`; \
	else \
	      	     $(RAWCPP)  $(MANDEFS) $(EXTRAMANDEFS) \
	     < tkgate.$(MANSRCSUFFIX) | sed -e '/^#  *[0-9][0-9]*  *.*$$/d' 			-e '/^#line  *[0-9][0-9]*  *.*$$/d' 			-e '/^[ 	]*XCOMM$$/s/XCOMM/#/' 			-e '/^[ 	]*XCOMM[^a-zA-Z0-9_]/s/XCOMM/#/' 			-e '/^[ 	]*XHASH/s/XHASH/#/' 			-e '/\@\@$$/s/\@\@$$/\\/' >$@; \
	fi

cleandir::
	$(RM) tkgate.$(MANNEWSUFFIX)

install.man:: tkgate.$(MANNEWSUFFIX)
	@if [ -d $(DESTDIR)$(MANDIR) ]; then \
		set +x; \
	else \
		if [ -h $(DESTDIR)$(MANDIR) ]; then \
			(set -x; rm -f $(DESTDIR)$(MANDIR)) || exit $$?; \
		fi; \
		(set -x; $(MKDIRHIER) $(DESTDIR)$(MANDIR)) || exit $$?; \
	fi
	$(INSTALL) $(INSTALLFLAGS) $(INSTMANFLAGS) tkgate.$(MANNEWSUFFIX) $(DESTDIR)$(MANDIR)/tkgate.$(MANSUFFIX)

all:: gmac.$(MANNEWSUFFIX)

gmac.$(MANNEWSUFFIX): gmac.$(MANSRCSUFFIX)
	$(RM) $@
	if test -z "$(PREPROCESSMANPAGES)" ; then \
	   cd `dirname gmac` && \
	   $(LN) `basename gmac.$(MANSRCSUFFIX)` `basename $@`; \
	else \
	      	     $(RAWCPP)  $(MANDEFS) $(EXTRAMANDEFS) \
	     < gmac.$(MANSRCSUFFIX) | sed -e '/^#  *[0-9][0-9]*  *.*$$/d' 			-e '/^#line  *[0-9][0-9]*  *.*$$/d' 			-e '/^[ 	]*XCOMM$$/s/XCOMM/#/' 			-e '/^[ 	]*XCOMM[^a-zA-Z0-9_]/s/XCOMM/#/' 			-e '/^[ 	]*XHASH/s/XHASH/#/' 			-e '/\@\@$$/s/\@\@$$/\\/' >$@; \
	fi

cleandir::
	$(RM) gmac.$(MANNEWSUFFIX)

install.man:: gmac.$(MANNEWSUFFIX)
	@if [ -d $(DESTDIR)$(MANDIR) ]; then \
		set +x; \
	else \
		if [ -h $(DESTDIR)$(MANDIR) ]; then \
			(set -x; rm -f $(DESTDIR)$(MANDIR)) || exit $$?; \
		fi; \
		(set -x; $(MKDIRHIER) $(DESTDIR)$(MANDIR)) || exit $$?; \
	fi
	$(INSTALL) $(INSTALLFLAGS) $(INSTMANFLAGS) gmac.$(MANNEWSUFFIX) $(DESTDIR)$(MANDIR)/gmac.$(MANSUFFIX)
#
# Create a FreeBSD packing list.  This rule will only work for the standard
# FreeBSD installation directory.
#
pkg-plist::
	rm -f pkg-plist
	echo "@name tkgate-$(VERSION)" >> pkg-plist
	echo "@cwd /usr/X11R6" >> pkg-plist
	echo "bin/tkgate" >> pkg-plist
	echo "bin/gmac" >> pkg-plist
	(cd $(HOMEDIR)/../..; find lib/tkgate-$(VERSION) -type f -print) >> pkg-plist
	echo "@dirrm lib/tkgate-$(VERSION)/bitmaps" >> pkg-plist
	echo "@dirrm lib/tkgate-$(VERSION)/scripts" >> pkg-plist
	echo "@dirrm lib/tkgate-$(VERSION)/doc/fig" >> pkg-plist
	echo "@dirrm lib/tkgate-$(VERSION)/doc" >> pkg-plist
	echo "@dirrm lib/tkgate-$(VERSION)/gdf" >> pkg-plist
	echo "@dirrm lib/tkgate-$(VERSION)/libexec" >> pkg-plist
	echo "@dirrm lib/tkgate-$(VERSION)/examples/ex1" >> pkg-plist
	echo "@dirrm lib/tkgate-$(VERSION)/examples/ex2" >> pkg-plist
	echo "@dirrm lib/tkgate-$(VERSION)/examples/ex3" >> pkg-plist
	echo "@dirrm lib/tkgate-$(VERSION)/examples/ex4" >> pkg-plist
	echo "@dirrm lib/tkgate-$(VERSION)/examples/ex5" >> pkg-plist
	echo "@dirrm lib/tkgate-$(VERSION)/examples/tutorials" >> pkg-plist
	echo "@dirrm lib/tkgate-$(VERSION)/examples/ja-tutorials" >> pkg-plist
	echo "@dirrm lib/tkgate-$(VERSION)/examples" >> pkg-plist
	echo "@dirrm lib/tkgate-$(VERSION)" >> pkg-plist
messages.ja.utf8::
	iconv -f euc-jp -t utf-8 messages.ja.euc > messages.ja.utf8
cleanclean::	cleandir
	rm -f src/common/Makefile src/tkgate/Makefile src/gsim/Makefile src/gmac/Makefile Makefile tkgate-error.log
	find . -name "*~" -delete
	find . -name "*.core" -delete
	touch tkgate-error.log
# ----------------------------------------------------------------------
# common rules for all Makefiles - do not edit
.c.i:
	$(RM) $@
	 	$(CC) -E $(CFLAGS) $(_NOOP_) $*.c > $@
.SUFFIXES: .ii
.cc.ii:
	$(RM) $@
	 	$(CC) -E $(CFLAGS) $(_NOOP_) $*.cc > $@
.SUFFIXES: .s
.c.s:
	$(RM) $@
	 	$(CC) -S $(CFLAGS) $(_NOOP_) $*.c
.cc.s:
	$(RM) $@
	 	$(CC) -S $(CFLAGS) $(_NOOP_) $*.cc

emptyrule::

cleandir::
	$(RM) *.CKP *.ln *.BAK *.bak *.o core errs ,* *~ *.a .emacs_* tags TAGS make.log MakeOut   "#"*

Makefile::
	-@if [ -f Makefile ]; then set -x; \
	$(RM) Makefile.bak; $(MV) Makefile Makefile.bak; \
	else exit 0; fi
	$(IMAKE_CMD) -DTOPDIR=$(TOP) -DCURDIR=$(CURRENT_DIR)

tags::
	$(TAGS) -w *.[ch]
	$(TAGS) -xw *.[ch] > TAGS

man_keywords::
html_index::

clean:: cleandir
distclean:: cleandir
# ----------------------------------------------------------------------
# rules for building in SUBDIRS - do not edit

install::
	@for flag in ${MAKEFLAGS} ''; do \
	  case "$$flag" in *=*) ;; --*) ;; *[ik]*) set +e;; esac; done; \
	for i in $(SUBDIRS) ;\
	do \
		echo "installing" "in $(CURRENT_DIR)/$$i..."; \
		(cd $$i && $(MAKE) $(MFLAGS) $(PARALLELMFLAGS) \
			DESTDIR=$(DESTDIR) install) || exit $$?; \
	done

install.man::
	@for flag in ${MAKEFLAGS} ''; do \
	  case "$$flag" in *=*) ;; --*) ;; *[ik]*) set +e;; esac; done; \
	for i in $(SUBDIRS) ;\
	do \
		echo "installing man pages" "in $(CURRENT_DIR)/$$i..."; \
		(cd $$i && $(MAKE) $(MFLAGS) $(PARALLELMFLAGS) \
			DESTDIR=$(DESTDIR) install.man) || exit $$?; \
	done

clean::
	@for flag in ${MAKEFLAGS} ''; do \
	  case "$$flag" in *=*) ;; --*) ;; *[ik]*) set +e;; esac; done; \
	for i in $(SUBDIRS) ;\
	do \
		echo "cleaning" "in $(CURRENT_DIR)/$$i..."; \
		(cd $$i && $(MAKE) $(MFLAGS) $(PARALLELMFLAGS) \
				 clean) || exit $$?; \
	done

tags::
	@for flag in ${MAKEFLAGS} ''; do \
	  case "$$flag" in *=*) ;; --*) ;; *[ik]*) set +e;; esac; done; \
	for i in $(SUBDIRS) ;\
	do \
		echo "tagging" "in $(CURRENT_DIR)/$$i..."; \
		(cd $$i && $(MAKE) $(MFLAGS) $(PARALLELMFLAGS) \
			TAGS='$(TAGS)' tags) || exit $$?; \
	done

$(ONESUBDIR)/Makefile:
	@for flag in ${MAKEFLAGS} ''; do \
	  case "$$flag" in *=*) ;; --*) ;; *[n]*) executeit="no";; esac; done; \
	cd $(ONESUBDIR) && \
	if [ "$$executeit" != "no" ]; then \
		$(IMAKE_CMD) -DTOPDIR=$(IMAKETOP) -DCURDIR=$(ONECURDIR)$(ONESUBDIR); \
	fi;

Makefiles::
	-@for flag in ${MAKEFLAGS} ''; do \
	  case "$$flag" in *=*) ;; --*) ;; *[ik]*) set +e;; esac; done; \
	for flag in ${MAKEFLAGS} ''; do \
	  case "$$flag" in *=*) ;; --*) ;; *[n]*) executeit="no";; esac; done; \
	for i in $(SUBDIRS) ;\
	do \
		case "$(CURRENT_DIR)" in \
		.) curdir= ;; \
		*) curdir=$(CURRENT_DIR)/ ;; \
		esac; \
		echo "making Makefiles in $$curdir$$i..."; \
		itmp=`echo $$i | sed -e 's;^\./;;g' -e 's;/\./;/;g'`; \
		curtmp="$(CURRENT_DIR)" \
		toptmp=""; \
		case "$$itmp" in \
		    ../?*) \
			while echo "$$itmp" | grep '^\.\./' > /dev/null;\
			  do \
			     toptmp="/`basename $$curtmp`$$toptmp"; \
			     curtmp="`dirname $$curtmp`"; \
			     itmp="`echo $$itmp | sed 's;\.\./;;'`"; \
			  done \
		    ;; \
		esac; \
		case "$$itmp" in \
		*/?*/?*/?*/?*)	newtop=../../../../..;; \
		*/?*/?*/?*)	newtop=../../../..;; \
		*/?*/?*)	newtop=../../..;; \
		*/?*)		newtop=../..;; \
		*)		newtop=..;; \
		esac; \
		newtop="$$newtop$$toptmp"; \
		case "$(TOP)" in \
		/?*) imaketop=$(TOP) \
		     imakeprefix= ;; \
		.) imaketop=$$newtop \
		   imakeprefix=$$newtop/ ;; \
		*) imaketop=$$newtop/$(TOP) \
		   imakeprefix=$$newtop/ ;; \
		esac; \
		$(RM) $$i/Makefile.bak; \
		if [ -f $$i/Makefile ]; then \
			echo "	$(MV) Makefile Makefile.bak"; \
			if [ "$$executeit" != "no" ]; then \
				$(MV) $$i/Makefile $$i/Makefile.bak; \
			fi; \
		fi; \
		$(MAKE) $(MFLAGS) $(MAKE_OPTS) ONESUBDIR=$$i ONECURDIR=$$curdir IMAKETOP=$$imaketop IMAKEPREFIX=$$imakeprefix $$i/Makefile; \
		if [ -d $$i ] ; then \
			cd $$i; \
			$(MAKE) $(MFLAGS) Makefiles; \
			cd $$newtop; \
		else \
			exit 1; \
		fi; \
	done

includes::
	@for flag in ${MAKEFLAGS} ''; do \
	  case "$$flag" in *=*) ;; --*) ;; *[ik]*) set +e;; esac; done; \
	for i in $(SUBDIRS) ;\
	do \
		echo including "in $(CURRENT_DIR)/$$i..."; \
		(cd $$i && $(MAKE) $(MFLAGS) $(PARALLELMFLAGS) \
			 includes) || exit $$?; \
	done

distclean::
	@for flag in ${MAKEFLAGS} ''; do \
	  case "$$flag" in *=*) ;; --*) ;; *[ik]*) set +e;; esac; done; \
	for i in $(SUBDIRS) ;\
	do \
		echo "cleaning" "in $(CURRENT_DIR)/$$i..."; \
		(cd $$i && $(MAKE) $(MFLAGS) $(PARALLELMFLAGS) \
			 distclean) || exit $$?; \
	done

distclean::
	$(RM) Makefile Makefile.dep
# ----------------------------------------------------------------------
# dependencies generated by makedepend

