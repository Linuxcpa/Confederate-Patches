These patches were created in a GCC4 nighly, Rev 47523.

I used pkgsrc stable 2014-Q2.

Origin of patches:

Unfortunately, I didn't follow a consistent framework when making changes. 
However, in general, my methodology was as follows:

1. Attempt to compile without my actively patching:
If the compile suceeded, it was because:
a.) The pkgsrc settings used replaced otherwise necessary patching
b.) The source code will compile in a vanilla state
c.) Pkgsrc patches caused the compile to suceed
d.) Diger's localpatches for pkgsrc caused the compile to succeed
In situations a - d above, I am most likely unaware of which of these factors resulted in success.

2. Attempt to patch the source with:
a.) Patches from Haikuports
b.) Patches otherwise available (pingwinek, email list discussions, etc.)
c.) Patch the source myself in a way that is most likely acceptable (add a header, simple function definition)
d.) Patch the source myself in away that I cannot determine the appropriateness of the change
I cannot easily differentiate between situatons a-d above. 
However, I have tracked the changes by providing either a full file (Most cases) or a patch (rarely).

Statistics:

In geberal, Pkgsrc provides 39 categories in which packages can be compiled for Haiku.
Additional to the specific statistics I provide below by category, there are chronic
system wide issues that cause compilation failures thatare common to each category.
In some cases, I was able to sucessfully compile a package because I had resolved the 
underlying chronic issue, not because I made changes to the code or the compile process:

1. Dependencies that will not compile without patching or pkgsrc override.
2. Undefined references
3. Previously defined references
4. Unavailable header
5. Available headers not found, source code #include <> pathed differenly from system, no redirecting header 
6. Trouble resolving symbols
7. Unrecognized command line option: -rdynamic
8. Unknown name type: fd_set
9. Hard links in source code tar files, cannot extract
10. Unknown name type: int(number)_t, u_int(number)_t
11. Previous declarations
12. Invalid conversions
13. Undeclared functions
14. Undefined reference to va_list
15. Undefined reference to shm*
16. Missing boost headers
17. Libtool builds with .lax folders in which symlinks to built libraries are broken
18. Function undeclared in scope
19. Configure file not modified to build for Haiku

In general, Haiku only has a 10% to 20% sucessful build rate.
By vanilla, I mean the source code is not patched and pkgsrc settings to avoid errors, are not in place.

Category statistics:

I will provide, in separate files, an updated set of statistics for each category.
However, the breakdown is as follows:

Archivers: 
105 Available, 76 compiled
18 known packages that required modification to compile:
a.) Code changes: 18
b.) Changes to makefiles: 2
c.) Pkgsrc settings produced sucessful compile: 4

1. Audio: 
477 Available, 93 compiled
No further analysis has been performed yet.
However, I had issues getting SDL to compile, until I recently used Diger's settings.

2. Benchmarks: 
43 Available, 27 compiled
8 known packages that required modification to compile:
a.) Code changes: 6
b.) Pkgsrc settings produced sucessful compile: 2

3. Biolgy: 
35 Available, 21 compiled
0 known packages that required modification to compile.
